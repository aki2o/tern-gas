{"spreadsheet.SpreadsheetApp":{"name":"SpreadsheetApp","kind":"class","global":true,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app","doc":"Access and create Google Sheets files. This class is the parent class for the Spreadsheet service.","property":[{"name":"AutoFillSeries","type":"spreadsheet.AutoFillSeries","doc":"An enumeration of the types of series used to calculate auto-filled values."},{"name":"BandingTheme","type":"spreadsheet.BandingTheme","doc":"An enumeration of the possible banding themes."},{"name":"BooleanCriteria","type":"spreadsheet.BooleanCriteria","doc":"An enumeration of conditional formatting boolean criteria."},{"name":"BorderStyle","type":"spreadsheet.BorderStyle","doc":"An enumeration of the valid styles for setting borders on a Range."},{"name":"CopyPasteType","type":"spreadsheet.CopyPasteType","doc":"An enumeration of the possible paste types."},{"name":"DataValidationCriteria","type":"spreadsheet.DataValidationCriteria","doc":"An enumeration representing the data validation criteria that can be set on a range."},{"name":"Dimension","type":"spreadsheet.Dimension","doc":"An enumeration of the possible dimensions of a spreadsheet."},{"name":"Direction","type":"spreadsheet.Direction","doc":"A enumeration of the possible directions that one can move within a spreadsheet using the arrow keys."},{"name":"GroupControlTogglePosition","type":"spreadsheet.GroupControlTogglePosition","doc":"An enumeration of the positions that the group control toggle can be in."},{"name":"InterpolationType","type":"spreadsheet.InterpolationType","doc":"An enumeration of conditional format gradient interpolation types."},{"name":"PivotTableSummarizeFunction","type":"spreadsheet.PivotTableSummarizeFunction","doc":"An enumeration of the functions that may be used to summarize values in a pivot table."},{"name":"PivotValueDisplayType","type":"spreadsheet.PivotValueDisplayType","doc":"An enumeration of the ways that a pivot value may be displayed."},{"name":"ProtectionType","type":"spreadsheet.ProtectionType","doc":"An enumeration representing the parts of a spreadsheet that can be protected from edits."},{"name":"RelativeDate","type":"spreadsheet.RelativeDate","doc":"An enumeration of relative date options for calculating a value to be used in date-based BooleanCriteria."},{"name":"TextDirection","type":"spreadsheet.TextDirection","doc":"An enumeration of valid text directions."},{"name":"TextToColumnsDelimiter","type":"spreadsheet.TextToColumnsDelimiter","doc":"An enumeration of the preset delimiters for split text to columns."},{"name":"WrapStrategy","type":"spreadsheet.WrapStrategy","doc":"An enumeration of the strategies used for wrapping cells."}],"method":[{"name":"create","signature":"create(name)","return":"spreadsheet.Spreadsheet","doc":"Creates a new spreadsheet with the given name.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#create(String)","argument":[{"name":"name","type":"String","doc":"The name for the spreadsheet."}]},{"name":"create","signature":"create(name, rows, columns)","return":"spreadsheet.Spreadsheet","doc":"Creates a new spreadsheet with the given name and the specified number of rows and columns.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#create(String,Integer,Integer)","argument":[{"name":"name","type":"String","doc":"The name for the spreadsheet."},{"name":"rows","type":"Integer","doc":"The number of rows for the spreadsheet."},{"name":"columns","type":"Integer","doc":"The number of columns for the spreadsheet."}]},{"name":"flush","signature":"flush()","return":"void","doc":"Applies all pending Spreadsheet changes.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#flush()","argument":[]},{"name":"getActive","signature":"getActive()","return":"spreadsheet.Spreadsheet","doc":"Returns the currently active spreadsheet, or null if there is none.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#getActive()","argument":[]},{"name":"getActiveRange","signature":"getActiveRange()","return":"spreadsheet.Range","doc":"Returns the selected range in the active sheet, or null if there is no active range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#getActiveRange()","argument":[]},{"name":"getActiveRangeList","signature":"getActiveRangeList()","return":"spreadsheet.RangeList","doc":"Returns the list of active ranges in the active sheet or null if there are no ranges selected.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#getActiveRangeList()","argument":[]},{"name":"getActiveSheet","signature":"getActiveSheet()","return":"spreadsheet.Sheet","doc":"Gets the active sheet in a spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#getActiveSheet()","argument":[]},{"name":"getActiveSpreadsheet","signature":"getActiveSpreadsheet()","return":"spreadsheet.Spreadsheet","doc":"Returns the currently active spreadsheet, or null if there is none.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#getActiveSpreadsheet()","argument":[]},{"name":"getCurrentCell","signature":"getCurrentCell()","return":"spreadsheet.Range","doc":"Returns the current (highlighted) cell that is selected in one of the active ranges in the active sheet or null if there is no current cell.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#getCurrentCell()","argument":[]},{"name":"getSelection","signature":"getSelection()","return":"spreadsheet.Selection","doc":"Returns the current Selection in the spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#getSelection()","argument":[]},{"name":"getUi","signature":"getUi()","return":"base.Ui","doc":"Returns an instance of the spreadsheet's user-interface environment that allows the script to add features like menus, dialogs, and sidebars.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#getUi()","argument":[]},{"name":"newConditionalFormatRule","signature":"newConditionalFormatRule()","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Creates a builder for a conditional formatting rule.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#newConditionalFormatRule()","argument":[]},{"name":"newDataValidation","signature":"newDataValidation()","return":"spreadsheet.DataValidationBuilder","doc":"Creates a builder for a data validation rule.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#newDataValidation()","argument":[]},{"name":"newFilterCriteria","signature":"newFilterCriteria()","return":"spreadsheet.FilterCriteriaBuilder","doc":"Creates a builder for a FilterCriteria.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#newFilterCriteria()","argument":[]},{"name":"open","signature":"open(file)","return":"spreadsheet.Spreadsheet","doc":"Opens the spreadsheet that corresponds to the given File object.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#open(File)","argument":[{"name":"file","type":"drive.File","doc":"The file to open."}]},{"name":"openById","signature":"openById(id)","return":"spreadsheet.Spreadsheet","doc":"Opens the spreadsheet with the given ID.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#openById(String)","argument":[{"name":"id","type":"String","doc":"The unique identifier for the spreadsheet."}]},{"name":"openByUrl","signature":"openByUrl(url)","return":"spreadsheet.Spreadsheet","doc":"Opens the spreadsheet with the given URL.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#openByUrl(String)","argument":[{"name":"url","type":"String","doc":"The URL for the spreadsheet."}]},{"name":"setActiveRange","signature":"setActiveRange(range)","return":"spreadsheet.Range","doc":"Sets the specified range as the active range, with the top left cell in the range as the current cell.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#setActiveRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to be made the active range."}]},{"name":"setActiveRangeList","signature":"setActiveRangeList(rangeList)","return":"spreadsheet.RangeList","doc":"Sets the specified list of ranges as the active ranges.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#setActiveRangeList(RangeList)","argument":[{"name":"rangeList","type":"spreadsheet.RangeList","doc":"The list of ranges to select."}]},{"name":"setActiveSheet","signature":"setActiveSheet(sheet)","return":"spreadsheet.Sheet","doc":"Sets the active sheet in a spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#setActiveSheet(Sheet)","argument":[{"name":"sheet","type":"spreadsheet.Sheet","doc":"The new active sheet."}]},{"name":"setActiveSheet","signature":"setActiveSheet(sheet, restoreSelection)","return":"spreadsheet.Sheet","doc":"Sets the active sheet in a spreadsheet, with the option to restore the most recent selection within that sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#setActiveSheet(Sheet,Boolean)","argument":[{"name":"sheet","type":"spreadsheet.Sheet","doc":"The new active sheet."},{"name":"restoreSelection","type":"Boolean","doc":"If true, the most recent selection of the new active sheet becomes selected again as the new sheet becomes active; if false, the new sheet becomes active without changing the current selection."}]},{"name":"setActiveSpreadsheet","signature":"setActiveSpreadsheet(newActiveSpreadsheet)","return":"void","doc":"Sets the active spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#setActiveSpreadsheet(Spreadsheet)","argument":[{"name":"newActiveSpreadsheet","type":"spreadsheet.Spreadsheet","doc":"The Spreadsheet to be made the active spreadsheet."}]},{"name":"setCurrentCell","signature":"setCurrentCell(cell)","return":"spreadsheet.Range","doc":"Sets the specified cell as the current cell.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app/#setCurrentCell(Range)","argument":[{"name":"cell","type":"spreadsheet.Range","doc":"The cell to set as the current cell."}]}]},"spreadsheet.Banding":{"name":"Banding","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding","doc":"Access and modify bandings, the color patterns applied to rows or columns of a range. Each banding consists of a range and a set of colors for rows, columns, headers, and footers.","property":[],"method":[{"name":"copyTo","signature":"copyTo(range)","return":"spreadsheet.Banding","doc":"Copies this banding to another range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding/#copyTo(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to copy this banding to."}]},{"name":"getFirstColumnColor","signature":"getFirstColumnColor()","return":"String","doc":"Returns the first column color that is alternating, or null if no color is set.","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding/#getFirstColumnColor()","argument":[]},{"name":"getFirstRowColor","signature":"getFirstRowColor()","return":"String","doc":"Returns the first row color that is alternating or null if no color is set.","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding/#getFirstRowColor()","argument":[]},{"name":"getFooterColumnColor","signature":"getFooterColumnColor()","return":"String","doc":"Returns the color of the last column, or null if no color is set.","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding/#getFooterColumnColor()","argument":[]},{"name":"getFooterRowColor","signature":"getFooterRowColor()","return":"String","doc":"Returns the color of the last row, or null if no color is set.","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding/#getFooterRowColor()","argument":[]},{"name":"getHeaderColumnColor","signature":"getHeaderColumnColor()","return":"String","doc":"Returns the color of the header column, or null if no color is set.","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding/#getHeaderColumnColor()","argument":[]},{"name":"getHeaderRowColor","signature":"getHeaderRowColor()","return":"String","doc":"Returns the color of the header row or null if no color is set.","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding/#getHeaderRowColor()","argument":[]},{"name":"getRange","signature":"getRange()","return":"spreadsheet.Range","doc":"Returns the range for this banding.","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding/#getRange()","argument":[]},{"name":"getSecondColumnColor","signature":"getSecondColumnColor()","return":"String","doc":"Returns the second column color that is alternating, or null if no color is set.","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding/#getSecondColumnColor()","argument":[]},{"name":"getSecondRowColor","signature":"getSecondRowColor()","return":"String","doc":"Returns the second row color that is alternating or null if no color is set.","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding/#getSecondRowColor()","argument":[]},{"name":"remove","signature":"remove()","return":"void","doc":"Removes this banding.","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding/#remove()","argument":[]},{"name":"setFirstColumnColor","signature":"setFirstColumnColor(color)","return":"spreadsheet.Banding","doc":"Sets the first column color that is alternating.","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding/#setFirstColumnColor(String)","argument":[{"name":"color","type":"String","doc":"The color code in CSS notation (such as '#ffffff' or 'white'), or null to clear the color.."}]},{"name":"setFirstRowColor","signature":"setFirstRowColor(color)","return":"spreadsheet.Banding","doc":"Sets the first row color that is alternating.","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding/#setFirstRowColor(String)","argument":[{"name":"color","type":"String","doc":"The color code in CSS notation (such as '#ffffff' or 'white'), or null to clear the color."}]},{"name":"setFooterColumnColor","signature":"setFooterColumnColor(color)","return":"spreadsheet.Banding","doc":"Sets the color of the last column.","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding/#setFooterColumnColor(String)","argument":[{"name":"color","type":"String","doc":"The color code in CSS notation (such as '#ffffff' or 'white'), or null to clear the color."}]},{"name":"setFooterRowColor","signature":"setFooterRowColor(color)","return":"spreadsheet.Banding","doc":"Sets the color of the last row.","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding/#setFooterRowColor(String)","argument":[{"name":"color","type":"String","doc":"The color code in CSS notation (such as '#ffffff' or 'white'), or null to clear the color."}]},{"name":"setHeaderColumnColor","signature":"setHeaderColumnColor(color)","return":"spreadsheet.Banding","doc":"Sets the color of the header column.","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding/#setHeaderColumnColor(String)","argument":[{"name":"color","type":"String","doc":"The color code in CSS notation (such as '#ffffff' or 'white'), or null to clear the color."}]},{"name":"setHeaderRowColor","signature":"setHeaderRowColor(color)","return":"spreadsheet.Banding","doc":"Sets the color of the header row.","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding/#setHeaderRowColor(String)","argument":[{"name":"color","type":"String","doc":"The color code in CSS notation (such as '#ffffff' or 'white'), or null to clear the color."}]},{"name":"setRange","signature":"setRange(range)","return":"spreadsheet.Banding","doc":"Sets the range for this banding.","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding/#setRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The new range for this banding."}]},{"name":"setSecondColumnColor","signature":"setSecondColumnColor(color)","return":"spreadsheet.Banding","doc":"Sets the second column color that is alternating.","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding/#setSecondColumnColor(String)","argument":[{"name":"color","type":"String","doc":"The color code in CSS notation (such as '#ffffff' or 'white'), or null to clear the color."}]},{"name":"setSecondRowColor","signature":"setSecondRowColor(color)","return":"spreadsheet.Banding","doc":"Sets the second row color that is alternating.","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding/#setSecondRowColor(String)","argument":[{"name":"color","type":"String","doc":"The color code in CSS notation (such as '#ffffff' or 'white'), or null to clear the color."}]}]},"spreadsheet.BooleanCondition":{"name":"BooleanCondition","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/boolean-condition","doc":"Access boolean conditions in ConditionalFormatRules. Each conditional format rule may contain a single boolean condition. The boolean condition itself contains a boolean criteria (with values) and formatting settings. The criteria is evaluated against the content of a cell resulting in either a true or false value. If the criteria evaluates to true, the condition's formatting settings are applied to the cell.","property":[],"method":[{"name":"getBackground","signature":"getBackground()","return":"String","doc":"Gets the background color string for this boolean condition.","url":"https://developers.google.com/apps-script/reference/spreadsheet/boolean-condition/#getBackground()","argument":[]},{"name":"getBold","signature":"getBold()","return":"Boolean","doc":"Returns true if this boolean condition bolds the text and returns false if this boolean condition removes bolding from the text.","url":"https://developers.google.com/apps-script/reference/spreadsheet/boolean-condition/#getBold()","argument":[]},{"name":"getCriteriaType","signature":"getCriteriaType()","return":"spreadsheet.BooleanCriteria","doc":"Gets the rule's criteria type as defined in the BooleanCriteria enum.","url":"https://developers.google.com/apps-script/reference/spreadsheet/boolean-condition/#getCriteriaType()","argument":[]},{"name":"getCriteriaValues","signature":"getCriteriaValues()","return":"Object[]","doc":"Gets an array of arguments for the rule's criteria.","url":"https://developers.google.com/apps-script/reference/spreadsheet/boolean-condition/#getCriteriaValues()","argument":[]},{"name":"getFontColor","signature":"getFontColor()","return":"String","doc":"Gets the font color string for this boolean condition.","url":"https://developers.google.com/apps-script/reference/spreadsheet/boolean-condition/#getFontColor()","argument":[]},{"name":"getItalic","signature":"getItalic()","return":"Boolean","doc":"Returns true if this boolean condition italicises the text and returns false if this boolean condition removes italics from the text.","url":"https://developers.google.com/apps-script/reference/spreadsheet/boolean-condition/#getItalic()","argument":[]},{"name":"getStrikethrough","signature":"getStrikethrough()","return":"Boolean","doc":"Returns true if this boolean condition strikes through the text and returns false if this boolean condition removes strikethrough from the text.","url":"https://developers.google.com/apps-script/reference/spreadsheet/boolean-condition/#getStrikethrough()","argument":[]},{"name":"getUnderline","signature":"getUnderline()","return":"Boolean","doc":"Returns true if this boolean condition underlines the text and returns false if this boolean condition removes underlining from the text.","url":"https://developers.google.com/apps-script/reference/spreadsheet/boolean-condition/#getUnderline()","argument":[]}]},"spreadsheet.ConditionalFormatRule":{"name":"ConditionalFormatRule","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule","doc":"Access conditional formatting rules. To create a new rule, use SpreadsheetApp.newConditionalFormatRule() and ConditionalFormatRuleBuilder. You can use Sheet.setConditionalFormatRules(rules) to set the rules for a given sheet.","property":[],"method":[{"name":"copy","signature":"copy()","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Returns a rule builder preset with this rule's settings.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule/#copy()","argument":[]},{"name":"getBooleanCondition","signature":"getBooleanCondition()","return":"spreadsheet.BooleanCondition","doc":"Retrieves the rule's BooleanCondition information if this rule uses boolean condition criteria.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule/#getBooleanCondition()","argument":[]},{"name":"getGradientCondition","signature":"getGradientCondition()","return":"spreadsheet.GradientCondition","doc":"Retrieves the rule's GradientCondition information, if this rule uses gradient condition criteria.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule/#getGradientCondition()","argument":[]},{"name":"getRanges","signature":"getRanges()","return":"spreadsheet.Range[]","doc":"Retrieves the ranges to which this conditional format rule is applied.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule/#getRanges()","argument":[]}]},"spreadsheet.ConditionalFormatRuleBuilder":{"name":"ConditionalFormatRuleBuilder","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder","doc":"Builder for conditional format rules.","property":[],"method":[{"name":"build","signature":"build()","return":"spreadsheet.ConditionalFormatRule","doc":"Constructs a conditional format rule from the settings applied to the builder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#build()","argument":[]},{"name":"copy","signature":"copy()","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Returns a rule builder preset with this rule's settings.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#copy()","argument":[]},{"name":"getBooleanCondition","signature":"getBooleanCondition()","return":"spreadsheet.BooleanCondition","doc":"Retrieves the rule's BooleanCondition information if this rule uses boolean condition criteria.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#getBooleanCondition()","argument":[]},{"name":"getGradientCondition","signature":"getGradientCondition()","return":"spreadsheet.GradientCondition","doc":"Retrieves the rule's GradientCondition information, if this rule uses gradient condition criteria.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#getGradientCondition()","argument":[]},{"name":"getRanges","signature":"getRanges()","return":"spreadsheet.Range[]","doc":"Retrieves the ranges to which this conditional format rule is applied.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#getRanges()","argument":[]},{"name":"setBackground","signature":"setBackground(color)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the background color for the conditional format rule's format.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#setBackground(String)","argument":[{"name":"color","type":"String","doc":"The desired color or null to clear."}]},{"name":"setBold","signature":"setBold(bold)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets text bolding for the conditional format rule's format.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#setBold(Boolean)","argument":[{"name":"bold","type":"Boolean","doc":"Whether or not the text should be bolded if the format condition is met; null removes this setting."}]},{"name":"setFontColor","signature":"setFontColor(color)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the font color for the conditional format rule's format.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#setFontColor(String)","argument":[{"name":"color","type":"String","doc":"The desired color or null to clear."}]},{"name":"setGradientMaxpoint","signature":"setGradientMaxpoint(color)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Clears the conditional format rule's gradient maxpoint value, and instead uses the maximum value in the rule's ranges.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#setGradientMaxpoint(String)","argument":[{"name":"color","type":"String","doc":"The maxpoint color to set."}]},{"name":"setGradientMaxpointWithValue","signature":"setGradientMaxpointWithValue(color, type, value)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule's gradient maxpoint fields.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#setGradientMaxpointWithValue(String,InterpolationType,String)","argument":[{"name":"color","type":"String","doc":"The maxpoint color to set."},{"name":"type","type":"spreadsheet.InterpolationType","doc":"The maxpoint interpolation type to set."},{"name":"value","type":"String","doc":"The maxpoint value to set."}]},{"name":"setGradientMidpointWithValue","signature":"setGradientMidpointWithValue(color, type, value)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule's gradient midpoint fields.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#setGradientMidpointWithValue(String,InterpolationType,String)","argument":[{"name":"color","type":"String","doc":"The midpoint color to set."},{"name":"type","type":"spreadsheet.InterpolationType","doc":"The midpoint interpolation type to set or null to clear."},{"name":"value","type":"String","doc":"The midpoint value to set."}]},{"name":"setGradientMinpoint","signature":"setGradientMinpoint(color)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Clears the conditional format rule's gradient minpoint value, and instead uses the minimum value in the rule's ranges.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#setGradientMinpoint(String)","argument":[{"name":"color","type":"String","doc":"The minpoint color to set."}]},{"name":"setGradientMinpointWithValue","signature":"setGradientMinpointWithValue(color, type, value)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule's gradient minpoint fields.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#setGradientMinpointWithValue(String,InterpolationType,String)","argument":[{"name":"color","type":"String","doc":"The minpoint color to set."},{"name":"type","type":"spreadsheet.InterpolationType","doc":"The minpoint interpolation type to set."},{"name":"value","type":"String","doc":"The minpoint value to set."}]},{"name":"setItalic","signature":"setItalic(italic)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets text italics for the conditional format rule's format.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#setItalic(Boolean)","argument":[{"name":"italic","type":"Boolean","doc":"Whether or not the text should be italicised if the format condition is met; null removes this setting."}]},{"name":"setRanges","signature":"setRanges(ranges)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets one or more ranges to which this conditional format rule is applied.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#setRanges(Range)","argument":[{"name":"ranges","type":"spreadsheet.Range[]","doc":"The ranges to which this conditional format rule is applied."}]},{"name":"setStrikethrough","signature":"setStrikethrough(strikethrough)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets text strikethrough for the conditional format rule's format.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#setStrikethrough(Boolean)","argument":[{"name":"strikethrough","type":"Boolean","doc":"Whether or not the text should be struckthrough if the format condition is met; null removes this setting."}]},{"name":"setUnderline","signature":"setUnderline(underline)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets text underlining for the conditional format rule's format.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#setUnderline(Boolean)","argument":[{"name":"underline","type":"Boolean","doc":"Whether or not the text should be underlined if the format condition is met; null removes this setting."}]},{"name":"whenCellEmpty","signature":"whenCellEmpty()","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when the cell is empty.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenCellEmpty()","argument":[]},{"name":"whenCellNotEmpty","signature":"whenCellNotEmpty()","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when the cell is not empty.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenCellNotEmpty()","argument":[]},{"name":"whenDateAfter","signature":"whenDateAfter(date)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when a date is after the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenDateAfter(Date)"},{"name":"whenDateAfter","signature":"whenDateAfter(date)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when a date is after the given relative date.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenDateAfter(RelativeDate)","argument":[{"name":"date","type":"spreadsheet.RelativeDate","doc":"The latest date relative to the date type selected."}]},{"name":"whenDateBefore","signature":"whenDateBefore(date)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when a date is before the given date.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenDateBefore(Date)"},{"name":"whenDateBefore","signature":"whenDateBefore(date)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when a date is before the given relative date.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenDateBefore(RelativeDate)","argument":[{"name":"date","type":"spreadsheet.RelativeDate","doc":"The latest date relative to the date type selected."}]},{"name":"whenDateEqualTo","signature":"whenDateEqualTo(date)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when a date is equal to the given date.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenDateEqualTo(Date)"},{"name":"whenDateEqualTo","signature":"whenDateEqualTo(date)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when a date is equal to the given relative date.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenDateEqualTo(RelativeDate)","argument":[{"name":"date","type":"spreadsheet.RelativeDate","doc":"The latest date relative to the date type selected."}]},{"name":"whenFormulaSatisfied","signature":"whenFormulaSatisfied(formula)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when that the given formula evaluates to true.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenFormulaSatisfied(String)","argument":[{"name":"formula","type":"String","doc":"A custom formula that evaluates to true if the input is valid."}]},{"name":"whenNumberBetween","signature":"whenNumberBetween(start, end)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when a number falls between, or is either of, two specified values.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenNumberBetween(Number,Number)","argument":[{"name":"start","type":"Number","doc":"The lowest acceptable value."},{"name":"end","type":"Number","doc":"The highest acceptable value."}]},{"name":"whenNumberEqualTo","signature":"whenNumberEqualTo(number)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when a number is equal to the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenNumberEqualTo(Number)","argument":[{"name":"number","type":"Number","doc":"The sole acceptable value."}]},{"name":"whenNumberGreaterThan","signature":"whenNumberGreaterThan(number)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when a number is greater than the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenNumberGreaterThan(Number)","argument":[{"name":"number","type":"Number","doc":"The highest unacceptable value."}]},{"name":"whenNumberGreaterThanOrEqualTo","signature":"whenNumberGreaterThanOrEqualTo(number)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when a number is greater than or equal to the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenNumberGreaterThanOrEqualTo(Number)","argument":[{"name":"number","type":"Number","doc":"The lowest acceptable value."}]},{"name":"whenNumberLessThan","signature":"whenNumberLessThan(number)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional conditional format rule to trigger when a number less than the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenNumberLessThan(Number)","argument":[{"name":"number","type":"Number","doc":"The lowest unacceptable value."}]},{"name":"whenNumberLessThanOrEqualTo","signature":"whenNumberLessThanOrEqualTo(number)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when a number less than or equal to the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenNumberLessThanOrEqualTo(Number)","argument":[{"name":"number","type":"Number","doc":"The highest acceptable value."}]},{"name":"whenNumberNotBetween","signature":"whenNumberNotBetween(start, end)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when a number does not fall between, and is neither of, two specified values.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenNumberNotBetween(Number,Number)","argument":[{"name":"start","type":"Number","doc":"The lowest unacceptable value."},{"name":"end","type":"Number","doc":"The highest unacceptable value."}]},{"name":"whenNumberNotEqualTo","signature":"whenNumberNotEqualTo(number)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when a number is not equal to the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenNumberNotEqualTo(Number)","argument":[{"name":"number","type":"Number","doc":"The sole unacceptable value."}]},{"name":"whenTextContains","signature":"whenTextContains(text)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when that the input contains the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenTextContains(String)","argument":[{"name":"text","type":"String","doc":"The value that the input must contain."}]},{"name":"whenTextDoesNotContain","signature":"whenTextDoesNotContain(text)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when that the input does not contain the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenTextDoesNotContain(String)","argument":[{"name":"text","type":"String","doc":"The value that the input must not contain."}]},{"name":"whenTextEndsWith","signature":"whenTextEndsWith(text)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when that the input ends with the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenTextEndsWith(String)","argument":[{"name":"text","type":"String","doc":"Text to compare against the end of the string."}]},{"name":"whenTextEqualTo","signature":"whenTextEqualTo(text)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when that the input is equal to the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenTextEqualTo(String)","argument":[{"name":"text","type":"String","doc":"The sole acceptable value."}]},{"name":"whenTextStartsWith","signature":"whenTextStartsWith(text)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to trigger when that the input starts with the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#whenTextStartsWith(String)","argument":[{"name":"text","type":"String","doc":"Text to compare against the beginning of the string."}]},{"name":"withCriteria","signature":"withCriteria(criteria, args)","return":"spreadsheet.ConditionalFormatRuleBuilder","doc":"Sets the conditional format rule to criteria defined by BooleanCriteria values, typically taken from the criteria and arguments of an existing rule.","url":"https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder/#withCriteria(BooleanCriteria,Object)","argument":[{"name":"criteria","type":"spreadsheet.BooleanCriteria","doc":"The type of conditional format criteria."},{"name":"args","type":"Object[]","doc":"An array of arguments appropriate to the criteria type; the number of arguments and their type match the corresponding when...() method above."}]}]},"spreadsheet.ContainerInfo":{"name":"ContainerInfo","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/container-info","doc":"Access the chart's position within a sheet. Can be updated using the EmbeddedChart.modify() function.","property":[],"method":[{"name":"getAnchorColumn","signature":"getAnchorColumn()","return":"Integer","doc":"The chart's left side is anchored in this column.","url":"https://developers.google.com/apps-script/reference/spreadsheet/container-info/#getAnchorColumn()","argument":[]},{"name":"getAnchorRow","signature":"getAnchorRow()","return":"Integer","doc":"The chart's top side is anchored in this row.","url":"https://developers.google.com/apps-script/reference/spreadsheet/container-info/#getAnchorRow()","argument":[]},{"name":"getOffsetX","signature":"getOffsetX()","return":"Integer","doc":"The chart's upper left hand corner is offset from the anchor column by this many pixels.","url":"https://developers.google.com/apps-script/reference/spreadsheet/container-info/#getOffsetX()","argument":[]},{"name":"getOffsetY","signature":"getOffsetY()","return":"Integer","doc":"The chart's upper left hand corner is offset from the anchor row by this many pixels.","url":"https://developers.google.com/apps-script/reference/spreadsheet/container-info/#getOffsetY()","argument":[]}]},"spreadsheet.DataValidation":{"name":"DataValidation","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation","doc":"Access data validation rules. To create a new rule, use SpreadsheetApp.newDataValidation() and DataValidationBuilder. You can use Range.setDataValidation(rule) to set the validation rule for a range.","property":[],"method":[{"name":"copy","signature":"copy()","return":"spreadsheet.DataValidationBuilder","doc":"Creates a builder for a data validation rule based on this rule's settings.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation/#copy()","argument":[]},{"name":"getAllowInvalid","signature":"getAllowInvalid()","return":"Boolean","doc":"Returns true if the rule shows a warning when input fails data validation, or false if it rejects the input entirely.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation/#getAllowInvalid()","argument":[]},{"name":"getCriteriaType","signature":"getCriteriaType()","return":"spreadsheet.DataValidationCriteria","doc":"Gets the rule's criteria type as defined in the DataValidationCriteria enum.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation/#getCriteriaType()","argument":[]},{"name":"getCriteriaValues","signature":"getCriteriaValues()","return":"Object[]","doc":"Gets an array of arguments for the rule's criteria.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation/#getCriteriaValues()","argument":[]},{"name":"getHelpText","signature":"getHelpText()","return":"String","doc":"Gets the rule's help text, or null if no help text is set.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation/#getHelpText()","argument":[]}]},"spreadsheet.DataValidationBuilder":{"name":"DataValidationBuilder","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder","doc":"Builder for data validation rules.","property":[],"method":[{"name":"build","signature":"build()","return":"spreadsheet.DataValidation","doc":"Constructs a data validation rule from the settings applied to the builder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#build()","argument":[]},{"name":"copy","signature":"copy()","return":"spreadsheet.DataValidationBuilder","doc":"Creates a builder for a data validation rule based on this rule's settings.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#copy()","argument":[]},{"name":"getAllowInvalid","signature":"getAllowInvalid()","return":"Boolean","doc":"Returns true if the rule shows a warning when input fails data validation, or false if it rejects the input entirely.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#getAllowInvalid()","argument":[]},{"name":"getCriteriaType","signature":"getCriteriaType()","return":"spreadsheet.DataValidationCriteria","doc":"Gets the rule's criteria type as defined in the DataValidationCriteria enum.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#getCriteriaType()","argument":[]},{"name":"getCriteriaValues","signature":"getCriteriaValues()","return":"Object[]","doc":"Gets an array of arguments for the rule's criteria.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#getCriteriaValues()","argument":[]},{"name":"getHelpText","signature":"getHelpText()","return":"String","doc":"Gets the rule's help text, or null if no help text is set.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#getHelpText()","argument":[]},{"name":"requireDate","signature":"requireDate()","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require a date.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireDate()","argument":[]},{"name":"requireDateAfter","signature":"requireDateAfter(date)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require a date after the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireDateAfter(Date)","argument":[{"name":"date","type":"Date","doc":"The latest unacceptable date."}]},{"name":"requireDateBefore","signature":"requireDateBefore(date)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require a date before the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireDateBefore(Date)","argument":[{"name":"date","type":"Date","doc":"The earliest unacceptable date."}]},{"name":"requireDateBetween","signature":"requireDateBetween(start, end)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require a date that falls between, or is either of, two specified dates.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireDateBetween(Date,Date)","argument":[{"name":"start","type":"Date","doc":"The earliest acceptable date."},{"name":"end","type":"Date","doc":"The latest acceptable date."}]},{"name":"requireDateEqualTo","signature":"requireDateEqualTo(date)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require a date equal to the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireDateEqualTo(Date)","argument":[{"name":"date","type":"Date","doc":"The sole acceptable date."}]},{"name":"requireDateNotBetween","signature":"requireDateNotBetween(start, end)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require a date that does not fall between, and is neither of, two specified dates.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireDateNotBetween(Date,Date)","argument":[{"name":"start","type":"Date","doc":"The earliest unacceptable date."},{"name":"end","type":"Date","doc":"The latest unacceptable date."}]},{"name":"requireDateOnOrAfter","signature":"requireDateOnOrAfter(date)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require a date on or after the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireDateOnOrAfter(Date)","argument":[{"name":"date","type":"Date","doc":"The earliest acceptable date."}]},{"name":"requireDateOnOrBefore","signature":"requireDateOnOrBefore(date)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require a date on or before the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireDateOnOrBefore(Date)","argument":[{"name":"date","type":"Date","doc":"The latest acceptable date."}]},{"name":"requireFormulaSatisfied","signature":"requireFormulaSatisfied(formula)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require that the given formula evaluates to true.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireFormulaSatisfied(String)","argument":[{"name":"formula","type":"String","doc":"A custom formula that evaluates to true if the input is valid."}]},{"name":"requireNumberBetween","signature":"requireNumberBetween(start, end)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require a number that falls between, or is either of, two specified numbers.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireNumberBetween(Number,Number)","argument":[{"name":"start","type":"Number","doc":"The lowest acceptable value."},{"name":"end","type":"Number","doc":"The highest acceptable value."}]},{"name":"requireNumberEqualTo","signature":"requireNumberEqualTo(number)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require a number equal to the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireNumberEqualTo(Number)","argument":[{"name":"number","type":"Number","doc":"The sole acceptable value."}]},{"name":"requireNumberGreaterThan","signature":"requireNumberGreaterThan(number)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require a number greater than the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireNumberGreaterThan(Number)","argument":[{"name":"number","type":"Number","doc":"The highest unacceptable value."}]},{"name":"requireNumberGreaterThanOrEqualTo","signature":"requireNumberGreaterThanOrEqualTo(number)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require a number greater than or equal to the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireNumberGreaterThanOrEqualTo(Number)","argument":[{"name":"number","type":"Number","doc":"The lowest acceptable value."}]},{"name":"requireNumberLessThan","signature":"requireNumberLessThan(number)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require a number less than the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireNumberLessThan(Number)","argument":[{"name":"number","type":"Number","doc":"The lowest unacceptable value."}]},{"name":"requireNumberLessThanOrEqualTo","signature":"requireNumberLessThanOrEqualTo(number)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require a number less than or equal to the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireNumberLessThanOrEqualTo(Number)","argument":[{"name":"number","type":"Number","doc":"The highest acceptable value."}]},{"name":"requireNumberNotBetween","signature":"requireNumberNotBetween(start, end)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require a number that does not fall between, and is neither of, two specified numbers.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireNumberNotBetween(Number,Number)","argument":[{"name":"start","type":"Number","doc":"The lowest unacceptable value."},{"name":"end","type":"Number","doc":"The highest unacceptable value."}]},{"name":"requireNumberNotEqualTo","signature":"requireNumberNotEqualTo(number)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require a number not equal to the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireNumberNotEqualTo(Number)","argument":[{"name":"number","type":"Number","doc":"The sole unacceptable value."}]},{"name":"requireTextContains","signature":"requireTextContains(text)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require that the input contains the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireTextContains(String)","argument":[{"name":"text","type":"String","doc":"The value that the input must contain."}]},{"name":"requireTextDoesNotContain","signature":"requireTextDoesNotContain(text)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require that the input does not contain the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireTextDoesNotContain(String)","argument":[{"name":"text","type":"String","doc":"The value that the input must not contain."}]},{"name":"requireTextEqualTo","signature":"requireTextEqualTo(text)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require that the input is equal to the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireTextEqualTo(String)","argument":[{"name":"text","type":"String","doc":"The sole acceptable value."}]},{"name":"requireTextIsEmail","signature":"requireTextIsEmail()","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require that the input is in the form of an email address.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireTextIsEmail()","argument":[]},{"name":"requireTextIsUrl","signature":"requireTextIsUrl()","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require that the input is in the form of a URL.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireTextIsUrl()","argument":[]},{"name":"requireValueInList","signature":"requireValueInList(values)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require that the input is equal to one of the given values.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireValueInList(String)","argument":[{"name":"values","type":"String[]","doc":"An array of acceptable values."}]},{"name":"requireValueInList","signature":"requireValueInList(values, showDropdown)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require that the input is equal to one of the given values, with an option to hide the dropdown menu.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireValueInList(String,Boolean)","argument":[{"name":"values","type":"String[]","doc":"An array of acceptable values."},{"name":"showDropdown","type":"Boolean","doc":"true if the spreadsheet should show a dropdown menu for the values; false if not."}]},{"name":"requireValueInRange","signature":"requireValueInRange(range)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require that the input is equal to a value in the given range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireValueInRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"A range that contains the acceptable values."}]},{"name":"requireValueInRange","signature":"requireValueInRange(range, showDropdown)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to require that the input is equal to a value in the given range, with an option to hide the dropdown menu.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#requireValueInRange(Range,Boolean)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"A range that contains the acceptable values."},{"name":"showDropdown","type":"Boolean","doc":"true if the spreadsheet should show a dropdown menu for the values; false if not."}]},{"name":"setAllowInvalid","signature":"setAllowInvalid(allowInvalidData)","return":"spreadsheet.DataValidationBuilder","doc":"Sets whether to show a warning when input fails data validation or whether to reject the input entirely.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#setAllowInvalid(Boolean)","argument":[{"name":"allowInvalidData","type":"Boolean","doc":"true if the rule should allow input that fails data validation; false if not."}]},{"name":"setHelpText","signature":"setHelpText(helpText)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the help text that appears when the user hovers over the cell on which data validation is set.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#setHelpText(String)","argument":[{"name":"helpText","type":"String","doc":"The help text to set."}]},{"name":"withCriteria","signature":"withCriteria(criteria, args)","return":"spreadsheet.DataValidationBuilder","doc":"Sets the data validation rule to criteria defined by DataValidationCriteria values, typically taken from the criteria and arguments of an existing rule.","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder/#withCriteria(DataValidationCriteria,Object)","argument":[{"name":"criteria","type":"spreadsheet.DataValidationCriteria","doc":"The type of data validation criteria."},{"name":"args","type":"Object[]","doc":"An array of arguments appropriate to the criteria type; the number of arguments and their type match the corresponding require...() method above."}]}]},"spreadsheet.EmbeddedAreaChartBuilder":{"name":"EmbeddedAreaChartBuilder","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder","doc":"Builder for area charts. For more details, see the Gviz documentation.","property":[],"method":[{"name":"addRange","signature":"addRange(range)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Adds a range to the chart this builder modifies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#addRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to add."}]},{"name":"asAreaChart","signature":"asAreaChart()","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#asAreaChart()","argument":[]},{"name":"asBarChart","signature":"asBarChart()","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#asBarChart()","argument":[]},{"name":"asColumnChart","signature":"asColumnChart()","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#asColumnChart()","argument":[]},{"name":"asComboChart","signature":"asComboChart()","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#asComboChart()","argument":[]},{"name":"asHistogramChart","signature":"asHistogramChart()","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#asHistogramChart()","argument":[]},{"name":"asLineChart","signature":"asLineChart()","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#asLineChart()","argument":[]},{"name":"asPieChart","signature":"asPieChart()","return":"spreadsheet.EmbeddedPieChartBuilder","doc":"Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#asPieChart()","argument":[]},{"name":"asScatterChart","signature":"asScatterChart()","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#asScatterChart()","argument":[]},{"name":"asTableChart","signature":"asTableChart()","return":"spreadsheet.EmbeddedTableChartBuilder","doc":"Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#asTableChart()","argument":[]},{"name":"build","signature":"build()","return":"spreadsheet.EmbeddedChart","doc":"Builds the chart to reflect all changes made to it.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#build()","argument":[]},{"name":"getChartType","signature":"getChartType()","return":"charts.ChartType","doc":"Returns the current chart type.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#getChartType()","argument":[]},{"name":"getContainer","signature":"getContainer()","return":"spreadsheet.ContainerInfo","doc":"Return the chart ContainerInfo, which encapsulates where the chart appears on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#getContainer()","argument":[]},{"name":"getRanges","signature":"getRanges()","return":"spreadsheet.Range[]","doc":"Returns a copy of the list of ranges currently providing data for this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#getRanges()","argument":[]},{"name":"removeRange","signature":"removeRange(range)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Removes the specified range from the chart this builder modifies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#removeRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to remove."}]},{"name":"reverseCategories","signature":"reverseCategories()","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Reverses the drawing of series in the domain axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#reverseCategories()","argument":[]},{"name":"setBackgroundColor","signature":"setBackgroundColor(cssValue)","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the background color for the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setBackgroundColor(String)","argument":[{"name":"cssValue","type":"String","doc":"the CSS value for the color (such as \"blue\" or \"#00f\")"}]},{"name":"setChartType","signature":"setChartType(type)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Changes the type of chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setChartType(ChartType)","argument":[{"name":"type","type":"charts.ChartType","doc":"The type to change this chart into."}]},{"name":"setColors","signature":"setColors(cssValues)","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the colors for the lines in the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setColors(String)","argument":[{"name":"cssValues","type":"String[]","doc":"an array of color CSS values, such as [\"red\", \"#acf\"]. The nth element in the array represents the color of the nth line in the chart."}]},{"name":"setHiddenDimensionStrategy","signature":"setHiddenDimensionStrategy(strategy)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the strategy to use for hidden rows and columns.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setHiddenDimensionStrategy(ChartHiddenDimensionStrategy)","argument":[{"name":"strategy","type":"charts.ChartHiddenDimensionStrategy","doc":"The strategy to use for hidden rows and columns."}]},{"name":"setLegendPosition","signature":"setLegendPosition(position)","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the position of the legend with respect to the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setLegendPosition(Position)","argument":[{"name":"position","type":"charts.Position","doc":"the position of the legend"}]},{"name":"setLegendTextStyle","signature":"setLegendTextStyle(textStyle)","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the text style of the chart legend.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setLegendTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the chart legend."}]},{"name":"setMergeStrategy","signature":"setMergeStrategy(mergeStrategy)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the merge strategy to use when more than one range exists.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setMergeStrategy(ChartMergeStrategy)","argument":[{"name":"mergeStrategy","type":"charts.ChartMergeStrategy","doc":"The merge strategy to use."}]},{"name":"setNumHeaders","signature":"setNumHeaders(headers)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the number of rows or columns of the range that should be treated as headers.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setNumHeaders(Integer)","argument":[{"name":"headers","type":"Integer","doc":"The number of rows or columns to treat as headers. Negative values cause headers to be auto-detected."}]},{"name":"setOption","signature":"setOption(option, value)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets advanced options for this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setOption(String,Object)","argument":[{"name":"option","type":"String","doc":"The name of the option."},{"name":"value","type":"Object","doc":"The value of the option."}]},{"name":"setPointStyle","signature":"setPointStyle(style)","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the style for points in the line.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setPointStyle(PointStyle)","argument":[{"name":"style","type":"charts.PointStyle","doc":"the style to use for points in the line"}]},{"name":"setPosition","signature":"setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the position, changing where the chart appears on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setPosition(Integer,Integer,Integer,Integer)","argument":[{"name":"anchorRowPos","type":"Integer","doc":"The chart's top side is anchored in this row."},{"name":"anchorColPos","type":"Integer","doc":"The chart's left side is anchored in this column."},{"name":"offsetX","type":"Integer","doc":"The chart's upper right-hand corner is offset by this many pixels."},{"name":"offsetY","type":"Integer","doc":"The chart's lower left-hand corner is offset by this many pixels."}]},{"name":"setRange","signature":"setRange(start, end)","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the range for the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setRange(Number,Number)","argument":[{"name":"start","type":"Number","doc":"value for the lowest grid line of the range axis"},{"name":"end","type":"Number","doc":"value for the highest grid line of the range axis"}]},{"name":"setStacked","signature":"setStacked()","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Uses stacked lines, meaning that line and bar values are stacked (accumulated).","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setStacked()","argument":[]},{"name":"setTitle","signature":"setTitle(chartTitle)","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the title of the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setTitle(String)","argument":[{"name":"chartTitle","type":"String","doc":"the chart title."}]},{"name":"setTitleTextStyle","signature":"setTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the text style of the chart title.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the chart title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setTransposeRowsAndColumns","signature":"setTransposeRowsAndColumns(transpose)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets whether the chart's rows and columns are transposed.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setTransposeRowsAndColumns(Boolean)","argument":[{"name":"transpose","type":"Boolean","doc":"If true, the rows and columns used to construct the chart are transposed."}]},{"name":"setXAxisTextStyle","signature":"setXAxisTextStyle(textStyle)","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the horizontal axis text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setXAxisTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setXAxisTitle","signature":"setXAxisTitle(title)","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Adds a title to the horizontal axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setXAxisTitle(String)","argument":[{"name":"title","type":"String","doc":"the title for the X-axis"}]},{"name":"setXAxisTitleTextStyle","signature":"setXAxisTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the horizontal axis title text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setXAxisTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setYAxisTextStyle","signature":"setYAxisTextStyle(textStyle)","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the vertical axis text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setYAxisTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setYAxisTitle","signature":"setYAxisTitle(title)","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Adds a title to the vertical axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setYAxisTitle(String)","argument":[{"name":"title","type":"String","doc":"the title for the Y-axis"}]},{"name":"setYAxisTitleTextStyle","signature":"setYAxisTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the vertical axis title text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#setYAxisTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"useLogScale","signature":"useLogScale()","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Makes the range axis into a logarithmic scale (requires all values to be positive).","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder/#useLogScale()","argument":[]}]},"spreadsheet.EmbeddedBarChartBuilder":{"name":"EmbeddedBarChartBuilder","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder","doc":"Builder for bar charts. For more details, see the Gviz documentation.","property":[],"method":[{"name":"addRange","signature":"addRange(range)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Adds a range to the chart this builder modifies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#addRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to add."}]},{"name":"asAreaChart","signature":"asAreaChart()","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#asAreaChart()","argument":[]},{"name":"asBarChart","signature":"asBarChart()","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#asBarChart()","argument":[]},{"name":"asColumnChart","signature":"asColumnChart()","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#asColumnChart()","argument":[]},{"name":"asComboChart","signature":"asComboChart()","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#asComboChart()","argument":[]},{"name":"asHistogramChart","signature":"asHistogramChart()","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#asHistogramChart()","argument":[]},{"name":"asLineChart","signature":"asLineChart()","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#asLineChart()","argument":[]},{"name":"asPieChart","signature":"asPieChart()","return":"spreadsheet.EmbeddedPieChartBuilder","doc":"Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#asPieChart()","argument":[]},{"name":"asScatterChart","signature":"asScatterChart()","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#asScatterChart()","argument":[]},{"name":"asTableChart","signature":"asTableChart()","return":"spreadsheet.EmbeddedTableChartBuilder","doc":"Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#asTableChart()","argument":[]},{"name":"build","signature":"build()","return":"spreadsheet.EmbeddedChart","doc":"Builds the chart to reflect all changes made to it.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#build()","argument":[]},{"name":"getChartType","signature":"getChartType()","return":"charts.ChartType","doc":"Returns the current chart type.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#getChartType()","argument":[]},{"name":"getContainer","signature":"getContainer()","return":"spreadsheet.ContainerInfo","doc":"Return the chart ContainerInfo, which encapsulates where the chart appears on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#getContainer()","argument":[]},{"name":"getRanges","signature":"getRanges()","return":"spreadsheet.Range[]","doc":"Returns a copy of the list of ranges currently providing data for this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#getRanges()","argument":[]},{"name":"removeRange","signature":"removeRange(range)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Removes the specified range from the chart this builder modifies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#removeRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to remove."}]},{"name":"reverseCategories","signature":"reverseCategories()","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Reverses the drawing of series in the domain axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#reverseCategories()","argument":[]},{"name":"reverseDirection","signature":"reverseDirection()","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Reverses the direction in which the bars grow along the horizontal axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#reverseDirection()","argument":[]},{"name":"setBackgroundColor","signature":"setBackgroundColor(cssValue)","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the background color for the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setBackgroundColor(String)","argument":[{"name":"cssValue","type":"String","doc":"the CSS value for the color (such as \"blue\" or \"#00f\")"}]},{"name":"setChartType","signature":"setChartType(type)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Changes the type of chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setChartType(ChartType)","argument":[{"name":"type","type":"charts.ChartType","doc":"The type to change this chart into."}]},{"name":"setColors","signature":"setColors(cssValues)","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the colors for the lines in the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setColors(String)","argument":[{"name":"cssValues","type":"String[]","doc":"an array of color CSS values, such as [\"red\", \"#acf\"]. The nth element in the array represents the color of the nth line in the chart."}]},{"name":"setHiddenDimensionStrategy","signature":"setHiddenDimensionStrategy(strategy)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the strategy to use for hidden rows and columns.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setHiddenDimensionStrategy(ChartHiddenDimensionStrategy)","argument":[{"name":"strategy","type":"charts.ChartHiddenDimensionStrategy","doc":"The strategy to use for hidden rows and columns."}]},{"name":"setLegendPosition","signature":"setLegendPosition(position)","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the position of the legend with respect to the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setLegendPosition(Position)","argument":[{"name":"position","type":"charts.Position","doc":"the position of the legend"}]},{"name":"setLegendTextStyle","signature":"setLegendTextStyle(textStyle)","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the text style of the chart legend.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setLegendTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the chart legend."}]},{"name":"setMergeStrategy","signature":"setMergeStrategy(mergeStrategy)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the merge strategy to use when more than one range exists.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setMergeStrategy(ChartMergeStrategy)","argument":[{"name":"mergeStrategy","type":"charts.ChartMergeStrategy","doc":"The merge strategy to use."}]},{"name":"setNumHeaders","signature":"setNumHeaders(headers)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the number of rows or columns of the range that should be treated as headers.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setNumHeaders(Integer)","argument":[{"name":"headers","type":"Integer","doc":"The number of rows or columns to treat as headers. Negative values cause headers to be auto-detected."}]},{"name":"setOption","signature":"setOption(option, value)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets advanced options for this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setOption(String,Object)","argument":[{"name":"option","type":"String","doc":"The name of the option."},{"name":"value","type":"Object","doc":"The value of the option."}]},{"name":"setPosition","signature":"setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the position, changing where the chart appears on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setPosition(Integer,Integer,Integer,Integer)","argument":[{"name":"anchorRowPos","type":"Integer","doc":"The chart's top side is anchored in this row."},{"name":"anchorColPos","type":"Integer","doc":"The chart's left side is anchored in this column."},{"name":"offsetX","type":"Integer","doc":"The chart's upper right-hand corner is offset by this many pixels."},{"name":"offsetY","type":"Integer","doc":"The chart's lower left-hand corner is offset by this many pixels."}]},{"name":"setRange","signature":"setRange(start, end)","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the range for the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setRange(Number,Number)","argument":[{"name":"start","type":"Number","doc":"value for the lowest grid line of the range axis"},{"name":"end","type":"Number","doc":"value for the highest grid line of the range axis"}]},{"name":"setStacked","signature":"setStacked()","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Uses stacked lines, meaning that line and bar values are stacked (accumulated).","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setStacked()","argument":[]},{"name":"setTitle","signature":"setTitle(chartTitle)","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the title of the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setTitle(String)","argument":[{"name":"chartTitle","type":"String","doc":"the chart title."}]},{"name":"setTitleTextStyle","signature":"setTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the text style of the chart title.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the chart title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setTransposeRowsAndColumns","signature":"setTransposeRowsAndColumns(transpose)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets whether the chart's rows and columns are transposed.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setTransposeRowsAndColumns(Boolean)","argument":[{"name":"transpose","type":"Boolean","doc":"If true, the rows and columns used to construct the chart are transposed."}]},{"name":"setXAxisTextStyle","signature":"setXAxisTextStyle(textStyle)","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the horizontal axis text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setXAxisTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setXAxisTitle","signature":"setXAxisTitle(title)","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Adds a title to the horizontal axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setXAxisTitle(String)","argument":[{"name":"title","type":"String","doc":"the title for the X-axis"}]},{"name":"setXAxisTitleTextStyle","signature":"setXAxisTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the horizontal axis title text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setXAxisTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setYAxisTextStyle","signature":"setYAxisTextStyle(textStyle)","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the vertical axis text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setYAxisTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setYAxisTitle","signature":"setYAxisTitle(title)","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Adds a title to the vertical axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setYAxisTitle(String)","argument":[{"name":"title","type":"String","doc":"the title for the Y-axis"}]},{"name":"setYAxisTitleTextStyle","signature":"setYAxisTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the vertical axis title text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#setYAxisTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"useLogScale","signature":"useLogScale()","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Makes the range axis into a logarithmic scale (requires all values to be positive).","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder/#useLogScale()","argument":[]}]},"spreadsheet.EmbeddedChart":{"name":"EmbeddedChart","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart","doc":"Represents a chart that has been embedded into a spreadsheet.","property":[],"method":[{"name":"getAs","signature":"getAs(contentType)","return":"base.Blob","doc":"Return the data inside this object as a blob converted to the specified content type.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart/#getAs(String)","argument":[{"name":"contentType","type":"String","doc":"the MIME type to convert to. For most blobs, 'application/pdf' is the only valid option. For images in BMP, GIF, JPEG, or PNG format, any of 'image/bmp', 'image/gif', 'image/jpeg', or 'image/png' are also valid."}]},{"name":"getBlob","signature":"getBlob()","return":"base.Blob","doc":"Return the data inside this object as a blob.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart/#getBlob()","argument":[]},{"name":"getContainerInfo","signature":"getContainerInfo()","return":"spreadsheet.ContainerInfo","doc":"Returns information about where the chart is positioned within a sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart/#getContainerInfo()","argument":[]},{"name":"getHiddenDimensionStrategy","signature":"getHiddenDimensionStrategy()","return":"charts.ChartHiddenDimensionStrategy","doc":"Returns the strategy to use for handling hidden rows and columns.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart/#getHiddenDimensionStrategy()","argument":[]},{"name":"getId","signature":"getId()","return":"String","doc":"Returns the id that has been assigned to this object.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart/#getId()","argument":[]},{"name":"getMergeStrategy","signature":"getMergeStrategy()","return":"charts.ChartMergeStrategy","doc":"Returns the merge strategy used when more than one range exists.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart/#getMergeStrategy()","argument":[]},{"name":"getNumHeaders","signature":"getNumHeaders()","return":"Integer","doc":"Returns the number of rows or columns the range that are treated as headers.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart/#getNumHeaders()","argument":[]},{"name":"getOptions","signature":"getOptions()","return":"charts.ChartOptions","doc":"Returns the options for this chart, such as height, colors, axes, etc.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart/#getOptions()","argument":[]},{"name":"getRanges","signature":"getRanges()","return":"spreadsheet.Range[]","doc":"Returns the ranges that this chart uses as a data source.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart/#getRanges()","argument":[]},{"name":"getTransposeRowsAndColumns","signature":"getTransposeRowsAndColumns()","return":"Boolean","doc":"If true, the rows and columns used to populate the chart are switched.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart/#getTransposeRowsAndColumns()","argument":[]},{"name":"getType","signature":"getType()","return":"String","doc":"Gets the type of this object.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart/#getType()","argument":[]},{"name":"modify","signature":"modify()","return":"spreadsheet.EmbeddedChartBuilder","doc":"Returns an EmbeddedChartBuilder that can be used to modify this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart/#modify()","argument":[]},{"name":"setId","signature":"setId(id)","return":"charts.Chart","doc":"Sets the id of this EmbeddedChart to be used with UiApp.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart/#setId(String)","argument":[{"name":"id","type":"String","doc":"the new id, which can be used to retrieve the EmbeddedChart from app.getElementById(id)."}]}]},"spreadsheet.EmbeddedChartBuilder":{"name":"EmbeddedChartBuilder","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder","doc":"Builder used to edit an EmbeddedChart. Changes made to the chart are not saved until Sheet.updateChart(chart) is called on the rebuilt chart.","property":[],"method":[{"name":"addRange","signature":"addRange(range)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Adds a range to the chart this builder modifies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#addRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to add."}]},{"name":"asAreaChart","signature":"asAreaChart()","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#asAreaChart()","argument":[]},{"name":"asBarChart","signature":"asBarChart()","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#asBarChart()","argument":[]},{"name":"asColumnChart","signature":"asColumnChart()","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#asColumnChart()","argument":[]},{"name":"asComboChart","signature":"asComboChart()","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#asComboChart()","argument":[]},{"name":"asHistogramChart","signature":"asHistogramChart()","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#asHistogramChart()","argument":[]},{"name":"asLineChart","signature":"asLineChart()","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#asLineChart()","argument":[]},{"name":"asPieChart","signature":"asPieChart()","return":"spreadsheet.EmbeddedPieChartBuilder","doc":"Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#asPieChart()","argument":[]},{"name":"asScatterChart","signature":"asScatterChart()","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#asScatterChart()","argument":[]},{"name":"asTableChart","signature":"asTableChart()","return":"spreadsheet.EmbeddedTableChartBuilder","doc":"Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#asTableChart()","argument":[]},{"name":"build","signature":"build()","return":"spreadsheet.EmbeddedChart","doc":"Builds the chart to reflect all changes made to it.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#build()","argument":[]},{"name":"getChartType","signature":"getChartType()","return":"charts.ChartType","doc":"Returns the current chart type.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#getChartType()","argument":[]},{"name":"getContainer","signature":"getContainer()","return":"spreadsheet.ContainerInfo","doc":"Return the chart ContainerInfo, which encapsulates where the chart appears on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#getContainer()","argument":[]},{"name":"getRanges","signature":"getRanges()","return":"spreadsheet.Range[]","doc":"Returns a copy of the list of ranges currently providing data for this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#getRanges()","argument":[]},{"name":"removeRange","signature":"removeRange(range)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Removes the specified range from the chart this builder modifies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#removeRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to remove."}]},{"name":"setChartType","signature":"setChartType(type)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Changes the type of chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#setChartType(ChartType)","argument":[{"name":"type","type":"charts.ChartType","doc":"The type to change this chart into."}]},{"name":"setHiddenDimensionStrategy","signature":"setHiddenDimensionStrategy(strategy)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the strategy to use for hidden rows and columns.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#setHiddenDimensionStrategy(ChartHiddenDimensionStrategy)","argument":[{"name":"strategy","type":"charts.ChartHiddenDimensionStrategy","doc":"The strategy to use for hidden rows and columns."}]},{"name":"setMergeStrategy","signature":"setMergeStrategy(mergeStrategy)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the merge strategy to use when more than one range exists.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#setMergeStrategy(ChartMergeStrategy)","argument":[{"name":"mergeStrategy","type":"charts.ChartMergeStrategy","doc":"The merge strategy to use."}]},{"name":"setNumHeaders","signature":"setNumHeaders(headers)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the number of rows or columns of the range that should be treated as headers.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#setNumHeaders(Integer)","argument":[{"name":"headers","type":"Integer","doc":"The number of rows or columns to treat as headers. Negative values cause headers to be auto-detected."}]},{"name":"setOption","signature":"setOption(option, value)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets advanced options for this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#setOption(String,Object)","argument":[{"name":"option","type":"String","doc":"The name of the option."},{"name":"value","type":"Object","doc":"The value of the option."}]},{"name":"setPosition","signature":"setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the position, changing where the chart appears on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#setPosition(Integer,Integer,Integer,Integer)","argument":[{"name":"anchorRowPos","type":"Integer","doc":"The chart's top side is anchored in this row."},{"name":"anchorColPos","type":"Integer","doc":"The chart's left side is anchored in this column."},{"name":"offsetX","type":"Integer","doc":"The chart's upper right-hand corner is offset by this many pixels."},{"name":"offsetY","type":"Integer","doc":"The chart's lower left-hand corner is offset by this many pixels."}]},{"name":"setTransposeRowsAndColumns","signature":"setTransposeRowsAndColumns(transpose)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets whether the chart's rows and columns are transposed.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder/#setTransposeRowsAndColumns(Boolean)","argument":[{"name":"transpose","type":"Boolean","doc":"If true, the rows and columns used to construct the chart are transposed."}]}]},"spreadsheet.EmbeddedColumnChartBuilder":{"name":"EmbeddedColumnChartBuilder","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder","doc":"Builder for column charts. For more details, see the Gviz documentation.","property":[],"method":[{"name":"addRange","signature":"addRange(range)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Adds a range to the chart this builder modifies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#addRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to add."}]},{"name":"asAreaChart","signature":"asAreaChart()","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#asAreaChart()","argument":[]},{"name":"asBarChart","signature":"asBarChart()","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#asBarChart()","argument":[]},{"name":"asColumnChart","signature":"asColumnChart()","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#asColumnChart()","argument":[]},{"name":"asComboChart","signature":"asComboChart()","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#asComboChart()","argument":[]},{"name":"asHistogramChart","signature":"asHistogramChart()","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#asHistogramChart()","argument":[]},{"name":"asLineChart","signature":"asLineChart()","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#asLineChart()","argument":[]},{"name":"asPieChart","signature":"asPieChart()","return":"spreadsheet.EmbeddedPieChartBuilder","doc":"Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#asPieChart()","argument":[]},{"name":"asScatterChart","signature":"asScatterChart()","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#asScatterChart()","argument":[]},{"name":"asTableChart","signature":"asTableChart()","return":"spreadsheet.EmbeddedTableChartBuilder","doc":"Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#asTableChart()","argument":[]},{"name":"build","signature":"build()","return":"spreadsheet.EmbeddedChart","doc":"Builds the chart to reflect all changes made to it.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#build()","argument":[]},{"name":"getChartType","signature":"getChartType()","return":"charts.ChartType","doc":"Returns the current chart type.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#getChartType()","argument":[]},{"name":"getContainer","signature":"getContainer()","return":"spreadsheet.ContainerInfo","doc":"Return the chart ContainerInfo, which encapsulates where the chart appears on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#getContainer()","argument":[]},{"name":"getRanges","signature":"getRanges()","return":"spreadsheet.Range[]","doc":"Returns a copy of the list of ranges currently providing data for this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#getRanges()","argument":[]},{"name":"removeRange","signature":"removeRange(range)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Removes the specified range from the chart this builder modifies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#removeRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to remove."}]},{"name":"reverseCategories","signature":"reverseCategories()","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Reverses the drawing of series in the domain axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#reverseCategories()","argument":[]},{"name":"setBackgroundColor","signature":"setBackgroundColor(cssValue)","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the background color for the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setBackgroundColor(String)","argument":[{"name":"cssValue","type":"String","doc":"the CSS value for the color (such as \"blue\" or \"#00f\")"}]},{"name":"setChartType","signature":"setChartType(type)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Changes the type of chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setChartType(ChartType)","argument":[{"name":"type","type":"charts.ChartType","doc":"The type to change this chart into."}]},{"name":"setColors","signature":"setColors(cssValues)","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the colors for the lines in the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setColors(String)","argument":[{"name":"cssValues","type":"String[]","doc":"an array of color CSS values, such as [\"red\", \"#acf\"]. The nth element in the array represents the color of the nth line in the chart."}]},{"name":"setHiddenDimensionStrategy","signature":"setHiddenDimensionStrategy(strategy)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the strategy to use for hidden rows and columns.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setHiddenDimensionStrategy(ChartHiddenDimensionStrategy)","argument":[{"name":"strategy","type":"charts.ChartHiddenDimensionStrategy","doc":"The strategy to use for hidden rows and columns."}]},{"name":"setLegendPosition","signature":"setLegendPosition(position)","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the position of the legend with respect to the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setLegendPosition(Position)","argument":[{"name":"position","type":"charts.Position","doc":"the position of the legend"}]},{"name":"setLegendTextStyle","signature":"setLegendTextStyle(textStyle)","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the text style of the chart legend.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setLegendTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the chart legend."}]},{"name":"setMergeStrategy","signature":"setMergeStrategy(mergeStrategy)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the merge strategy to use when more than one range exists.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setMergeStrategy(ChartMergeStrategy)","argument":[{"name":"mergeStrategy","type":"charts.ChartMergeStrategy","doc":"The merge strategy to use."}]},{"name":"setNumHeaders","signature":"setNumHeaders(headers)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the number of rows or columns of the range that should be treated as headers.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setNumHeaders(Integer)","argument":[{"name":"headers","type":"Integer","doc":"The number of rows or columns to treat as headers. Negative values cause headers to be auto-detected."}]},{"name":"setOption","signature":"setOption(option, value)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets advanced options for this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setOption(String,Object)","argument":[{"name":"option","type":"String","doc":"The name of the option."},{"name":"value","type":"Object","doc":"The value of the option."}]},{"name":"setPosition","signature":"setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the position, changing where the chart appears on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setPosition(Integer,Integer,Integer,Integer)","argument":[{"name":"anchorRowPos","type":"Integer","doc":"The chart's top side is anchored in this row."},{"name":"anchorColPos","type":"Integer","doc":"The chart's left side is anchored in this column."},{"name":"offsetX","type":"Integer","doc":"The chart's upper right-hand corner is offset by this many pixels."},{"name":"offsetY","type":"Integer","doc":"The chart's lower left-hand corner is offset by this many pixels."}]},{"name":"setRange","signature":"setRange(start, end)","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the range for the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setRange(Number,Number)","argument":[{"name":"start","type":"Number","doc":"value for the lowest grid line of the range axis"},{"name":"end","type":"Number","doc":"value for the highest grid line of the range axis"}]},{"name":"setStacked","signature":"setStacked()","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Uses stacked lines, meaning that line and bar values are stacked (accumulated).","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setStacked()","argument":[]},{"name":"setTitle","signature":"setTitle(chartTitle)","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the title of the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setTitle(String)","argument":[{"name":"chartTitle","type":"String","doc":"the chart title."}]},{"name":"setTitleTextStyle","signature":"setTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the text style of the chart title.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the chart title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setTransposeRowsAndColumns","signature":"setTransposeRowsAndColumns(transpose)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets whether the chart's rows and columns are transposed.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setTransposeRowsAndColumns(Boolean)","argument":[{"name":"transpose","type":"Boolean","doc":"If true, the rows and columns used to construct the chart are transposed."}]},{"name":"setXAxisTextStyle","signature":"setXAxisTextStyle(textStyle)","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the horizontal axis text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setXAxisTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setXAxisTitle","signature":"setXAxisTitle(title)","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Adds a title to the horizontal axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setXAxisTitle(String)","argument":[{"name":"title","type":"String","doc":"the title for the X-axis"}]},{"name":"setXAxisTitleTextStyle","signature":"setXAxisTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the horizontal axis title text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setXAxisTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setYAxisTextStyle","signature":"setYAxisTextStyle(textStyle)","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the vertical axis text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setYAxisTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setYAxisTitle","signature":"setYAxisTitle(title)","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Adds a title to the vertical axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setYAxisTitle(String)","argument":[{"name":"title","type":"String","doc":"the title for the Y-axis"}]},{"name":"setYAxisTitleTextStyle","signature":"setYAxisTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the vertical axis title text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#setYAxisTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"useLogScale","signature":"useLogScale()","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Makes the range axis into a logarithmic scale (requires all values to be positive).","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder/#useLogScale()","argument":[]}]},"spreadsheet.EmbeddedComboChartBuilder":{"name":"EmbeddedComboChartBuilder","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder","doc":"Builder for combo charts. For more details, see the Gviz documentation.","property":[],"method":[{"name":"addRange","signature":"addRange(range)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Adds a range to the chart this builder modifies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#addRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to add."}]},{"name":"asAreaChart","signature":"asAreaChart()","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#asAreaChart()","argument":[]},{"name":"asBarChart","signature":"asBarChart()","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#asBarChart()","argument":[]},{"name":"asColumnChart","signature":"asColumnChart()","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#asColumnChart()","argument":[]},{"name":"asComboChart","signature":"asComboChart()","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#asComboChart()","argument":[]},{"name":"asHistogramChart","signature":"asHistogramChart()","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#asHistogramChart()","argument":[]},{"name":"asLineChart","signature":"asLineChart()","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#asLineChart()","argument":[]},{"name":"asPieChart","signature":"asPieChart()","return":"spreadsheet.EmbeddedPieChartBuilder","doc":"Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#asPieChart()","argument":[]},{"name":"asScatterChart","signature":"asScatterChart()","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#asScatterChart()","argument":[]},{"name":"asTableChart","signature":"asTableChart()","return":"spreadsheet.EmbeddedTableChartBuilder","doc":"Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#asTableChart()","argument":[]},{"name":"build","signature":"build()","return":"spreadsheet.EmbeddedChart","doc":"Builds the chart to reflect all changes made to it.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#build()","argument":[]},{"name":"getChartType","signature":"getChartType()","return":"charts.ChartType","doc":"Returns the current chart type.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#getChartType()","argument":[]},{"name":"getContainer","signature":"getContainer()","return":"spreadsheet.ContainerInfo","doc":"Return the chart ContainerInfo, which encapsulates where the chart appears on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#getContainer()","argument":[]},{"name":"getRanges","signature":"getRanges()","return":"spreadsheet.Range[]","doc":"Returns a copy of the list of ranges currently providing data for this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#getRanges()","argument":[]},{"name":"removeRange","signature":"removeRange(range)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Removes the specified range from the chart this builder modifies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#removeRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to remove."}]},{"name":"reverseCategories","signature":"reverseCategories()","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Reverses the drawing of series in the domain axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#reverseCategories()","argument":[]},{"name":"setBackgroundColor","signature":"setBackgroundColor(cssValue)","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the background color for the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setBackgroundColor(String)","argument":[{"name":"cssValue","type":"String","doc":"the CSS value for the color (such as \"blue\" or \"#00f\")"}]},{"name":"setChartType","signature":"setChartType(type)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Changes the type of chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setChartType(ChartType)","argument":[{"name":"type","type":"charts.ChartType","doc":"The type to change this chart into."}]},{"name":"setColors","signature":"setColors(cssValues)","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the colors for the lines in the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setColors(String)","argument":[{"name":"cssValues","type":"String[]","doc":"an array of color CSS values, such as [\"red\", \"#acf\"]. The nth element in the array represents the color of the nth line in the chart."}]},{"name":"setHiddenDimensionStrategy","signature":"setHiddenDimensionStrategy(strategy)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the strategy to use for hidden rows and columns.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setHiddenDimensionStrategy(ChartHiddenDimensionStrategy)","argument":[{"name":"strategy","type":"charts.ChartHiddenDimensionStrategy","doc":"The strategy to use for hidden rows and columns."}]},{"name":"setLegendPosition","signature":"setLegendPosition(position)","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the position of the legend with respect to the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setLegendPosition(Position)","argument":[{"name":"position","type":"charts.Position","doc":"the position of the legend"}]},{"name":"setLegendTextStyle","signature":"setLegendTextStyle(textStyle)","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the text style of the chart legend.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setLegendTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the chart legend."}]},{"name":"setMergeStrategy","signature":"setMergeStrategy(mergeStrategy)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the merge strategy to use when more than one range exists.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setMergeStrategy(ChartMergeStrategy)","argument":[{"name":"mergeStrategy","type":"charts.ChartMergeStrategy","doc":"The merge strategy to use."}]},{"name":"setNumHeaders","signature":"setNumHeaders(headers)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the number of rows or columns of the range that should be treated as headers.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setNumHeaders(Integer)","argument":[{"name":"headers","type":"Integer","doc":"The number of rows or columns to treat as headers. Negative values cause headers to be auto-detected."}]},{"name":"setOption","signature":"setOption(option, value)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets advanced options for this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setOption(String,Object)","argument":[{"name":"option","type":"String","doc":"The name of the option."},{"name":"value","type":"Object","doc":"The value of the option."}]},{"name":"setPosition","signature":"setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the position, changing where the chart appears on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setPosition(Integer,Integer,Integer,Integer)","argument":[{"name":"anchorRowPos","type":"Integer","doc":"The chart's top side is anchored in this row."},{"name":"anchorColPos","type":"Integer","doc":"The chart's left side is anchored in this column."},{"name":"offsetX","type":"Integer","doc":"The chart's upper right-hand corner is offset by this many pixels."},{"name":"offsetY","type":"Integer","doc":"The chart's lower left-hand corner is offset by this many pixels."}]},{"name":"setRange","signature":"setRange(start, end)","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the range for the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setRange(Number,Number)","argument":[{"name":"start","type":"Number","doc":"value for the lowest grid line of the range axis"},{"name":"end","type":"Number","doc":"value for the highest grid line of the range axis"}]},{"name":"setStacked","signature":"setStacked()","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Uses stacked lines, meaning that line and bar values are stacked (accumulated).","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setStacked()","argument":[]},{"name":"setTitle","signature":"setTitle(chartTitle)","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the title of the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setTitle(String)","argument":[{"name":"chartTitle","type":"String","doc":"the chart title."}]},{"name":"setTitleTextStyle","signature":"setTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the text style of the chart title.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the chart title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setTransposeRowsAndColumns","signature":"setTransposeRowsAndColumns(transpose)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets whether the chart's rows and columns are transposed.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setTransposeRowsAndColumns(Boolean)","argument":[{"name":"transpose","type":"Boolean","doc":"If true, the rows and columns used to construct the chart are transposed."}]},{"name":"setXAxisTextStyle","signature":"setXAxisTextStyle(textStyle)","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the horizontal axis text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setXAxisTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setXAxisTitle","signature":"setXAxisTitle(title)","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Adds a title to the horizontal axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setXAxisTitle(String)","argument":[{"name":"title","type":"String","doc":"the title for the X-axis"}]},{"name":"setXAxisTitleTextStyle","signature":"setXAxisTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the horizontal axis title text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setXAxisTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setYAxisTextStyle","signature":"setYAxisTextStyle(textStyle)","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the vertical axis text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setYAxisTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setYAxisTitle","signature":"setYAxisTitle(title)","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Adds a title to the vertical axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setYAxisTitle(String)","argument":[{"name":"title","type":"String","doc":"the title for the Y-axis"}]},{"name":"setYAxisTitleTextStyle","signature":"setYAxisTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the vertical axis title text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#setYAxisTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"useLogScale","signature":"useLogScale()","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Makes the range axis into a logarithmic scale (requires all values to be positive).","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder/#useLogScale()","argument":[]}]},"spreadsheet.EmbeddedHistogramChartBuilder":{"name":"EmbeddedHistogramChartBuilder","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder","doc":"Builder for histogram charts. For more details, see the Gviz documentation.","property":[],"method":[{"name":"addRange","signature":"addRange(range)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Adds a range to the chart this builder modifies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#addRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to add."}]},{"name":"asAreaChart","signature":"asAreaChart()","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#asAreaChart()","argument":[]},{"name":"asBarChart","signature":"asBarChart()","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#asBarChart()","argument":[]},{"name":"asColumnChart","signature":"asColumnChart()","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#asColumnChart()","argument":[]},{"name":"asComboChart","signature":"asComboChart()","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#asComboChart()","argument":[]},{"name":"asHistogramChart","signature":"asHistogramChart()","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#asHistogramChart()","argument":[]},{"name":"asLineChart","signature":"asLineChart()","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#asLineChart()","argument":[]},{"name":"asPieChart","signature":"asPieChart()","return":"spreadsheet.EmbeddedPieChartBuilder","doc":"Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#asPieChart()","argument":[]},{"name":"asScatterChart","signature":"asScatterChart()","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#asScatterChart()","argument":[]},{"name":"asTableChart","signature":"asTableChart()","return":"spreadsheet.EmbeddedTableChartBuilder","doc":"Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#asTableChart()","argument":[]},{"name":"build","signature":"build()","return":"spreadsheet.EmbeddedChart","doc":"Builds the chart to reflect all changes made to it.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#build()","argument":[]},{"name":"getChartType","signature":"getChartType()","return":"charts.ChartType","doc":"Returns the current chart type.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#getChartType()","argument":[]},{"name":"getContainer","signature":"getContainer()","return":"spreadsheet.ContainerInfo","doc":"Return the chart ContainerInfo, which encapsulates where the chart appears on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#getContainer()","argument":[]},{"name":"getRanges","signature":"getRanges()","return":"spreadsheet.Range[]","doc":"Returns a copy of the list of ranges currently providing data for this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#getRanges()","argument":[]},{"name":"removeRange","signature":"removeRange(range)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Removes the specified range from the chart this builder modifies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#removeRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to remove."}]},{"name":"reverseCategories","signature":"reverseCategories()","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Reverses the drawing of series in the domain axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#reverseCategories()","argument":[]},{"name":"setBackgroundColor","signature":"setBackgroundColor(cssValue)","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the background color for the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setBackgroundColor(String)","argument":[{"name":"cssValue","type":"String","doc":"the CSS value for the color (such as \"blue\" or \"#00f\")"}]},{"name":"setChartType","signature":"setChartType(type)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Changes the type of chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setChartType(ChartType)","argument":[{"name":"type","type":"charts.ChartType","doc":"The type to change this chart into."}]},{"name":"setColors","signature":"setColors(cssValues)","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the colors for the lines in the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setColors(String)","argument":[{"name":"cssValues","type":"String[]","doc":"an array of color CSS values, such as [\"red\", \"#acf\"]. The nth element in the array represents the color of the nth line in the chart."}]},{"name":"setHiddenDimensionStrategy","signature":"setHiddenDimensionStrategy(strategy)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the strategy to use for hidden rows and columns.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setHiddenDimensionStrategy(ChartHiddenDimensionStrategy)","argument":[{"name":"strategy","type":"charts.ChartHiddenDimensionStrategy","doc":"The strategy to use for hidden rows and columns."}]},{"name":"setLegendPosition","signature":"setLegendPosition(position)","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the position of the legend with respect to the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setLegendPosition(Position)","argument":[{"name":"position","type":"charts.Position","doc":"the position of the legend"}]},{"name":"setLegendTextStyle","signature":"setLegendTextStyle(textStyle)","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the text style of the chart legend.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setLegendTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the chart legend."}]},{"name":"setMergeStrategy","signature":"setMergeStrategy(mergeStrategy)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the merge strategy to use when more than one range exists.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setMergeStrategy(ChartMergeStrategy)","argument":[{"name":"mergeStrategy","type":"charts.ChartMergeStrategy","doc":"The merge strategy to use."}]},{"name":"setNumHeaders","signature":"setNumHeaders(headers)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the number of rows or columns of the range that should be treated as headers.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setNumHeaders(Integer)","argument":[{"name":"headers","type":"Integer","doc":"The number of rows or columns to treat as headers. Negative values cause headers to be auto-detected."}]},{"name":"setOption","signature":"setOption(option, value)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets advanced options for this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setOption(String,Object)","argument":[{"name":"option","type":"String","doc":"The name of the option."},{"name":"value","type":"Object","doc":"The value of the option."}]},{"name":"setPosition","signature":"setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the position, changing where the chart appears on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setPosition(Integer,Integer,Integer,Integer)","argument":[{"name":"anchorRowPos","type":"Integer","doc":"The chart's top side is anchored in this row."},{"name":"anchorColPos","type":"Integer","doc":"The chart's left side is anchored in this column."},{"name":"offsetX","type":"Integer","doc":"The chart's upper right-hand corner is offset by this many pixels."},{"name":"offsetY","type":"Integer","doc":"The chart's lower left-hand corner is offset by this many pixels."}]},{"name":"setRange","signature":"setRange(start, end)","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the range for the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setRange(Number,Number)","argument":[{"name":"start","type":"Number","doc":"value for the lowest grid line of the range axis"},{"name":"end","type":"Number","doc":"value for the highest grid line of the range axis"}]},{"name":"setStacked","signature":"setStacked()","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Uses stacked lines, meaning that line and bar values are stacked (accumulated).","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setStacked()","argument":[]},{"name":"setTitle","signature":"setTitle(chartTitle)","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the title of the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setTitle(String)","argument":[{"name":"chartTitle","type":"String","doc":"the chart title."}]},{"name":"setTitleTextStyle","signature":"setTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the text style of the chart title.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the chart title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setTransposeRowsAndColumns","signature":"setTransposeRowsAndColumns(transpose)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets whether the chart's rows and columns are transposed.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setTransposeRowsAndColumns(Boolean)","argument":[{"name":"transpose","type":"Boolean","doc":"If true, the rows and columns used to construct the chart are transposed."}]},{"name":"setXAxisTextStyle","signature":"setXAxisTextStyle(textStyle)","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the horizontal axis text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setXAxisTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setXAxisTitle","signature":"setXAxisTitle(title)","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Adds a title to the horizontal axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setXAxisTitle(String)","argument":[{"name":"title","type":"String","doc":"the title for the X-axis"}]},{"name":"setXAxisTitleTextStyle","signature":"setXAxisTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the horizontal axis title text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setXAxisTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setYAxisTextStyle","signature":"setYAxisTextStyle(textStyle)","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the vertical axis text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setYAxisTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setYAxisTitle","signature":"setYAxisTitle(title)","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Adds a title to the vertical axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setYAxisTitle(String)","argument":[{"name":"title","type":"String","doc":"the title for the Y-axis"}]},{"name":"setYAxisTitleTextStyle","signature":"setYAxisTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the vertical axis title text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#setYAxisTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"useLogScale","signature":"useLogScale()","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Makes the range axis into a logarithmic scale (requires all values to be positive).","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder/#useLogScale()","argument":[]}]},"spreadsheet.EmbeddedLineChartBuilder":{"name":"EmbeddedLineChartBuilder","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder","doc":"Builder for line charts. For more details, see the Gviz documentation.","property":[],"method":[{"name":"addRange","signature":"addRange(range)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Adds a range to the chart this builder modifies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#addRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to add."}]},{"name":"asAreaChart","signature":"asAreaChart()","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#asAreaChart()","argument":[]},{"name":"asBarChart","signature":"asBarChart()","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#asBarChart()","argument":[]},{"name":"asColumnChart","signature":"asColumnChart()","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#asColumnChart()","argument":[]},{"name":"asComboChart","signature":"asComboChart()","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#asComboChart()","argument":[]},{"name":"asHistogramChart","signature":"asHistogramChart()","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#asHistogramChart()","argument":[]},{"name":"asLineChart","signature":"asLineChart()","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#asLineChart()","argument":[]},{"name":"asPieChart","signature":"asPieChart()","return":"spreadsheet.EmbeddedPieChartBuilder","doc":"Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#asPieChart()","argument":[]},{"name":"asScatterChart","signature":"asScatterChart()","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#asScatterChart()","argument":[]},{"name":"asTableChart","signature":"asTableChart()","return":"spreadsheet.EmbeddedTableChartBuilder","doc":"Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#asTableChart()","argument":[]},{"name":"build","signature":"build()","return":"spreadsheet.EmbeddedChart","doc":"Builds the chart to reflect all changes made to it.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#build()","argument":[]},{"name":"getChartType","signature":"getChartType()","return":"charts.ChartType","doc":"Returns the current chart type.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#getChartType()","argument":[]},{"name":"getContainer","signature":"getContainer()","return":"spreadsheet.ContainerInfo","doc":"Return the chart ContainerInfo, which encapsulates where the chart appears on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#getContainer()","argument":[]},{"name":"getRanges","signature":"getRanges()","return":"spreadsheet.Range[]","doc":"Returns a copy of the list of ranges currently providing data for this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#getRanges()","argument":[]},{"name":"removeRange","signature":"removeRange(range)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Removes the specified range from the chart this builder modifies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#removeRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to remove."}]},{"name":"reverseCategories","signature":"reverseCategories()","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Reverses the drawing of series in the domain axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#reverseCategories()","argument":[]},{"name":"setBackgroundColor","signature":"setBackgroundColor(cssValue)","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the background color for the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setBackgroundColor(String)","argument":[{"name":"cssValue","type":"String","doc":"the CSS value for the color (such as \"blue\" or \"#00f\")"}]},{"name":"setChartType","signature":"setChartType(type)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Changes the type of chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setChartType(ChartType)","argument":[{"name":"type","type":"charts.ChartType","doc":"The type to change this chart into."}]},{"name":"setColors","signature":"setColors(cssValues)","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the colors for the lines in the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setColors(String)","argument":[{"name":"cssValues","type":"String[]","doc":"an array of color CSS values, such as [\"red\", \"#acf\"]. The nth element in the array represents the color of the nth line in the chart."}]},{"name":"setCurveStyle","signature":"setCurveStyle(style)","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the style to use for curves in the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setCurveStyle(CurveStyle)","argument":[{"name":"style","type":"charts.CurveStyle","doc":"the style for curves in the chart"}]},{"name":"setHiddenDimensionStrategy","signature":"setHiddenDimensionStrategy(strategy)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the strategy to use for hidden rows and columns.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setHiddenDimensionStrategy(ChartHiddenDimensionStrategy)","argument":[{"name":"strategy","type":"charts.ChartHiddenDimensionStrategy","doc":"The strategy to use for hidden rows and columns."}]},{"name":"setLegendPosition","signature":"setLegendPosition(position)","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the position of the legend with respect to the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setLegendPosition(Position)","argument":[{"name":"position","type":"charts.Position","doc":"the position of the legend"}]},{"name":"setLegendTextStyle","signature":"setLegendTextStyle(textStyle)","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the text style of the chart legend.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setLegendTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the chart legend."}]},{"name":"setMergeStrategy","signature":"setMergeStrategy(mergeStrategy)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the merge strategy to use when more than one range exists.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setMergeStrategy(ChartMergeStrategy)","argument":[{"name":"mergeStrategy","type":"charts.ChartMergeStrategy","doc":"The merge strategy to use."}]},{"name":"setNumHeaders","signature":"setNumHeaders(headers)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the number of rows or columns of the range that should be treated as headers.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setNumHeaders(Integer)","argument":[{"name":"headers","type":"Integer","doc":"The number of rows or columns to treat as headers. Negative values cause headers to be auto-detected."}]},{"name":"setOption","signature":"setOption(option, value)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets advanced options for this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setOption(String,Object)","argument":[{"name":"option","type":"String","doc":"The name of the option."},{"name":"value","type":"Object","doc":"The value of the option."}]},{"name":"setPointStyle","signature":"setPointStyle(style)","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the style for points in the line.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setPointStyle(PointStyle)","argument":[{"name":"style","type":"charts.PointStyle","doc":"the style to use for points in the line"}]},{"name":"setPosition","signature":"setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the position, changing where the chart appears on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setPosition(Integer,Integer,Integer,Integer)","argument":[{"name":"anchorRowPos","type":"Integer","doc":"The chart's top side is anchored in this row."},{"name":"anchorColPos","type":"Integer","doc":"The chart's left side is anchored in this column."},{"name":"offsetX","type":"Integer","doc":"The chart's upper right-hand corner is offset by this many pixels."},{"name":"offsetY","type":"Integer","doc":"The chart's lower left-hand corner is offset by this many pixels."}]},{"name":"setRange","signature":"setRange(start, end)","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the range for the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setRange(Number,Number)","argument":[{"name":"start","type":"Number","doc":"value for the lowest grid line of the range axis"},{"name":"end","type":"Number","doc":"value for the highest grid line of the range axis"}]},{"name":"setTitle","signature":"setTitle(chartTitle)","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the title of the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setTitle(String)","argument":[{"name":"chartTitle","type":"String","doc":"the chart title."}]},{"name":"setTitleTextStyle","signature":"setTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the text style of the chart title.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the chart title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setTransposeRowsAndColumns","signature":"setTransposeRowsAndColumns(transpose)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets whether the chart's rows and columns are transposed.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setTransposeRowsAndColumns(Boolean)","argument":[{"name":"transpose","type":"Boolean","doc":"If true, the rows and columns used to construct the chart are transposed."}]},{"name":"setXAxisTextStyle","signature":"setXAxisTextStyle(textStyle)","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the horizontal axis text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setXAxisTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setXAxisTitle","signature":"setXAxisTitle(title)","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Adds a title to the horizontal axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setXAxisTitle(String)","argument":[{"name":"title","type":"String","doc":"the title for the X-axis"}]},{"name":"setXAxisTitleTextStyle","signature":"setXAxisTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the horizontal axis title text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setXAxisTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setYAxisTextStyle","signature":"setYAxisTextStyle(textStyle)","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the vertical axis text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setYAxisTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setYAxisTitle","signature":"setYAxisTitle(title)","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Adds a title to the vertical axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setYAxisTitle(String)","argument":[{"name":"title","type":"String","doc":"the title for the Y-axis"}]},{"name":"setYAxisTitleTextStyle","signature":"setYAxisTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the vertical axis title text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#setYAxisTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"useLogScale","signature":"useLogScale()","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Makes the range axis into a logarithmic scale (requires all values to be positive).","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder/#useLogScale()","argument":[]}]},"spreadsheet.EmbeddedPieChartBuilder":{"name":"EmbeddedPieChartBuilder","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder","doc":"Builder for pie charts. For more details, see the Gviz documentation.","property":[],"method":[{"name":"addRange","signature":"addRange(range)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Adds a range to the chart this builder modifies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#addRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to add."}]},{"name":"asAreaChart","signature":"asAreaChart()","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#asAreaChart()","argument":[]},{"name":"asBarChart","signature":"asBarChart()","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#asBarChart()","argument":[]},{"name":"asColumnChart","signature":"asColumnChart()","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#asColumnChart()","argument":[]},{"name":"asComboChart","signature":"asComboChart()","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#asComboChart()","argument":[]},{"name":"asHistogramChart","signature":"asHistogramChart()","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#asHistogramChart()","argument":[]},{"name":"asLineChart","signature":"asLineChart()","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#asLineChart()","argument":[]},{"name":"asPieChart","signature":"asPieChart()","return":"spreadsheet.EmbeddedPieChartBuilder","doc":"Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#asPieChart()","argument":[]},{"name":"asScatterChart","signature":"asScatterChart()","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#asScatterChart()","argument":[]},{"name":"asTableChart","signature":"asTableChart()","return":"spreadsheet.EmbeddedTableChartBuilder","doc":"Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#asTableChart()","argument":[]},{"name":"build","signature":"build()","return":"spreadsheet.EmbeddedChart","doc":"Builds the chart to reflect all changes made to it.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#build()","argument":[]},{"name":"getChartType","signature":"getChartType()","return":"charts.ChartType","doc":"Returns the current chart type.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#getChartType()","argument":[]},{"name":"getContainer","signature":"getContainer()","return":"spreadsheet.ContainerInfo","doc":"Return the chart ContainerInfo, which encapsulates where the chart appears on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#getContainer()","argument":[]},{"name":"getRanges","signature":"getRanges()","return":"spreadsheet.Range[]","doc":"Returns a copy of the list of ranges currently providing data for this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#getRanges()","argument":[]},{"name":"removeRange","signature":"removeRange(range)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Removes the specified range from the chart this builder modifies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#removeRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to remove."}]},{"name":"reverseCategories","signature":"reverseCategories()","return":"spreadsheet.EmbeddedPieChartBuilder","doc":"Reverses the drawing of series in the domain axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#reverseCategories()","argument":[]},{"name":"set3D","signature":"set3D()","return":"spreadsheet.EmbeddedPieChartBuilder","doc":"Sets the chart to be three-dimensional.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#set3D()","argument":[]},{"name":"setBackgroundColor","signature":"setBackgroundColor(cssValue)","return":"spreadsheet.EmbeddedPieChartBuilder","doc":"Sets the background color for the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#setBackgroundColor(String)","argument":[{"name":"cssValue","type":"String","doc":"the CSS value for the color (such as \"blue\" or \"#00f\")"}]},{"name":"setChartType","signature":"setChartType(type)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Changes the type of chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#setChartType(ChartType)","argument":[{"name":"type","type":"charts.ChartType","doc":"The type to change this chart into."}]},{"name":"setColors","signature":"setColors(cssValues)","return":"spreadsheet.EmbeddedPieChartBuilder","doc":"Sets the colors for the lines in the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#setColors(String)","argument":[{"name":"cssValues","type":"String[]","doc":"an array of color CSS values, such as [\"red\", \"#acf\"]. The nth element in the array represents the color of the nth line in the chart."}]},{"name":"setHiddenDimensionStrategy","signature":"setHiddenDimensionStrategy(strategy)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the strategy to use for hidden rows and columns.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#setHiddenDimensionStrategy(ChartHiddenDimensionStrategy)","argument":[{"name":"strategy","type":"charts.ChartHiddenDimensionStrategy","doc":"The strategy to use for hidden rows and columns."}]},{"name":"setLegendPosition","signature":"setLegendPosition(position)","return":"spreadsheet.EmbeddedPieChartBuilder","doc":"Sets the position of the legend with respect to the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#setLegendPosition(Position)","argument":[{"name":"position","type":"charts.Position","doc":"the position of the legend"}]},{"name":"setLegendTextStyle","signature":"setLegendTextStyle(textStyle)","return":"spreadsheet.EmbeddedPieChartBuilder","doc":"Sets the text style of the chart legend.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#setLegendTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the chart legend."}]},{"name":"setMergeStrategy","signature":"setMergeStrategy(mergeStrategy)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the merge strategy to use when more than one range exists.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#setMergeStrategy(ChartMergeStrategy)","argument":[{"name":"mergeStrategy","type":"charts.ChartMergeStrategy","doc":"The merge strategy to use."}]},{"name":"setNumHeaders","signature":"setNumHeaders(headers)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the number of rows or columns of the range that should be treated as headers.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#setNumHeaders(Integer)","argument":[{"name":"headers","type":"Integer","doc":"The number of rows or columns to treat as headers. Negative values cause headers to be auto-detected."}]},{"name":"setOption","signature":"setOption(option, value)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets advanced options for this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#setOption(String,Object)","argument":[{"name":"option","type":"String","doc":"The name of the option."},{"name":"value","type":"Object","doc":"The value of the option."}]},{"name":"setPosition","signature":"setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the position, changing where the chart appears on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#setPosition(Integer,Integer,Integer,Integer)","argument":[{"name":"anchorRowPos","type":"Integer","doc":"The chart's top side is anchored in this row."},{"name":"anchorColPos","type":"Integer","doc":"The chart's left side is anchored in this column."},{"name":"offsetX","type":"Integer","doc":"The chart's upper right-hand corner is offset by this many pixels."},{"name":"offsetY","type":"Integer","doc":"The chart's lower left-hand corner is offset by this many pixels."}]},{"name":"setTitle","signature":"setTitle(chartTitle)","return":"spreadsheet.EmbeddedPieChartBuilder","doc":"Sets the title of the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#setTitle(String)","argument":[{"name":"chartTitle","type":"String","doc":"the chart title."}]},{"name":"setTitleTextStyle","signature":"setTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedPieChartBuilder","doc":"Sets the text style of the chart title.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#setTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the chart title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setTransposeRowsAndColumns","signature":"setTransposeRowsAndColumns(transpose)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets whether the chart's rows and columns are transposed.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder/#setTransposeRowsAndColumns(Boolean)","argument":[{"name":"transpose","type":"Boolean","doc":"If true, the rows and columns used to construct the chart are transposed."}]}]},"spreadsheet.EmbeddedScatterChartBuilder":{"name":"EmbeddedScatterChartBuilder","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder","doc":"Builder for scatter charts. For more details, see the Gviz documentation.","property":[],"method":[{"name":"addRange","signature":"addRange(range)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Adds a range to the chart this builder modifies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#addRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to add."}]},{"name":"asAreaChart","signature":"asAreaChart()","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#asAreaChart()","argument":[]},{"name":"asBarChart","signature":"asBarChart()","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#asBarChart()","argument":[]},{"name":"asColumnChart","signature":"asColumnChart()","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#asColumnChart()","argument":[]},{"name":"asComboChart","signature":"asComboChart()","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#asComboChart()","argument":[]},{"name":"asHistogramChart","signature":"asHistogramChart()","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#asHistogramChart()","argument":[]},{"name":"asLineChart","signature":"asLineChart()","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#asLineChart()","argument":[]},{"name":"asPieChart","signature":"asPieChart()","return":"spreadsheet.EmbeddedPieChartBuilder","doc":"Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#asPieChart()","argument":[]},{"name":"asScatterChart","signature":"asScatterChart()","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#asScatterChart()","argument":[]},{"name":"asTableChart","signature":"asTableChart()","return":"spreadsheet.EmbeddedTableChartBuilder","doc":"Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#asTableChart()","argument":[]},{"name":"build","signature":"build()","return":"spreadsheet.EmbeddedChart","doc":"Builds the chart to reflect all changes made to it.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#build()","argument":[]},{"name":"getChartType","signature":"getChartType()","return":"charts.ChartType","doc":"Returns the current chart type.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#getChartType()","argument":[]},{"name":"getContainer","signature":"getContainer()","return":"spreadsheet.ContainerInfo","doc":"Return the chart ContainerInfo, which encapsulates where the chart appears on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#getContainer()","argument":[]},{"name":"getRanges","signature":"getRanges()","return":"spreadsheet.Range[]","doc":"Returns a copy of the list of ranges currently providing data for this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#getRanges()","argument":[]},{"name":"removeRange","signature":"removeRange(range)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Removes the specified range from the chart this builder modifies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#removeRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to remove."}]},{"name":"setBackgroundColor","signature":"setBackgroundColor(cssValue)","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the background color for the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setBackgroundColor(String)","argument":[{"name":"cssValue","type":"String","doc":"the CSS value for the color (such as \"blue\" or \"#00f\")"}]},{"name":"setChartType","signature":"setChartType(type)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Changes the type of chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setChartType(ChartType)","argument":[{"name":"type","type":"charts.ChartType","doc":"The type to change this chart into."}]},{"name":"setColors","signature":"setColors(cssValues)","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the colors for the lines in the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setColors(String)","argument":[{"name":"cssValues","type":"String[]","doc":"an array of color CSS values, such as [\"red\", \"#acf\"]. The nth element in the array represents the color of the nth line in the chart."}]},{"name":"setHiddenDimensionStrategy","signature":"setHiddenDimensionStrategy(strategy)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the strategy to use for hidden rows and columns.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setHiddenDimensionStrategy(ChartHiddenDimensionStrategy)","argument":[{"name":"strategy","type":"charts.ChartHiddenDimensionStrategy","doc":"The strategy to use for hidden rows and columns."}]},{"name":"setLegendPosition","signature":"setLegendPosition(position)","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the position of the legend with respect to the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setLegendPosition(Position)","argument":[{"name":"position","type":"charts.Position","doc":"the position of the legend"}]},{"name":"setLegendTextStyle","signature":"setLegendTextStyle(textStyle)","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the text style of the chart legend.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setLegendTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the chart legend."}]},{"name":"setMergeStrategy","signature":"setMergeStrategy(mergeStrategy)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the merge strategy to use when more than one range exists.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setMergeStrategy(ChartMergeStrategy)","argument":[{"name":"mergeStrategy","type":"charts.ChartMergeStrategy","doc":"The merge strategy to use."}]},{"name":"setNumHeaders","signature":"setNumHeaders(headers)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the number of rows or columns of the range that should be treated as headers.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setNumHeaders(Integer)","argument":[{"name":"headers","type":"Integer","doc":"The number of rows or columns to treat as headers. Negative values cause headers to be auto-detected."}]},{"name":"setOption","signature":"setOption(option, value)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets advanced options for this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setOption(String,Object)","argument":[{"name":"option","type":"String","doc":"The name of the option."},{"name":"value","type":"Object","doc":"The value of the option."}]},{"name":"setPointStyle","signature":"setPointStyle(style)","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the style for points in the line.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setPointStyle(PointStyle)","argument":[{"name":"style","type":"charts.PointStyle","doc":"the style to use for points in the line"}]},{"name":"setPosition","signature":"setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the position, changing where the chart appears on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setPosition(Integer,Integer,Integer,Integer)","argument":[{"name":"anchorRowPos","type":"Integer","doc":"The chart's top side is anchored in this row."},{"name":"anchorColPos","type":"Integer","doc":"The chart's left side is anchored in this column."},{"name":"offsetX","type":"Integer","doc":"The chart's upper right-hand corner is offset by this many pixels."},{"name":"offsetY","type":"Integer","doc":"The chart's lower left-hand corner is offset by this many pixels."}]},{"name":"setTitle","signature":"setTitle(chartTitle)","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the title of the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setTitle(String)","argument":[{"name":"chartTitle","type":"String","doc":"the chart title."}]},{"name":"setTitleTextStyle","signature":"setTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the text style of the chart title.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the chart title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setTransposeRowsAndColumns","signature":"setTransposeRowsAndColumns(transpose)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets whether the chart's rows and columns are transposed.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setTransposeRowsAndColumns(Boolean)","argument":[{"name":"transpose","type":"Boolean","doc":"If true, the rows and columns used to construct the chart are transposed."}]},{"name":"setXAxisLogScale","signature":"setXAxisLogScale()","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Makes the horizontal axis into a logarithmic scale (requires all values to be positive).","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setXAxisLogScale()","argument":[]},{"name":"setXAxisRange","signature":"setXAxisRange(start, end)","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the range for the horizontal axis of the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setXAxisRange(Number,Number)","argument":[{"name":"start","type":"Number","doc":"value for the lowest grid line of the horizontal axis"},{"name":"end","type":"Number","doc":"value for the highest grid line of the horizontal axis"}]},{"name":"setXAxisTextStyle","signature":"setXAxisTextStyle(textStyle)","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the horizontal axis text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setXAxisTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setXAxisTitle","signature":"setXAxisTitle(title)","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Adds a title to the horizontal axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setXAxisTitle(String)","argument":[{"name":"title","type":"String","doc":"the title for the X-axis"}]},{"name":"setXAxisTitleTextStyle","signature":"setXAxisTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the horizontal axis title text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setXAxisTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setYAxisLogScale","signature":"setYAxisLogScale()","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Makes the vertical axis into a logarithmic scale (requires all values to be positive).","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setYAxisLogScale()","argument":[]},{"name":"setYAxisRange","signature":"setYAxisRange(start, end)","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the range for the vertical axis of the chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setYAxisRange(Number,Number)","argument":[{"name":"start","type":"Number","doc":"value for the lowest grid line of the vertical axis"},{"name":"end","type":"Number","doc":"value for the highest grid line of the vertical axis"}]},{"name":"setYAxisTextStyle","signature":"setYAxisTextStyle(textStyle)","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the vertical axis text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setYAxisTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]},{"name":"setYAxisTitle","signature":"setYAxisTitle(title)","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Adds a title to the vertical axis.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setYAxisTitle(String)","argument":[{"name":"title","type":"String","doc":"the title for the Y-axis"}]},{"name":"setYAxisTitleTextStyle","signature":"setYAxisTitleTextStyle(textStyle)","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the vertical axis title text style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder/#setYAxisTitleTextStyle(TextStyle)","argument":[{"name":"textStyle","type":"charts.TextStyle","doc":"the text style to use for the horizontal axis title. TextStyleBuilder object can be created by calling Charts.newTextStyle()."}]}]},"spreadsheet.EmbeddedTableChartBuilder":{"name":"EmbeddedTableChartBuilder","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder","doc":"Builder for table charts. For more details, see the Gviz documentation.","property":[],"method":[{"name":"addRange","signature":"addRange(range)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Adds a range to the chart this builder modifies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#addRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to add."}]},{"name":"asAreaChart","signature":"asAreaChart()","return":"spreadsheet.EmbeddedAreaChartBuilder","doc":"Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#asAreaChart()","argument":[]},{"name":"asBarChart","signature":"asBarChart()","return":"spreadsheet.EmbeddedBarChartBuilder","doc":"Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#asBarChart()","argument":[]},{"name":"asColumnChart","signature":"asColumnChart()","return":"spreadsheet.EmbeddedColumnChartBuilder","doc":"Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#asColumnChart()","argument":[]},{"name":"asComboChart","signature":"asComboChart()","return":"spreadsheet.EmbeddedComboChartBuilder","doc":"Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#asComboChart()","argument":[]},{"name":"asHistogramChart","signature":"asHistogramChart()","return":"spreadsheet.EmbeddedHistogramChartBuilder","doc":"Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#asHistogramChart()","argument":[]},{"name":"asLineChart","signature":"asLineChart()","return":"spreadsheet.EmbeddedLineChartBuilder","doc":"Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#asLineChart()","argument":[]},{"name":"asPieChart","signature":"asPieChart()","return":"spreadsheet.EmbeddedPieChartBuilder","doc":"Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#asPieChart()","argument":[]},{"name":"asScatterChart","signature":"asScatterChart()","return":"spreadsheet.EmbeddedScatterChartBuilder","doc":"Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#asScatterChart()","argument":[]},{"name":"asTableChart","signature":"asTableChart()","return":"spreadsheet.EmbeddedTableChartBuilder","doc":"Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#asTableChart()","argument":[]},{"name":"build","signature":"build()","return":"spreadsheet.EmbeddedChart","doc":"Builds the chart to reflect all changes made to it.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#build()","argument":[]},{"name":"enablePaging","signature":"enablePaging(enablePaging)","return":"spreadsheet.EmbeddedTableChartBuilder","doc":"Sets whether to enable paging through the data.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#enablePaging(Boolean)","argument":[{"name":"enablePaging","type":"Boolean","doc":"true if paging should be enabled, false otherwise"}]},{"name":"enablePaging","signature":"enablePaging(pageSize)","return":"spreadsheet.EmbeddedTableChartBuilder","doc":"Enables paging and sets the number of rows in each page.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#enablePaging(Integer)","argument":[{"name":"pageSize","type":"Integer","doc":"the number of rows in each page of the table"}]},{"name":"enablePaging","signature":"enablePaging(pageSize, startPage)","return":"spreadsheet.EmbeddedTableChartBuilder","doc":"Enables paging, sets the number of rows in each page and the first table page to display (page numbers are zero based).","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#enablePaging(Integer,Integer)","argument":[{"name":"pageSize","type":"Integer","doc":"the number of rows in each page of the table"},{"name":"startPage","type":"Integer","doc":"the first table page to display (page numbers are zero based)"}]},{"name":"enableRtlTable","signature":"enableRtlTable(rtlEnabled)","return":"spreadsheet.EmbeddedTableChartBuilder","doc":"Adds basic support for right-to-left languages (such as Arabic or Hebrew) by reversing the column order of the table, so that column zero is the right-most column, and the last column is the left-most column.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#enableRtlTable(Boolean)","argument":[{"name":"rtlEnabled","type":"Boolean","doc":"true if right-to-left support should be enabled, false otherwise"}]},{"name":"enableSorting","signature":"enableSorting(enableSorting)","return":"spreadsheet.EmbeddedTableChartBuilder","doc":"Sets whether to sort columns when the user clicks a column heading.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#enableSorting(Boolean)","argument":[{"name":"enableSorting","type":"Boolean","doc":"true if to enable sorting by clicking on column headers, false otherwise"}]},{"name":"getChartType","signature":"getChartType()","return":"charts.ChartType","doc":"Returns the current chart type.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#getChartType()","argument":[]},{"name":"getContainer","signature":"getContainer()","return":"spreadsheet.ContainerInfo","doc":"Return the chart ContainerInfo, which encapsulates where the chart appears on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#getContainer()","argument":[]},{"name":"getRanges","signature":"getRanges()","return":"spreadsheet.Range[]","doc":"Returns a copy of the list of ranges currently providing data for this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#getRanges()","argument":[]},{"name":"removeRange","signature":"removeRange(range)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Removes the specified range from the chart this builder modifies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#removeRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to remove."}]},{"name":"setChartType","signature":"setChartType(type)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Changes the type of chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#setChartType(ChartType)","argument":[{"name":"type","type":"charts.ChartType","doc":"The type to change this chart into."}]},{"name":"setFirstRowNumber","signature":"setFirstRowNumber(number)","return":"spreadsheet.EmbeddedTableChartBuilder","doc":"Sets the row number for the first row in the data table.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#setFirstRowNumber(Integer)","argument":[{"name":"number","type":"Integer","doc":"the row number for the first row in the data table"}]},{"name":"setHiddenDimensionStrategy","signature":"setHiddenDimensionStrategy(strategy)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the strategy to use for hidden rows and columns.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#setHiddenDimensionStrategy(ChartHiddenDimensionStrategy)","argument":[{"name":"strategy","type":"charts.ChartHiddenDimensionStrategy","doc":"The strategy to use for hidden rows and columns."}]},{"name":"setInitialSortingAscending","signature":"setInitialSortingAscending(column)","return":"spreadsheet.EmbeddedTableChartBuilder","doc":"Sets the index of the column according to which the table should be initially sorted (ascending).","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#setInitialSortingAscending(Integer)","argument":[{"name":"column","type":"Integer","doc":"the number of the column according to which the table should be initially sorted"}]},{"name":"setInitialSortingDescending","signature":"setInitialSortingDescending(column)","return":"spreadsheet.EmbeddedTableChartBuilder","doc":"Sets the index of the column according to which the table should be initially sorted (descending).","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#setInitialSortingDescending(Integer)","argument":[{"name":"column","type":"Integer","doc":"the number of the column according to which the table should be initially sorted"}]},{"name":"setMergeStrategy","signature":"setMergeStrategy(mergeStrategy)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the merge strategy to use when more than one range exists.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#setMergeStrategy(ChartMergeStrategy)","argument":[{"name":"mergeStrategy","type":"charts.ChartMergeStrategy","doc":"The merge strategy to use."}]},{"name":"setNumHeaders","signature":"setNumHeaders(headers)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the number of rows or columns of the range that should be treated as headers.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#setNumHeaders(Integer)","argument":[{"name":"headers","type":"Integer","doc":"The number of rows or columns to treat as headers. Negative values cause headers to be auto-detected."}]},{"name":"setOption","signature":"setOption(option, value)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets advanced options for this chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#setOption(String,Object)","argument":[{"name":"option","type":"String","doc":"The name of the option."},{"name":"value","type":"Object","doc":"The value of the option."}]},{"name":"setPosition","signature":"setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets the position, changing where the chart appears on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#setPosition(Integer,Integer,Integer,Integer)","argument":[{"name":"anchorRowPos","type":"Integer","doc":"The chart's top side is anchored in this row."},{"name":"anchorColPos","type":"Integer","doc":"The chart's left side is anchored in this column."},{"name":"offsetX","type":"Integer","doc":"The chart's upper right-hand corner is offset by this many pixels."},{"name":"offsetY","type":"Integer","doc":"The chart's lower left-hand corner is offset by this many pixels."}]},{"name":"setTransposeRowsAndColumns","signature":"setTransposeRowsAndColumns(transpose)","return":"spreadsheet.EmbeddedChartBuilder","doc":"Sets whether the chart's rows and columns are transposed.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#setTransposeRowsAndColumns(Boolean)","argument":[{"name":"transpose","type":"Boolean","doc":"If true, the rows and columns used to construct the chart are transposed."}]},{"name":"showRowNumberColumn","signature":"showRowNumberColumn(showRowNumber)","return":"spreadsheet.EmbeddedTableChartBuilder","doc":"Sets whether to show the row number as the first column of the table.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#showRowNumberColumn(Boolean)","argument":[{"name":"showRowNumber","type":"Boolean","doc":"true if the first column of the table should show the row number, false otherwise"}]},{"name":"useAlternatingRowStyle","signature":"useAlternatingRowStyle(alternate)","return":"spreadsheet.EmbeddedTableChartBuilder","doc":"Sets whether alternating color style will be assigned to odd and even rows of a table chart.","url":"https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder/#useAlternatingRowStyle(Boolean)","argument":[{"name":"alternate","type":"Boolean","doc":"true if color styles should be alternating, false otherwise"}]}]},"spreadsheet.Filter":{"name":"Filter","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter","doc":"Access and modify existing filters. To create a new filter, use Range.createFilter().","property":[],"method":[{"name":"getColumnFilterCriteria","signature":"getColumnFilterCriteria(columnPosition)","return":"spreadsheet.FilterCriteria","doc":"Gets the filter criteria on the specified column, or null if no filter criteria is set.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter/#getColumnFilterCriteria(Integer)","argument":[{"name":"columnPosition","type":"Integer","doc":"The 1-indexed position of the column."}]},{"name":"getRange","signature":"getRange()","return":"spreadsheet.Range","doc":"Gets the range this filter is applied to.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter/#getRange()","argument":[]},{"name":"remove","signature":"remove()","return":"void","doc":"Removes this filter.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter/#remove()","argument":[]},{"name":"removeColumnFilterCriteria","signature":"removeColumnFilterCriteria(columnPosition)","return":"spreadsheet.Filter","doc":"Removes the filter criteria from the specified column.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter/#removeColumnFilterCriteria(Integer)","argument":[{"name":"columnPosition","type":"Integer","doc":"The 1-indexed position of the column."}]},{"name":"setColumnFilterCriteria","signature":"setColumnFilterCriteria(columnPosition, filterCriteria)","return":"spreadsheet.Filter","doc":"Sets the filter criteria on the specified column.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter/#setColumnFilterCriteria(Integer,FilterCriteria)","argument":[{"name":"columnPosition","type":"Integer","doc":"The 1-indexed position of the column."},{"name":"filterCriteria","type":"spreadsheet.FilterCriteria","doc":"The filter criteria to set. If null, remove filter criteria from the specified column; alternatively, use removeColumnFilterCriteria(columnPosition)."}]},{"name":"sort","signature":"sort(columnPosition, ascending)","return":"spreadsheet.Filter","doc":"Sorts the filtered range by the specified column, excluding the first row (the header row) in the range this filter is applied to.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter/#sort(Integer,Boolean)","argument":[{"name":"columnPosition","type":"Integer","doc":"The 1-indexed position of the column."},{"name":"ascending","type":"Boolean","doc":"If true, sort the filtered range in ascending order; if false, sort the filtered range in descending order."}]}]},"spreadsheet.FilterCriteria":{"name":"FilterCriteria","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria","doc":"Access filter criteria. To create a new criteria, use SpreadsheetApp.newFilterCriteria() and FilterCriteriaBuilder.","property":[],"method":[{"name":"copy","signature":"copy()","return":"spreadsheet.FilterCriteriaBuilder","doc":"Creates a builder for a filter criteria based on this filter criteria's settings.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria/#copy()","argument":[]},{"name":"getCriteriaType","signature":"getCriteriaType()","return":"spreadsheet.BooleanCriteria","doc":"Returns the boolean criteria type as defined in the BooleanCriteria enum.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria/#getCriteriaType()","argument":[]},{"name":"getCriteriaValues","signature":"getCriteriaValues()","return":"Object[]","doc":"Returns an array of arguments for the boolean criteria.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria/#getCriteriaValues()","argument":[]},{"name":"getHiddenValues","signature":"getHiddenValues()","return":"String[]","doc":"Returns the values to hide.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria/#getHiddenValues()","argument":[]},{"name":"getVisibleValues","signature":"getVisibleValues()","return":"String[]","doc":"Returns the values to show.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria/#getVisibleValues()","argument":[]}]},"spreadsheet.FilterCriteriaBuilder":{"name":"FilterCriteriaBuilder","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder","doc":"Builder for FilterCriteria.","property":[],"method":[{"name":"build","signature":"build()","return":"spreadsheet.FilterCriteria","doc":"Constructs a filter criteria from the settings supplied to the builder.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#build()","argument":[]},{"name":"copy","signature":"copy()","return":"spreadsheet.FilterCriteriaBuilder","doc":"Creates a builder for a filter criteria based on this filter criteria's settings.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#copy()","argument":[]},{"name":"getCriteriaType","signature":"getCriteriaType()","return":"spreadsheet.BooleanCriteria","doc":"Returns the boolean criteria type as defined in the BooleanCriteria enum.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#getCriteriaType()","argument":[]},{"name":"getCriteriaValues","signature":"getCriteriaValues()","return":"Object[]","doc":"Returns an array of arguments for the boolean criteria.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#getCriteriaValues()","argument":[]},{"name":"getHiddenValues","signature":"getHiddenValues()","return":"String[]","doc":"Returns the values to hide.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#getHiddenValues()","argument":[]},{"name":"getVisibleValues","signature":"getVisibleValues()","return":"String[]","doc":"Returns the values to show.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#getVisibleValues()","argument":[]},{"name":"setHiddenValues","signature":"setHiddenValues(values)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the values to hide.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#setHiddenValues(String)","argument":[{"name":"values","type":"String[]","doc":"The list of values to hide."}]},{"name":"setVisibleValues","signature":"setVisibleValues(values)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the values to show.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#setVisibleValues(String)","argument":[{"name":"values","type":"String[]","doc":"The list of values to show."}]},{"name":"whenCellEmpty","signature":"whenCellEmpty()","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where the cell is empty.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenCellEmpty()","argument":[]},{"name":"whenCellNotEmpty","signature":"whenCellNotEmpty()","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where the cell is not empty.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenCellNotEmpty()","argument":[]},{"name":"whenDateAfter","signature":"whenDateAfter(date)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where the cell date is after the specified value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenDateAfter(Date)"},{"name":"whenDateAfter","signature":"whenDateAfter(date)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where the cell date is after the specified relative date.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenDateAfter(RelativeDate)","argument":[{"name":"date","type":"spreadsheet.RelativeDate","doc":"The latest date relative to the date type selected."}]},{"name":"whenDateBefore","signature":"whenDateBefore(date)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where the cell date is before the specified date.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenDateBefore(Date)"},{"name":"whenDateBefore","signature":"whenDateBefore(date)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where a cell date is before the specified relative date.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenDateBefore(RelativeDate)","argument":[{"name":"date","type":"spreadsheet.RelativeDate","doc":"The latest date relative to the date type selected."}]},{"name":"whenDateEqualTo","signature":"whenDateEqualTo(date)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where a cell date is equal to the specified date.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenDateEqualTo(Date)"},{"name":"whenDateEqualTo","signature":"whenDateEqualTo(date)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where a cell date is equal to the specified relative date.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenDateEqualTo(RelativeDate)","argument":[{"name":"date","type":"spreadsheet.RelativeDate","doc":"The latest date relative to the date type selected."}]},{"name":"whenFormulaSatisfied","signature":"whenFormulaSatisfied(formula)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where the specified formula (such as =B:B<C:C) evaluates to true.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenFormulaSatisfied(String)","argument":[{"name":"formula","type":"String","doc":"A custom formula that evaluates to true if the input is valid."}]},{"name":"whenNumberBetween","signature":"whenNumberBetween(start, end)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where the cell number is falls between, or is either of, two specified numbers.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenNumberBetween(Number,Number)","argument":[{"name":"start","type":"Number","doc":"The lowest acceptable value."},{"name":"end","type":"Number","doc":"The highest acceptable value."}]},{"name":"whenNumberEqualTo","signature":"whenNumberEqualTo(number)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where the cell number is equal to the specified value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenNumberEqualTo(Number)","argument":[{"name":"number","type":"Number","doc":"The sole acceptable value."}]},{"name":"whenNumberGreaterThan","signature":"whenNumberGreaterThan(number)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where the cell number is greater than the specified value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenNumberGreaterThan(Number)","argument":[{"name":"number","type":"Number","doc":"The highest unacceptable value."}]},{"name":"whenNumberGreaterThanOrEqualTo","signature":"whenNumberGreaterThanOrEqualTo(number)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where the cell number is greater than or equal to the specified value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenNumberGreaterThanOrEqualTo(Number)","argument":[{"name":"number","type":"Number","doc":"The lowest acceptable value."}]},{"name":"whenNumberLessThan","signature":"whenNumberLessThan(number)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the conditional conditional format rule to show cells where the cell number is less than the specified value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenNumberLessThan(Number)","argument":[{"name":"number","type":"Number","doc":"The lowest unacceptable value."}]},{"name":"whenNumberLessThanOrEqualTo","signature":"whenNumberLessThanOrEqualTo(number)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where the cell number is less than or equal to the specified value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenNumberLessThanOrEqualTo(Number)","argument":[{"name":"number","type":"Number","doc":"The highest acceptable value."}]},{"name":"whenNumberNotBetween","signature":"whenNumberNotBetween(start, end)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where the cell number does not fall between, and is neither of, two specified numbers.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenNumberNotBetween(Number,Number)","argument":[{"name":"start","type":"Number","doc":"The lowest unacceptable value."},{"name":"end","type":"Number","doc":"The highest unacceptable value."}]},{"name":"whenNumberNotEqualTo","signature":"whenNumberNotEqualTo(number)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where the cell number is not equal to the specified value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenNumberNotEqualTo(Number)","argument":[{"name":"number","type":"Number","doc":"The sole unacceptable value."}]},{"name":"whenTextContains","signature":"whenTextContains(text)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where the cell text contains the specified text.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenTextContains(String)","argument":[{"name":"text","type":"String","doc":"The value that the input must contain."}]},{"name":"whenTextDoesNotContain","signature":"whenTextDoesNotContain(text)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where the cell text does not contain the specified text.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenTextDoesNotContain(String)","argument":[{"name":"text","type":"String","doc":"The value that the input must not contain."}]},{"name":"whenTextEndsWith","signature":"whenTextEndsWith(text)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where the cell text ends with the specified text.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenTextEndsWith(String)","argument":[{"name":"text","type":"String","doc":"Text to compare against the end of the string."}]},{"name":"whenTextEqualTo","signature":"whenTextEqualTo(text)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where the cell text is equal to the specified text.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenTextEqualTo(String)","argument":[{"name":"text","type":"String","doc":"The sole acceptable value."}]},{"name":"whenTextStartsWith","signature":"whenTextStartsWith(text)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the filter criteria to show cells where the cell text starts with the specified text.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#whenTextStartsWith(String)","argument":[{"name":"text","type":"String","doc":"Text to compare against the beginning of the string."}]},{"name":"withCriteria","signature":"withCriteria(criteria, args)","return":"spreadsheet.FilterCriteriaBuilder","doc":"Sets the boolean criteria to criteria defined by BooleanCriteria values, typically taken from the criteria and arguments of an existing criteria.","url":"https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder/#withCriteria(BooleanCriteria,Object)","argument":[{"name":"criteria","type":"spreadsheet.BooleanCriteria","doc":"The type of boolean criteria."},{"name":"args","type":"Object[]","doc":"An array of arguments appropriate to the criteria type; the number of arguments and their type match the corresponding when...() method above."}]}]},"spreadsheet.GradientCondition":{"name":"GradientCondition","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/gradient-condition","doc":"Access gradient (color) conditions in ConditionalFormatRuleApis. Each conditional format rule may contain a single gradient condition. A gradient condition is defined by three points along a number scale (min, mid, and max), each of which has a color, a value, and a InterpolationType. The content of a cell is compared to the values in the number scale and the color applied to the cell is interpolated based on the cell content's proximity to the gradient condition min, mid, and max points.","property":[],"method":[{"name":"getMaxColor","signature":"getMaxColor()","return":"String","doc":"Gets the color set for the maximum value of this gradient condition.","url":"https://developers.google.com/apps-script/reference/spreadsheet/gradient-condition/#getMaxColor()","argument":[]},{"name":"getMaxType","signature":"getMaxType()","return":"spreadsheet.InterpolationType","doc":"Gets the interpolation type for the maximum value of this gradient condition.","url":"https://developers.google.com/apps-script/reference/spreadsheet/gradient-condition/#getMaxType()","argument":[]},{"name":"getMaxValue","signature":"getMaxValue()","return":"String","doc":"Gets the max value of this gradient condition.","url":"https://developers.google.com/apps-script/reference/spreadsheet/gradient-condition/#getMaxValue()","argument":[]},{"name":"getMidColor","signature":"getMidColor()","return":"String","doc":"Gets the color set for the mid-point value of this gradient condition.","url":"https://developers.google.com/apps-script/reference/spreadsheet/gradient-condition/#getMidColor()","argument":[]},{"name":"getMidType","signature":"getMidType()","return":"spreadsheet.InterpolationType","doc":"Gets the interpolation type for the mid-point value of this gradient condition.","url":"https://developers.google.com/apps-script/reference/spreadsheet/gradient-condition/#getMidType()","argument":[]},{"name":"getMidValue","signature":"getMidValue()","return":"String","doc":"Gets the mid-point value of this gradient condition.","url":"https://developers.google.com/apps-script/reference/spreadsheet/gradient-condition/#getMidValue()","argument":[]},{"name":"getMinColor","signature":"getMinColor()","return":"String","doc":"Gets the color set for the minimum value of this gradient condition.","url":"https://developers.google.com/apps-script/reference/spreadsheet/gradient-condition/#getMinColor()","argument":[]},{"name":"getMinType","signature":"getMinType()","return":"spreadsheet.InterpolationType","doc":"Gets the interpolation type for the minimum value of this gradient condition.","url":"https://developers.google.com/apps-script/reference/spreadsheet/gradient-condition/#getMinType()","argument":[]},{"name":"getMinValue","signature":"getMinValue()","return":"String","doc":"Gets the minimum value of this gradient condition.","url":"https://developers.google.com/apps-script/reference/spreadsheet/gradient-condition/#getMinValue()","argument":[]}]},"spreadsheet.Group":{"name":"Group","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/group","doc":"Access and modify spreadsheet groups. Groups are an association between an interval of contiguous rows or columns that can be expanded or collapsed as a unit to hide/show the rows or columns. Each group has a control toggle on the row or column directly before or after the group (depending on settings) that can expand or collapse the group as a whole.","property":[],"method":[{"name":"collapse","signature":"collapse()","return":"spreadsheet.Group","doc":"Collapses this group.","url":"https://developers.google.com/apps-script/reference/spreadsheet/group/#collapse()","argument":[]},{"name":"expand","signature":"expand()","return":"spreadsheet.Group","doc":"Expands this group.","url":"https://developers.google.com/apps-script/reference/spreadsheet/group/#expand()","argument":[]},{"name":"getControlIndex","signature":"getControlIndex()","return":"Integer","doc":"Returns the control toggle index of this group.","url":"https://developers.google.com/apps-script/reference/spreadsheet/group/#getControlIndex()","argument":[]},{"name":"getDepth","signature":"getDepth()","return":"Integer","doc":"Returns the depth of this group.","url":"https://developers.google.com/apps-script/reference/spreadsheet/group/#getDepth()","argument":[]},{"name":"getRange","signature":"getRange()","return":"spreadsheet.Range","doc":"Returns the range over which this group exists.","url":"https://developers.google.com/apps-script/reference/spreadsheet/group/#getRange()","argument":[]},{"name":"isCollapsed","signature":"isCollapsed()","return":"Boolean","doc":"Returns true if this group is collapsed.","url":"https://developers.google.com/apps-script/reference/spreadsheet/group/#isCollapsed()","argument":[]},{"name":"remove","signature":"remove()","return":"void","doc":"Removes this group from the sheet, reducing the group depth of the range by one.","url":"https://developers.google.com/apps-script/reference/spreadsheet/group/#remove()","argument":[]}]},"spreadsheet.NamedRange":{"name":"NamedRange","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/named-range","doc":"Create, access and modify named ranges in a spreadsheet. Named ranges are ranges that have associated string aliases. They can be viewed and edited via the Sheets UI under the Data > Named ranges... menu.","property":[],"method":[{"name":"getName","signature":"getName()","return":"String","doc":"Gets the name of this named range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/named-range/#getName()","argument":[]},{"name":"getRange","signature":"getRange()","return":"spreadsheet.Range","doc":"Gets the range referenced by this named range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/named-range/#getRange()","argument":[]},{"name":"remove","signature":"remove()","return":"void","doc":"Deletes this named range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/named-range/#remove()","argument":[]},{"name":"setName","signature":"setName(name)","return":"spreadsheet.NamedRange","doc":"Sets/updates the name of the named range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/named-range/#setName(String)","argument":[{"name":"name","type":"String","doc":"The new name of the named range."}]},{"name":"setRange","signature":"setRange(range)","return":"spreadsheet.NamedRange","doc":"Sets/updates the range for this named range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/named-range/#setRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The spreadsheet range to associate with this named range."}]}]},"spreadsheet.PageProtection":{"name":"PageProtection","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/page-protection","doc":"Deprecated. For spreadsheets created in the newer version of Google Sheets, use the more powerful Protection class instead. Although this class is deprecated, it remains available for compatibility with the older version of Sheets.","property":[],"method":[{"name":"addUser","signature":"addUser(email)","return":"void","doc":"Adds a user to the list of users who can edit the sheet, if it is protected.","url":"https://developers.google.com/apps-script/reference/spreadsheet/page-protection/#addUser(String)","argument":[{"name":"email","type":"String","doc":"The email of the user to add."}]},{"name":"getUsers","signature":"getUsers()","return":"String[]","doc":"Returns a list of the email addresses of the users who can edit this sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/page-protection/#getUsers()","argument":[]},{"name":"isProtected","signature":"isProtected()","return":"Boolean","doc":"Indicates whether the sheet has sheet protection enabled or not.","url":"https://developers.google.com/apps-script/reference/spreadsheet/page-protection/#isProtected()","argument":[]},{"name":"removeUser","signature":"removeUser(user)","return":"void","doc":"Removes a user from the list of users who can edit the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/page-protection/#removeUser(String)","argument":[{"name":"user","type":"String","doc":"The email address of the user to remove."}]},{"name":"setProtected","signature":"setProtected(protection)","return":"void","doc":"Sets the protection status for the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/page-protection/#setProtected(Boolean)","argument":[{"name":"protection","type":"Boolean","doc":"true to enable sheet protection, false to disable sheet protection."}]}]},"spreadsheet.PivotFilter":{"name":"PivotFilter","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-filter","doc":"Access and modify pivot table filters.","property":[],"method":[{"name":"getFilterCriteria","signature":"getFilterCriteria()","return":"spreadsheet.FilterCriteria","doc":"Returns the filter criteria for this pivot filter.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-filter/#getFilterCriteria()","argument":[]},{"name":"getPivotTable","signature":"getPivotTable()","return":"spreadsheet.PivotTable","doc":"Returns the PivotTable that this filter belongs to.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-filter/#getPivotTable()","argument":[]},{"name":"getSourceDataColumn","signature":"getSourceDataColumn()","return":"Integer","doc":"Returns the number of the source data column this filter operates on.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-filter/#getSourceDataColumn()","argument":[]},{"name":"remove","signature":"remove()","return":"void","doc":"Removes this pivot filter from the pivot table.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-filter/#remove()","argument":[]},{"name":"setFilterCriteria","signature":"setFilterCriteria(filterCriteria)","return":"spreadsheet.PivotFilter","doc":"Sets the filter criteria for this pivot filter.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-filter/#setFilterCriteria(FilterCriteria)","argument":[{"name":"filterCriteria","type":"spreadsheet.FilterCriteria","doc":"The filter criteria to set."}]}]},"spreadsheet.PivotGroup":{"name":"PivotGroup","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group","doc":"Access and modify pivot table breakout groups.","property":[],"method":[{"name":"addManualGroupingRule","signature":"addManualGroupingRule(groupName, groupMembers)","return":"spreadsheet.PivotGroup","doc":"Adds a manual grouping rule for this pivot group.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#addManualGroupingRule(String,Object)","argument":[{"name":"groupName","type":"String","doc":"The name of this grouping rule."},{"name":"groupMembers","type":"Object[]","doc":"The values that are included in this grouping rule."}]},{"name":"areLabelsRepeated","signature":"areLabelsRepeated()","return":"Boolean","doc":"Returns whether labels are displayed as repeated.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#areLabelsRepeated()","argument":[]},{"name":"clearGroupingRule","signature":"clearGroupingRule()","return":"spreadsheet.PivotGroup","doc":"Removes any grouping rules from this pivot group.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#clearGroupingRule()","argument":[]},{"name":"clearSort","signature":"clearSort()","return":"spreadsheet.PivotGroup","doc":"Removes any sorting applied to this group.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#clearSort()","argument":[]},{"name":"getDimension","signature":"getDimension()","return":"spreadsheet.Dimension","doc":"Returns whether this is a row or column group.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#getDimension()","argument":[]},{"name":"getIndex","signature":"getIndex()","return":"Integer","doc":"Returns the index of this pivot group in the current group order.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#getIndex()","argument":[]},{"name":"getPivotTable","signature":"getPivotTable()","return":"spreadsheet.PivotTable","doc":"Returns the PivotTable which this grouping belongs to.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#getPivotTable()","argument":[]},{"name":"getSourceDataColumn","signature":"getSourceDataColumn()","return":"Integer","doc":"Returns the number of the source data column this group summarizes.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#getSourceDataColumn()","argument":[]},{"name":"hideRepeatedLabels","signature":"hideRepeatedLabels()","return":"spreadsheet.PivotGroup","doc":"Hides repeated labels for this grouping.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#hideRepeatedLabels()","argument":[]},{"name":"isSortAscending","signature":"isSortAscending()","return":"Boolean","doc":"Returns true if the sort is ascending, returns false if the sort order is descending.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#isSortAscending()","argument":[]},{"name":"moveToIndex","signature":"moveToIndex(index)","return":"spreadsheet.PivotGroup","doc":"Moves this group to the specified position in the current list of row or column groups.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#moveToIndex(Integer)","argument":[{"name":"index","type":"Integer","doc":"The index to move this grouping to."}]},{"name":"remove","signature":"remove()","return":"void","doc":"Removes this pivot group from the table.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#remove()","argument":[]},{"name":"removeManualGroupingRule","signature":"removeManualGroupingRule(groupName)","return":"spreadsheet.PivotGroup","doc":"Removes the manual grouping rule with the specified groupName.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#removeManualGroupingRule(String)","argument":[{"name":"groupName","type":"String","doc":"The name of the grouping rule to remove."}]},{"name":"resetDisplayName","signature":"resetDisplayName()","return":"spreadsheet.PivotGroup","doc":"Resets the display name of this group in the pivot table to its default value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#resetDisplayName()","argument":[]},{"name":"setDisplayName","signature":"setDisplayName(name)","return":"spreadsheet.PivotGroup","doc":"Sets the display name of this group in the pivot table.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#setDisplayName(String)","argument":[{"name":"name","type":"String","doc":"The display name to set."}]},{"name":"setHistogramGroupingRule","signature":"setHistogramGroupingRule(minValue, maxValue, intervalSize)","return":"spreadsheet.PivotGroup","doc":"Sets a histogram grouping rule for this pivot group.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#setHistogramGroupingRule(Integer,Integer,Integer)","argument":[{"name":"minValue","type":"Integer","doc":"The minimum value for items to be placed into buckets. Values less than this are combined into a single bucket."},{"name":"maxValue","type":"Integer","doc":"The maximum value for items to be placed into buckets. Values greater than this are combined into a single bucket."},{"name":"intervalSize","type":"Integer","doc":""}]},{"name":"showRepeatedLabels","signature":"showRepeatedLabels()","return":"spreadsheet.PivotGroup","doc":"When there is more than one row or column grouping, this method displays this grouping's label for each entry of the subsequent grouping.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#showRepeatedLabels()","argument":[]},{"name":"showTotals","signature":"showTotals(showTotals)","return":"spreadsheet.PivotGroup","doc":"Sets whether to show total values for this pivot group in the table.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#showTotals(Boolean)","argument":[{"name":"showTotals","type":"Boolean","doc":"Whether to show totals or not."}]},{"name":"sortAscending","signature":"sortAscending()","return":"spreadsheet.PivotGroup","doc":"Sets the sort order to be ascending.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#sortAscending()","argument":[]},{"name":"sortBy","signature":"sortBy(value, oppositeGroupValues)","return":"spreadsheet.PivotGroup","doc":"Sorts this group by the specified PivotValue for the values from the oppositeGroupValues.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#sortBy(PivotValue,Object)","argument":[{"name":"value","type":"spreadsheet.PivotValue","doc":"The pivot value to sort by."},{"name":"oppositeGroupValues","type":"Object[]","doc":"The values of an opposite pivot group (a column group if sorting a row group, or a row group if sorting a column group) that are used to sort. The order of these values determines precedence for tie breaking."}]},{"name":"sortDescending","signature":"sortDescending()","return":"spreadsheet.PivotGroup","doc":"Sets the sort order to be descending.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#sortDescending()","argument":[]},{"name":"totalsAreShown","signature":"totalsAreShown()","return":"Boolean","doc":"Returns whether total values are currently shown for this pivot group.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-group/#totalsAreShown()","argument":[]}]},"spreadsheet.PivotTable":{"name":"PivotTable","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-table","doc":"Access and modify pivot tables.","property":[],"method":[{"name":"addCalculatedPivotValue","signature":"addCalculatedPivotValue(name, formula)","return":"spreadsheet.PivotValue","doc":"Creates a new pivot value in the pivot table calculated from the specified formula with the specified name.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-table/#addCalculatedPivotValue(String,String)","argument":[{"name":"name","type":"String","doc":"The name for this calculated pivot value."},{"name":"formula","type":"String","doc":"The formula used to calculate this value."}]},{"name":"addColumnGroup","signature":"addColumnGroup(sourceDataColumn)","return":"spreadsheet.PivotGroup","doc":"Defines a new pivot column grouping in the pivot table.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-table/#addColumnGroup(Integer)","argument":[{"name":"sourceDataColumn","type":"Integer","doc":"The number of the column this group summarizes. This index represents the absolute number of the column in the spreadsheet; 1 representing column \"A,\" 2 representing column B, etc."}]},{"name":"addFilter","signature":"addFilter(sourceDataColumn, filterCriteria)","return":"spreadsheet.PivotFilter","doc":"Creates a new pivot filter for the pivot table.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-table/#addFilter(Integer,FilterCriteria)","argument":[{"name":"sourceDataColumn","type":"Integer","doc":"The number of the column this group summarizes. This index represents the absolute number of the column in the spreadsheet; 1 representing column \"A,\" 2 representing column B, etc."},{"name":"filterCriteria","type":"spreadsheet.FilterCriteria","doc":"The filter criteria used to perform the filtering."}]},{"name":"addPivotValue","signature":"addPivotValue(sourceDataColumn, summarizeFunction)","return":"spreadsheet.PivotValue","doc":"Defines a new pivot value in the pivot table with the specified summarizeFunction.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-table/#addPivotValue(Integer,PivotTableSummarizeFunction)","argument":[{"name":"sourceDataColumn","type":"Integer","doc":"The number of the column this group summarizes. This index represents the absolute number of the column in the spreadsheet; 1 representing column \"A,\" 2 representing column B, etc."},{"name":"summarizeFunction","type":"spreadsheet.PivotTableSummarizeFunction","doc":""}]},{"name":"addRowGroup","signature":"addRowGroup(sourceDataColumn)","return":"spreadsheet.PivotGroup","doc":"Defines a new pivot row grouping in the pivot table.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-table/#addRowGroup(Integer)","argument":[{"name":"sourceDataColumn","type":"Integer","doc":"The number of the column this group summarizes. This index represents the absolute number of the column in the spreadsheet; 1 representing column \"A,\" 2 representing column B, etc."}]},{"name":"getAnchorCell","signature":"getAnchorCell()","return":"spreadsheet.Range","doc":"Returns the Range representing the cell where this pivot table is anchored.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-table/#getAnchorCell()","argument":[]},{"name":"getColumnGroups","signature":"getColumnGroups()","return":"spreadsheet.PivotGroup[]","doc":"Returns an ordered list of the column groups in this pivot table.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-table/#getColumnGroups()","argument":[]},{"name":"getFilters","signature":"getFilters()","return":"spreadsheet.PivotFilter[]","doc":"Returns an ordered list of the filters in this pivot table.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-table/#getFilters()","argument":[]},{"name":"getPivotValues","signature":"getPivotValues()","return":"spreadsheet.PivotValue[]","doc":"Returns an ordered list of the pivot values in this pivot table.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-table/#getPivotValues()","argument":[]},{"name":"getRowGroups","signature":"getRowGroups()","return":"spreadsheet.PivotGroup[]","doc":"Returns an ordered list of the row groups in this pivot table.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-table/#getRowGroups()","argument":[]},{"name":"getValuesDisplayOrientation","signature":"getValuesDisplayOrientation()","return":"spreadsheet.Dimension","doc":"Returns whether values are displayed as rows or columns.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-table/#getValuesDisplayOrientation()","argument":[]},{"name":"remove","signature":"remove()","return":"void","doc":"Deletes this pivot table.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-table/#remove()","argument":[]},{"name":"setValuesDisplayOrientation","signature":"setValuesDisplayOrientation(dimension)","return":"spreadsheet.PivotTable","doc":"Sets the layout of this pivot table to display values as columns or rows.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-table/#setValuesDisplayOrientation(Dimension)","argument":[{"name":"dimension","type":"spreadsheet.Dimension","doc":"The dimension indicating how to display pivot values."}]}]},"spreadsheet.PivotValue":{"name":"PivotValue","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-value","doc":"Access and modify value groups in pivot tables.","property":[],"method":[{"name":"getDisplayType","signature":"getDisplayType()","return":"spreadsheet.PivotValueDisplayType","doc":"Returns the display type describing how this pivot value is currently displayed in the table.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-value/#getDisplayType()","argument":[]},{"name":"getFormula","signature":"getFormula()","return":"String","doc":"Returns the formula used to calculate this value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-value/#getFormula()","argument":[]},{"name":"getPivotTable","signature":"getPivotTable()","return":"spreadsheet.PivotTable","doc":"Returns the PivotTable which this value belongs to.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-value/#getPivotTable()","argument":[]},{"name":"getSummarizedBy","signature":"getSummarizedBy()","return":"spreadsheet.PivotTableSummarizeFunction","doc":"Returns this group’s summarization function.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-value/#getSummarizedBy()","argument":[]},{"name":"setDisplayName","signature":"setDisplayName(name)","return":"spreadsheet.PivotValue","doc":"Sets the display name for this value in the pivot table.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-value/#setDisplayName(String)","argument":[{"name":"name","type":"String","doc":"The display name to set."}]},{"name":"setFormula","signature":"setFormula(formula)","return":"spreadsheet.PivotValue","doc":"Sets the formula used to calculate this value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-value/#setFormula(String)","argument":[{"name":"formula","type":"String","doc":"The formula to use to calculate this value."}]},{"name":"showAs","signature":"showAs(displayType)","return":"spreadsheet.PivotValue","doc":"Displays this value in the pivot table as a function of another value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-value/#showAs(PivotValueDisplayType)","argument":[{"name":"displayType","type":"spreadsheet.PivotValueDisplayType","doc":"The way to display the values."}]},{"name":"summarizeBy","signature":"summarizeBy(summarizeFunction)","return":"spreadsheet.PivotValue","doc":"Sets the summarization function.","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-value/#summarizeBy(PivotTableSummarizeFunction)","argument":[{"name":"summarizeFunction","type":"spreadsheet.PivotTableSummarizeFunction","doc":"The function to use to summarize data in this value's source data column."}]}]},"spreadsheet.Protection":{"name":"Protection","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection","doc":"Access and modify protected ranges and sheets. A protected range can protect either a static range of cells or a named range. A protected sheet may include unprotected regions. For spreadsheets created with the older version of Google Sheets, use the PageProtection class instead.","property":[],"method":[{"name":"addEditor","signature":"addEditor(emailAddress)","return":"spreadsheet.Protection","doc":"Adds the given user to the list of editors for the protected sheet or range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#addEditor(String)","argument":[{"name":"emailAddress","type":"String","doc":"The email address of the user to add."}]},{"name":"addEditor","signature":"addEditor(user)","return":"spreadsheet.Protection","doc":"Adds the given user to the list of editors for the protected sheet or range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#addEditor(User)","argument":[{"name":"user","type":"base.User","doc":"A representation of the user to add."}]},{"name":"addEditors","signature":"addEditors(emailAddresses)","return":"spreadsheet.Protection","doc":"Adds the given array of users to the list of editors for the protected sheet or range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#addEditors(String)","argument":[{"name":"emailAddresses","type":"String[]","doc":"An array of email addresses of the users to add."}]},{"name":"canDomainEdit","signature":"canDomainEdit()","return":"Boolean","doc":"Determines whether all users in the domain that owns the spreadsheet have permission to edit the protected range or sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#canDomainEdit()","argument":[]},{"name":"canEdit","signature":"canEdit()","return":"Boolean","doc":"Determines whether the user has permission to edit the protected range or sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#canEdit()","argument":[]},{"name":"getDescription","signature":"getDescription()","return":"String","doc":"Gets the description of the protected range or sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#getDescription()","argument":[]},{"name":"getEditors","signature":"getEditors()","return":"base.User[]","doc":"Gets the list of editors for the protected range or sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#getEditors()","argument":[]},{"name":"getProtectionType","signature":"getProtectionType()","return":"spreadsheet.ProtectionType","doc":"Gets the type of the protected area, either RANGE or SHEET.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#getProtectionType()","argument":[]},{"name":"getRange","signature":"getRange()","return":"spreadsheet.Range","doc":"Gets the range that is being protected.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#getRange()","argument":[]},{"name":"getRangeName","signature":"getRangeName()","return":"String","doc":"Gets the name of the protected range if it is associated with a named range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#getRangeName()","argument":[]},{"name":"getUnprotectedRanges","signature":"getUnprotectedRanges()","return":"spreadsheet.Range[]","doc":"Gets an array of unprotected ranges within a protected sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#getUnprotectedRanges()","argument":[]},{"name":"isWarningOnly","signature":"isWarningOnly()","return":"Boolean","doc":"Determines if the protected area is using \"warning based\" protection.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#isWarningOnly()","argument":[]},{"name":"remove","signature":"remove()","return":"void","doc":"Unprotects the range or sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#remove()","argument":[]},{"name":"removeEditor","signature":"removeEditor(emailAddress)","return":"spreadsheet.Protection","doc":"Removes the given user from the list of editors for the protected sheet or range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#removeEditor(String)","argument":[{"name":"emailAddress","type":"String","doc":"The email address of the user to remove."}]},{"name":"removeEditor","signature":"removeEditor(user)","return":"spreadsheet.Protection","doc":"Removes the given user from the list of editors for the protected sheet or range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#removeEditor(User)","argument":[{"name":"user","type":"base.User","doc":"A representation of the user to remove."}]},{"name":"removeEditors","signature":"removeEditors(emailAddresses)","return":"spreadsheet.Protection","doc":"Removes the given array of users from the list of editors for the protected sheet or range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#removeEditors(String)","argument":[{"name":"emailAddresses","type":"String[]","doc":"An array of email addresses of the users to remove."}]},{"name":"setDescription","signature":"setDescription(description)","return":"spreadsheet.Protection","doc":"Sets the description of the protected range or sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#setDescription(String)","argument":[{"name":"description","type":"String","doc":"The description of the protected range or sheet."}]},{"name":"setDomainEdit","signature":"setDomainEdit(editable)","return":"spreadsheet.Protection","doc":"Sets whether all users in the domain that owns the spreadsheet have permission to edit the protected range or sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#setDomainEdit(Boolean)","argument":[{"name":"editable","type":"Boolean","doc":"true if all users in the domain that owns the spreadsheet should have permission to edit the protected range or sheet; false if not."}]},{"name":"setNamedRange","signature":"setNamedRange(namedRange)","return":"spreadsheet.Protection","doc":"Associates the protected range with an existing named range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#setNamedRange(NamedRange)","argument":[{"name":"namedRange","type":"spreadsheet.NamedRange","doc":"The existing named range to associate with the protected range."}]},{"name":"setRange","signature":"setRange(range)","return":"spreadsheet.Protection","doc":"Adjusts the range that is being protected.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#setRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The new range to protect from edits."}]},{"name":"setRangeName","signature":"setRangeName(rangeName)","return":"spreadsheet.Protection","doc":"Associates the protected range with an existing named range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#setRangeName(String)","argument":[{"name":"rangeName","type":"String","doc":"The name of the named range to be protected."}]},{"name":"setUnprotectedRanges","signature":"setUnprotectedRanges(ranges)","return":"spreadsheet.Protection","doc":"Unprotects the given array of ranges within a protected sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#setUnprotectedRanges(Range)","argument":[{"name":"ranges","type":"spreadsheet.Range[]","doc":"The array of ranges to leave unprotected within a protected sheet."}]},{"name":"setWarningOnly","signature":"setWarningOnly(warningOnly)","return":"spreadsheet.Protection","doc":"Sets whether or not this protected range is using \"warning based\" protection.","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection/#setWarningOnly(Boolean)","argument":[{"name":"warningOnly","type":"Boolean","doc":""}]}]},"spreadsheet.Range":{"name":"Range","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/range","doc":"Access and modify spreadsheet ranges. A range can be a single cell in a sheet or a group of adjacent cells in a sheet.","property":[],"method":[{"name":"activate","signature":"activate()","return":"spreadsheet.Range","doc":"Sets the specified range as the active range, with the top left cell in the range as the current cell.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#activate()","argument":[]},{"name":"activateAsCurrentCell","signature":"activateAsCurrentCell()","return":"spreadsheet.Range","doc":"Sets the specified cell as the current cell.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#activateAsCurrentCell()","argument":[]},{"name":"applyColumnBanding","signature":"applyColumnBanding()","return":"spreadsheet.Banding","doc":"Applies a default column banding theme to the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#applyColumnBanding()","argument":[]},{"name":"applyColumnBanding","signature":"applyColumnBanding(bandingTheme)","return":"spreadsheet.Banding","doc":"Applies a specified column banding theme to the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#applyColumnBanding(BandingTheme)","argument":[{"name":"bandingTheme","type":"spreadsheet.BandingTheme","doc":"A color theme to apply to the columns in the range."}]},{"name":"applyColumnBanding","signature":"applyColumnBanding(bandingTheme, showHeader, showFooter)","return":"spreadsheet.Banding","doc":"Applies a specified column banding theme to the range with specified header and footer settings.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#applyColumnBanding(BandingTheme,Boolean,Boolean)","argument":[{"name":"bandingTheme","type":"spreadsheet.BandingTheme","doc":"A color theme to apply to the columns in the range."},{"name":"showHeader","type":"Boolean","doc":"If true, the banding theme header color is applied to the first column."},{"name":"showFooter","type":"Boolean","doc":"If true, the banding theme footer color is applied to the last column."}]},{"name":"applyRowBanding","signature":"applyRowBanding()","return":"spreadsheet.Banding","doc":"Applies a default row banding theme to the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#applyRowBanding()","argument":[]},{"name":"applyRowBanding","signature":"applyRowBanding(bandingTheme)","return":"spreadsheet.Banding","doc":"Applies a specified row banding theme to the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#applyRowBanding(BandingTheme)","argument":[{"name":"bandingTheme","type":"spreadsheet.BandingTheme","doc":"A color theme to apply to the rows in the range."}]},{"name":"applyRowBanding","signature":"applyRowBanding(bandingTheme, showHeader, showFooter)","return":"spreadsheet.Banding","doc":"Applies a specified row banding theme to the range with specified header and footer settings.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#applyRowBanding(BandingTheme,Boolean,Boolean)","argument":[{"name":"bandingTheme","type":"spreadsheet.BandingTheme","doc":"A color theme to apply to the rows in the range."},{"name":"showHeader","type":"Boolean","doc":"If true, the banding theme header color is applied to the first row."},{"name":"showFooter","type":"Boolean","doc":"If true, the banding theme footer color is applied to the last row."}]},{"name":"autoFill","signature":"autoFill(destination, series)","return":"void","doc":"Fills the destinationRange with data based on the data in this range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#autoFill(Range,AutoFillSeries)","argument":[{"name":"destination","type":"spreadsheet.Range","doc":"The range to be auto-filled with values. The destination range should contain this range and extend it in only one direction (upwards, downwards, left, or right)."},{"name":"series","type":"spreadsheet.AutoFillSeries","doc":"The type of autoFill series that should be used to calculate new values. The effect of this series differs based on the type and amount of source data."}]},{"name":"autoFillToNeighbor","signature":"autoFillToNeighbor(series)","return":"void","doc":"Calculates a range to fill with new data based on neighboring cells and automatically fills that range with new values based on the data contained in this range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#autoFillToNeighbor(AutoFillSeries)","argument":[{"name":"series","type":"spreadsheet.AutoFillSeries","doc":"The type of autoFill series that should be used to calculate new values. The effect of this series differs based on the type and amount of source data."}]},{"name":"breakApart","signature":"breakApart()","return":"spreadsheet.Range","doc":"Break any multi-column cells in the range into individual cells again.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#breakApart()","argument":[]},{"name":"canEdit","signature":"canEdit()","return":"Boolean","doc":"Determines whether the user has permission to edit every cell in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#canEdit()","argument":[]},{"name":"clear","signature":"clear()","return":"spreadsheet.Range","doc":"Clears the range of contents, formats, and data validation rules.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#clear()","argument":[]},{"name":"clear","signature":"clear(options)","return":"spreadsheet.Range","doc":"Clears the range of contents, format, data validation rules, and/or comments, as specified with the given advanced options.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#clear(Object)","argument":[{"name":"options","type":"Object","doc":"A JavaScript object that specifies advanced parameters, as listed below."}]},{"name":"clearContent","signature":"clearContent()","return":"spreadsheet.Range","doc":"Clears the content of the range, leaving the formatting intact.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#clearContent()","argument":[]},{"name":"clearDataValidations","signature":"clearDataValidations()","return":"spreadsheet.Range","doc":"Clears the data validation rules for the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#clearDataValidations()","argument":[]},{"name":"clearFormat","signature":"clearFormat()","return":"spreadsheet.Range","doc":"Clears formatting for this range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#clearFormat()","argument":[]},{"name":"clearNote","signature":"clearNote()","return":"spreadsheet.Range","doc":"Clears the note in the given cell or cells.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#clearNote()","argument":[]},{"name":"collapseGroups","signature":"collapseGroups()","return":"spreadsheet.Range","doc":"Collapses all groups that are wholly contained within the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#collapseGroups()","argument":[]},{"name":"copyFormatToRange","signature":"copyFormatToRange(gridId, column, columnEnd, row, rowEnd)","return":"void","doc":"Copy the formatting of the range to the given location.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#copyFormatToRange(Integer,Integer,Integer,Integer,Integer)","argument":[{"name":"gridId","type":"Integer","doc":"The unique ID of the sheet within the spreadsheet, irrespective of position."},{"name":"column","type":"Integer","doc":"The first column of the target range."},{"name":"columnEnd","type":"Integer","doc":"The end column of the target range."},{"name":"row","type":"Integer","doc":"The start row of the target range."},{"name":"rowEnd","type":"Integer","doc":"The end row of the target range."}]},{"name":"copyFormatToRange","signature":"copyFormatToRange(sheet, column, columnEnd, row, rowEnd)","return":"void","doc":"Copy the formatting of the range to the given location.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#copyFormatToRange(Sheet,Integer,Integer,Integer,Integer)","argument":[{"name":"sheet","type":"spreadsheet.Sheet","doc":"The target sheet."},{"name":"column","type":"Integer","doc":"The first column of the target range."},{"name":"columnEnd","type":"Integer","doc":"The end column of the target range."},{"name":"row","type":"Integer","doc":"The start row of the target range."},{"name":"rowEnd","type":"Integer","doc":"The end row of the target range."}]},{"name":"copyTo","signature":"copyTo(destination)","return":"void","doc":"Copies the data from a range of cells to another range of cells.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#copyTo(Range)","argument":[{"name":"destination","type":"spreadsheet.Range","doc":"A destination range to copy to; only the top-left cell position is relevant."}]},{"name":"copyTo","signature":"copyTo(destination, copyPasteType, transposed)","return":"void","doc":"Copies the data from a range of cells to another range of cells.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#copyTo(Range,CopyPasteType,Boolean)","argument":[{"name":"destination","type":"spreadsheet.Range","doc":"A destination range to copy to; only the top-left cell position is relevant."},{"name":"copyPasteType","type":"spreadsheet.CopyPasteType","doc":"A type that specifies how the range contents are pasted to the destination."},{"name":"transposed","type":"Boolean","doc":"whether the range should be pasted in its transposed orientation."}]},{"name":"copyTo","signature":"copyTo(destination, options)","return":"void","doc":"Copies the data from a range of cells to another range of cells.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#copyTo(Range,Object)","argument":[{"name":"destination","type":"spreadsheet.Range","doc":"A destination range to copy to; only the top-left cell position is relevant."},{"name":"options","type":"Object","doc":"A JavaScript object that specifies advanced parameters, as listed below."}]},{"name":"copyValuesToRange","signature":"copyValuesToRange(gridId, column, columnEnd, row, rowEnd)","return":"void","doc":"Copy the content of the range to the given location.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#copyValuesToRange(Integer,Integer,Integer,Integer,Integer)","argument":[{"name":"gridId","type":"Integer","doc":"The unique ID of the sheet within the spreadsheet, irrespective of position."},{"name":"column","type":"Integer","doc":"The first column of the target range."},{"name":"columnEnd","type":"Integer","doc":"The end column of the target range."},{"name":"row","type":"Integer","doc":"The start row of the target range."},{"name":"rowEnd","type":"Integer","doc":"The end row of the target range."}]},{"name":"copyValuesToRange","signature":"copyValuesToRange(sheet, column, columnEnd, row, rowEnd)","return":"void","doc":"Copy the content of the range to the given location.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#copyValuesToRange(Sheet,Integer,Integer,Integer,Integer)","argument":[{"name":"sheet","type":"spreadsheet.Sheet","doc":"The target sheet."},{"name":"column","type":"Integer","doc":"The first column of the target range."},{"name":"columnEnd","type":"Integer","doc":"The end column of the target range."},{"name":"row","type":"Integer","doc":"The start row of the target range."},{"name":"rowEnd","type":"Integer","doc":"The end row of the target range."}]},{"name":"createFilter","signature":"createFilter()","return":"spreadsheet.Filter","doc":"Creates a filter applied to the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#createFilter()","argument":[]},{"name":"createPivotTable","signature":"createPivotTable(sourceData)","return":"spreadsheet.PivotTable","doc":"Creates an empty pivot table from the specified sourceData anchored at the first cell in this range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#createPivotTable(Range)","argument":[{"name":"sourceData","type":"spreadsheet.Range","doc":""}]},{"name":"deleteCells","signature":"deleteCells(shiftDimension)","return":"void","doc":"Deletes this range of cells.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#deleteCells(Dimension)","argument":[{"name":"shiftDimension","type":"spreadsheet.Dimension","doc":"The dimension along which to shift existing data."}]},{"name":"expandGroups","signature":"expandGroups()","return":"spreadsheet.Range","doc":"Expands the collapsed groups whose range or control toggle intersects with this range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#expandGroups()","argument":[]},{"name":"getA1Notation","signature":"getA1Notation()","return":"String","doc":"Returns a string description of the range, in A1 notation.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getA1Notation()","argument":[]},{"name":"getBackground","signature":"getBackground()","return":"String","doc":"Returns the background color of the top-left cell in the range (i.e., '#ffffff').","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getBackground()","argument":[]},{"name":"getBackgrounds","signature":"getBackgrounds()","return":"String[][]","doc":"Returns the background colors of the cells in the range (i.e., '#ffffff').","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getBackgrounds()","argument":[]},{"name":"getBandings","signature":"getBandings()","return":"spreadsheet.Banding[]","doc":"Returns all the bandings that are applied to any cells in this range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getBandings()","argument":[]},{"name":"getCell","signature":"getCell(row, column)","return":"spreadsheet.Range","doc":"Returns a given cell within a range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getCell(Integer,Integer)","argument":[{"name":"row","type":"Integer","doc":"The row of the cell relative to the range."},{"name":"column","type":"Integer","doc":"The column of the cell relative to the range."}]},{"name":"getColumn","signature":"getColumn()","return":"Integer","doc":"Returns the starting column position for this range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getColumn()","argument":[]},{"name":"getDataSourceUrl","signature":"getDataSourceUrl()","return":"String","doc":"Returns a URL for the data in this range, which can be used to create charts and queries.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getDataSourceUrl()","argument":[]},{"name":"getDataTable","signature":"getDataTable()","return":"charts.DataTable","doc":"Return the data inside this object as a DataTable.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getDataTable()","argument":[]},{"name":"getDataTable","signature":"getDataTable(firstRowIsHeader)","return":"charts.DataTable","doc":"Return the data inside this range as a DataTable.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getDataTable(Boolean)","argument":[{"name":"firstRowIsHeader","type":"Boolean","doc":"Whether to treat the first row as a header."}]},{"name":"getDataValidation","signature":"getDataValidation()","return":"spreadsheet.DataValidation","doc":"Returns the data validation rule for the top-left cell in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getDataValidation()","argument":[]},{"name":"getDataValidations","signature":"getDataValidations()","return":"spreadsheet.DataValidation[][]","doc":"Returns the data validation rules for all cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getDataValidations()","argument":[]},{"name":"getDisplayValue","signature":"getDisplayValue()","return":"String","doc":"Returns the displayed value of the top-left cell in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getDisplayValue()","argument":[]},{"name":"getDisplayValues","signature":"getDisplayValues()","return":"String[][]","doc":"Returns the rectangular grid of values for this range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getDisplayValues()","argument":[]},{"name":"getFilter","signature":"getFilter()","return":"spreadsheet.Filter","doc":"Returns the filter in the sheet this range belongs to, or null if there is no filter on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getFilter()","argument":[]},{"name":"getFontColor","signature":"getFontColor()","return":"String","doc":"Returns the font color of the cell in the top-left corner of the range, in CSS notation (such as '#ffffff' or 'white').","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getFontColor()","argument":[]},{"name":"getFontColors","signature":"getFontColors()","return":"String[][]","doc":"Returns the font colors of the cells in the range in CSS notation (such as '#ffffff' or 'white').","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getFontColors()","argument":[]},{"name":"getFontFamilies","signature":"getFontFamilies()","return":"String[][]","doc":"Returns the font families of the cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getFontFamilies()","argument":[]},{"name":"getFontFamily","signature":"getFontFamily()","return":"String","doc":"Returns the font family of the cell in the top-left corner of the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getFontFamily()","argument":[]},{"name":"getFontLine","signature":"getFontLine()","return":"String","doc":"Gets the line style of the cell in the top-left corner of the range ('underline', 'line-through', or 'none').","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getFontLine()","argument":[]},{"name":"getFontLines","signature":"getFontLines()","return":"String[][]","doc":"Gets the line style of the cells in the range ('underline', 'line-through', or 'none').","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getFontLines()","argument":[]},{"name":"getFontSize","signature":"getFontSize()","return":"Integer","doc":"Returns the font size in point size of the cell in the top-left corner of the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getFontSize()","argument":[]},{"name":"getFontSizes","signature":"getFontSizes()","return":"Integer[][]","doc":"Returns the font sizes of the cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getFontSizes()","argument":[]},{"name":"getFontStyle","signature":"getFontStyle()","return":"String","doc":"Returns the font style ('italic' or 'normal') of the cell in the top-left corner of the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getFontStyle()","argument":[]},{"name":"getFontStyles","signature":"getFontStyles()","return":"String[][]","doc":"Returns the font styles of the cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getFontStyles()","argument":[]},{"name":"getFontWeight","signature":"getFontWeight()","return":"String","doc":"Returns the font weight (normal/bold) of the cell in the top-left corner of the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getFontWeight()","argument":[]},{"name":"getFontWeights","signature":"getFontWeights()","return":"String[][]","doc":"Returns the font weights of the cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getFontWeights()","argument":[]},{"name":"getFormula","signature":"getFormula()","return":"String","doc":"Returns the formula (A1 notation) for the top-left cell of the range, or an empty string if the cell is empty or doesn't contain a formula.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getFormula()","argument":[]},{"name":"getFormulaR1C1","signature":"getFormulaR1C1()","return":"String","doc":"Returns the formula (R1C1 notation) for a given cell, or null if none.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getFormulaR1C1()","argument":[]},{"name":"getFormulas","signature":"getFormulas()","return":"String[][]","doc":"Returns the formulas (A1 notation) for the cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getFormulas()","argument":[]},{"name":"getFormulasR1C1","signature":"getFormulasR1C1()","return":"String[][]","doc":"Returns the formulas (R1C1 notation) for the cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getFormulasR1C1()","argument":[]},{"name":"getGridId","signature":"getGridId()","return":"Integer","doc":"Returns the grid ID of the range's parent sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getGridId()","argument":[]},{"name":"getHeight","signature":"getHeight()","return":"Integer","doc":"Returns the height of the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getHeight()","argument":[]},{"name":"getHorizontalAlignment","signature":"getHorizontalAlignment()","return":"String","doc":"Returns the horizontal alignment of the text (left/center/right) of the cell in the top-left corner of the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getHorizontalAlignment()","argument":[]},{"name":"getHorizontalAlignments","signature":"getHorizontalAlignments()","return":"String[][]","doc":"Returns the horizontal alignments of the cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getHorizontalAlignments()","argument":[]},{"name":"getLastColumn","signature":"getLastColumn()","return":"Integer","doc":"Returns the end column position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getLastColumn()","argument":[]},{"name":"getLastRow","signature":"getLastRow()","return":"Integer","doc":"Returns the end row position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getLastRow()","argument":[]},{"name":"getMergedRanges","signature":"getMergedRanges()","return":"spreadsheet.Range[]","doc":"Returns an array of Range objects representing merged cells that either are fully within the current range, or contain at least one cell in the current range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getMergedRanges()","argument":[]},{"name":"getNextDataCell","signature":"getNextDataCell(direction)","return":"spreadsheet.Range","doc":"Starting at the cell in the first column and row of the range, returns the next cell in the given direction that is the edge of a contiguous range of cells with data in them or the cell at the edge of the spreadsheet in that direction.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getNextDataCell(Direction)","argument":[{"name":"direction","type":"spreadsheet.Direction","doc":"The direction in which to find the next data region edge cell."}]},{"name":"getNote","signature":"getNote()","return":"String","doc":"Returns the note associated with the given range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getNote()","argument":[]},{"name":"getNotes","signature":"getNotes()","return":"String[][]","doc":"Returns the notes associated with the cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getNotes()","argument":[]},{"name":"getNumColumns","signature":"getNumColumns()","return":"Integer","doc":"Returns the number of columns in this range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getNumColumns()","argument":[]},{"name":"getNumRows","signature":"getNumRows()","return":"Integer","doc":"Returns the number of rows in this range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getNumRows()","argument":[]},{"name":"getNumberFormat","signature":"getNumberFormat()","return":"String","doc":"Get the number or date formatting of the top-left cell of the given range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getNumberFormat()","argument":[]},{"name":"getNumberFormats","signature":"getNumberFormats()","return":"String[][]","doc":"Returns the number or date formats for the cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getNumberFormats()","argument":[]},{"name":"getRow","signature":"getRow()","return":"Integer","doc":"Returns the row position for this range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getRow()","argument":[]},{"name":"getRowIndex","signature":"getRowIndex()","return":"Integer","doc":"Returns the row position for this range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getRowIndex()","argument":[]},{"name":"getSheet","signature":"getSheet()","return":"spreadsheet.Sheet","doc":"Returns the sheet this range belongs to.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getSheet()","argument":[]},{"name":"getTextDirection","signature":"getTextDirection()","return":"spreadsheet.TextDirection","doc":"Returns the text direction for the top left cell of the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getTextDirection()","argument":[]},{"name":"getTextDirections","signature":"getTextDirections()","return":"spreadsheet.TextDirection[][]","doc":"Returns the text directions for the cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getTextDirections()","argument":[]},{"name":"getTextRotation","signature":"getTextRotation()","return":"spreadsheet.TextRotation","doc":"Returns the text rotation settings for the top left cell of the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getTextRotation()","argument":[]},{"name":"getTextRotations","signature":"getTextRotations()","return":"spreadsheet.TextRotation[][]","doc":"Returns the text rotation settings for the cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getTextRotations()","argument":[]},{"name":"getValue","signature":"getValue()","return":"Object","doc":"Returns the value of the top-left cell in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getValue()","argument":[]},{"name":"getValues","signature":"getValues()","return":"Object[][]","doc":"Returns the rectangular grid of values for this range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getValues()","argument":[]},{"name":"getVerticalAlignment","signature":"getVerticalAlignment()","return":"String","doc":"Returns the vertical alignment (top/middle/bottom) of the cell in the top-left corner of the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getVerticalAlignment()","argument":[]},{"name":"getVerticalAlignments","signature":"getVerticalAlignments()","return":"String[][]","doc":"Returns the vertical alignments of the cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getVerticalAlignments()","argument":[]},{"name":"getWidth","signature":"getWidth()","return":"Integer","doc":"Returns the width of the range in columns.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getWidth()","argument":[]},{"name":"getWrap","signature":"getWrap()","return":"Boolean","doc":"Returns the wrapping policy of the cell in the top-left corner of the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getWrap()","argument":[]},{"name":"getWrapStrategies","signature":"getWrapStrategies()","return":"spreadsheet.WrapStrategy[][]","doc":"Returns the text wrapping strategies for the cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getWrapStrategies()","argument":[]},{"name":"getWrapStrategy","signature":"getWrapStrategy()","return":"spreadsheet.WrapStrategy","doc":"Returns the text wrapping strategy for the top left cell of the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getWrapStrategy()","argument":[]},{"name":"getWraps","signature":"getWraps()","return":"Boolean[][]","doc":"Returns the wrapping policy of the cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#getWraps()","argument":[]},{"name":"insertCells","signature":"insertCells(shiftDimension)","return":"spreadsheet.Range","doc":"Inserts empty cells into this range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#insertCells(Dimension)","argument":[{"name":"shiftDimension","type":"spreadsheet.Dimension","doc":"The dimension along which to shift existing data."}]},{"name":"isBlank","signature":"isBlank()","return":"Boolean","doc":"Returns true if the range is totally blank.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#isBlank()","argument":[]},{"name":"isEndColumnBounded","signature":"isEndColumnBounded()","return":"Boolean","doc":"Determines whether the end of the range is bound to a particular column.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#isEndColumnBounded()","argument":[]},{"name":"isEndRowBounded","signature":"isEndRowBounded()","return":"Boolean","doc":"Determines whether the end of the range is bound to a particular row.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#isEndRowBounded()","argument":[]},{"name":"isPartOfMerge","signature":"isPartOfMerge()","return":"Boolean","doc":"Returns true if the cells in the current range overlap any merged cells.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#isPartOfMerge()","argument":[]},{"name":"isStartColumnBounded","signature":"isStartColumnBounded()","return":"Boolean","doc":"Determines whether the start of the range is bound to a particular column.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#isStartColumnBounded()","argument":[]},{"name":"isStartRowBounded","signature":"isStartRowBounded()","return":"Boolean","doc":"Determines whether the start of the range is bound to a particular row.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#isStartRowBounded()","argument":[]},{"name":"merge","signature":"merge()","return":"spreadsheet.Range","doc":"Merges the cells in the range together into a single block.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#merge()","argument":[]},{"name":"mergeAcross","signature":"mergeAcross()","return":"spreadsheet.Range","doc":"Merge the cells in the range across the columns of the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#mergeAcross()","argument":[]},{"name":"mergeVertically","signature":"mergeVertically()","return":"spreadsheet.Range","doc":"Merges the cells in the range together.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#mergeVertically()","argument":[]},{"name":"moveTo","signature":"moveTo(target)","return":"void","doc":"Cut and paste (both format and values) from this range to the target range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#moveTo(Range)","argument":[{"name":"target","type":"spreadsheet.Range","doc":"A target range to copy this range to; only the top-left cell position is relevant."}]},{"name":"offset","signature":"offset(rowOffset, columnOffset)","return":"spreadsheet.Range","doc":"Returns a new range that is offset from this range by the given number of rows and columns (which can be negative).","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#offset(Integer,Integer)","argument":[{"name":"rowOffset","type":"Integer","doc":"The number of rows down from the range's top-left cell; negative values represent rows up from the range's top-left cell."},{"name":"columnOffset","type":"Integer","doc":"The number of columns right from the range's top-left cell; negative values represent columns left from the range's top-left cell."}]},{"name":"offset","signature":"offset(rowOffset, columnOffset, numRows)","return":"spreadsheet.Range","doc":"Returns a new range that is relative to the current range, whose upper left point is offset from the current range by the given rows and columns, and with the given height in cells.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#offset(Integer,Integer,Integer)","argument":[{"name":"rowOffset","type":"Integer","doc":"The number of rows down from the range's top-left cell; negative values represent rows up from the range's top-left cell."},{"name":"columnOffset","type":"Integer","doc":"The number of columns right from the range's top-left cell; negative values represent columns left from the range's top-left cell."},{"name":"numRows","type":"Integer","doc":"The height in rows of the new range."}]},{"name":"offset","signature":"offset(rowOffset, columnOffset, numRows, numColumns)","return":"spreadsheet.Range","doc":"Returns a new range that is relative to the current range, whose upper left point is offset from the current range by the given rows and columns, and with the given height and width in cells.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#offset(Integer,Integer,Integer,Integer)","argument":[{"name":"rowOffset","type":"Integer","doc":"The number of rows down from the range's top-left cell; negative values represent rows up from the range's top-left cell."},{"name":"columnOffset","type":"Integer","doc":"The number of columns right from the range's top-left cell; negative values represent columns left from the range's top-left cell."},{"name":"numRows","type":"Integer","doc":"The height in rows of the new range."},{"name":"numColumns","type":"Integer","doc":"The width in columns of the new range."}]},{"name":"protect","signature":"protect()","return":"spreadsheet.Protection","doc":"Creates an object that can protect the range from being edited except by users who have permission.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#protect()","argument":[]},{"name":"randomize","signature":"randomize()","return":"spreadsheet.Range","doc":"Randomizes the order of the rows in the given range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#randomize()","argument":[]},{"name":"setBackground","signature":"setBackground(color)","return":"spreadsheet.Range","doc":"Sets the background color of all cells in the range in CSS notation (such as '#ffffff' or 'white').","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setBackground(String)","argument":[{"name":"color","type":"String","doc":"A color code in CSS notation (such as '#ffffff' or 'white'); a null value resets the color."}]},{"name":"setBackgroundRGB","signature":"setBackgroundRGB(red, green, blue)","return":"spreadsheet.Range","doc":"Sets the background to the given color using RGB values (integers between 0 and 255 inclusive).","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setBackgroundRGB(Integer,Integer,Integer)","argument":[{"name":"red","type":"Integer","doc":"The red value in RGB notation."},{"name":"green","type":"Integer","doc":"The green value in RGB notation."},{"name":"blue","type":"Integer","doc":"The blue value in RGB notation."}]},{"name":"setBackgrounds","signature":"setBackgrounds(color)","return":"spreadsheet.Range","doc":"Sets a rectangular grid of background colors (must match dimensions of this range).","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setBackgrounds(String)","argument":[{"name":"color","type":"String[][]","doc":"A two-dimensional array of colors in CSS notation (such as '#ffffff' or 'white'); null values reset the color."}]},{"name":"setBorder","signature":"setBorder(top, left, bottom, right, vertical, horizontal)","return":"spreadsheet.Range","doc":"Sets the border property.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setBorder(Boolean,Boolean,Boolean,Boolean,Boolean,Boolean)","argument":[{"name":"top","type":"Boolean","doc":"true for border, false for none, null for no change."},{"name":"left","type":"Boolean","doc":"true for border, false for none, null for no change."},{"name":"bottom","type":"Boolean","doc":"true for border, false for none, null for no change."},{"name":"right","type":"Boolean","doc":"true for border, false for none, null for no change."},{"name":"vertical","type":"Boolean","doc":"true for internal vertical borders, false for none, null for no change."},{"name":"horizontal","type":"Boolean","doc":"true for internal horizontal borders, false for none, null for no change."}]},{"name":"setBorder","signature":"setBorder(top, left, bottom, right, vertical, horizontal, color, style)","return":"spreadsheet.Range","doc":"Sets the border property with color and/or style.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setBorder(Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,String,BorderStyle)","argument":[{"name":"top","type":"Boolean","doc":"true for border, false for none, null for no change."},{"name":"left","type":"Boolean","doc":"true for border, false for none, null for no change."},{"name":"bottom","type":"Boolean","doc":"true for border, false for none, null for no change."},{"name":"right","type":"Boolean","doc":"true for border, false for none, null for no change."},{"name":"vertical","type":"Boolean","doc":"true for internal vertical borders, false for none, null for no change."},{"name":"horizontal","type":"Boolean","doc":"true for internal horizontal borders, false for none, null for no change."},{"name":"color","type":"String","doc":"A color in CSS notation (such as '#ffffff' or 'white'), null for default color (black)."},{"name":"style","type":"spreadsheet.BorderStyle","doc":"A style for the borders, null for default style (solid)."}]},{"name":"setDataValidation","signature":"setDataValidation(rule)","return":"spreadsheet.Range","doc":"Sets one data validation rule for all cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setDataValidation(DataValidation)","argument":[{"name":"rule","type":"spreadsheet.DataValidation","doc":"The data validation rule to set, or null to remove data validation."}]},{"name":"setDataValidations","signature":"setDataValidations(rules)","return":"spreadsheet.Range","doc":"Sets the data validation rules for all cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setDataValidations(DataValidation)","argument":[{"name":"rules","type":"spreadsheet.DataValidation[][]","doc":"A two-dimensional array of data validation rules to set; null values remove data validation."}]},{"name":"setFontColor","signature":"setFontColor(color)","return":"spreadsheet.Range","doc":"Sets the font color in CSS notation (such as '#ffffff' or 'white').","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setFontColor(String)","argument":[{"name":"color","type":"String","doc":"The font color in CSS notation (such as '#ffffff' or 'white'); a null value resets the color."}]},{"name":"setFontColors","signature":"setFontColors(colors)","return":"spreadsheet.Range","doc":"Sets a rectangular grid of font colors (must match dimensions of this range).","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setFontColors(Object)","argument":[{"name":"colors","type":"Object[][]","doc":"A two-dimensional array of colors in CSS notation (such as '#ffffff' or 'white'); null values reset the color."}]},{"name":"setFontFamilies","signature":"setFontFamilies(fontFamilies)","return":"spreadsheet.Range","doc":"Sets a rectangular grid of font families (must match dimensions of this range).","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setFontFamilies(Object)","argument":[{"name":"fontFamilies","type":"Object[][]","doc":"A two-dimensional array of font families; null values reset the font family."}]},{"name":"setFontFamily","signature":"setFontFamily(fontFamily)","return":"spreadsheet.Range","doc":"Sets the font family, such as \"Arial\" or \"Helvetica\".","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setFontFamily(String)","argument":[{"name":"fontFamily","type":"String","doc":"The font family to set; a null value resets the font family."}]},{"name":"setFontLine","signature":"setFontLine(fontLine)","return":"spreadsheet.Range","doc":"Sets the font line style of the given range ('underline', 'line-through', or 'none').","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setFontLine(String)","argument":[{"name":"fontLine","type":"String","doc":"The font line style, either 'underline', 'line-through', or 'none'; a null value resets the font line style."}]},{"name":"setFontLines","signature":"setFontLines(fontLines)","return":"spreadsheet.Range","doc":"Sets a rectangular grid of line styles (must match dimensions of this range).","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setFontLines(Object)","argument":[{"name":"fontLines","type":"Object[][]","doc":"A two-dimensional array of font line styles ('underline', 'line-through', or 'none'); null values reset the font line style."}]},{"name":"setFontSize","signature":"setFontSize(size)","return":"spreadsheet.Range","doc":"Sets the font size, with the size being the point size to use.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setFontSize(Integer)","argument":[{"name":"size","type":"Integer","doc":"A font size in point size."}]},{"name":"setFontSizes","signature":"setFontSizes(sizes)","return":"spreadsheet.Range","doc":"Sets a rectangular grid of font sizes (must match dimensions of this range).","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setFontSizes(Object)","argument":[{"name":"sizes","type":"Object[][]","doc":"A two-dimensional array of sizes."}]},{"name":"setFontStyle","signature":"setFontStyle(fontStyle)","return":"spreadsheet.Range","doc":"Set the font style for the given range ('italic' or 'normal').","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setFontStyle(String)","argument":[{"name":"fontStyle","type":"String","doc":"The font style, either 'italic' or 'normal'; a null value resets the font style."}]},{"name":"setFontStyles","signature":"setFontStyles(fontStyles)","return":"spreadsheet.Range","doc":"Sets a rectangular grid of font styles (must match dimensions of this range).","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setFontStyles(Object)","argument":[{"name":"fontStyles","type":"Object[][]","doc":"A two-dimensional array of font styles, either 'italic' or 'normal'; null values reset the font style."}]},{"name":"setFontWeight","signature":"setFontWeight(fontWeight)","return":"spreadsheet.Range","doc":"Set the font weight for the given range (normal/bold).","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setFontWeight(String)","argument":[{"name":"fontWeight","type":"String","doc":"The font weight, either 'bold' or 'normal'; a null value resets the font weight."}]},{"name":"setFontWeights","signature":"setFontWeights(fontWeights)","return":"spreadsheet.Range","doc":"Sets a rectangular grid of font weights (must match dimensions of this range).","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setFontWeights(Object)","argument":[{"name":"fontWeights","type":"Object[][]","doc":"A two-dimensional array of font weights, either 'bold' or 'normal'; null values reset the font weight."}]},{"name":"setFormula","signature":"setFormula(formula)","return":"spreadsheet.Range","doc":"Updates the formula for this range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setFormula(String)","argument":[{"name":"formula","type":"String","doc":"A string representing the formula to set for the cell."}]},{"name":"setFormulaR1C1","signature":"setFormulaR1C1(formula)","return":"spreadsheet.Range","doc":"Updates the formula for this range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setFormulaR1C1(String)","argument":[{"name":"formula","type":"String","doc":"A string formula."}]},{"name":"setFormulas","signature":"setFormulas(formulas)","return":"spreadsheet.Range","doc":"Sets a rectangular grid of formulas (must match dimensions of this range).","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setFormulas(String)","argument":[{"name":"formulas","type":"String[][]","doc":"A two-dimensional string array of formulas."}]},{"name":"setFormulasR1C1","signature":"setFormulasR1C1(formulas)","return":"spreadsheet.Range","doc":"Sets a rectangular grid of formulas (must match dimensions of this range).","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setFormulasR1C1(String)","argument":[{"name":"formulas","type":"String[][]","doc":"A two-dimensional array of formulas in R1C1 format."}]},{"name":"setHorizontalAlignment","signature":"setHorizontalAlignment(alignment)","return":"spreadsheet.Range","doc":"Set the horizontal (left to right) alignment for the given range (left/center/right).","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setHorizontalAlignment(String)","argument":[{"name":"alignment","type":"String","doc":"The alignment, either 'left', 'center' or 'normal'; a null value resets the alignment."}]},{"name":"setHorizontalAlignments","signature":"setHorizontalAlignments(alignments)","return":"spreadsheet.Range","doc":"Sets a rectangular grid of horizontal alignments.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setHorizontalAlignments(Object)","argument":[{"name":"alignments","type":"Object[][]","doc":"A two-dimensional array of alignments, either 'left', 'center' or 'normal'; a null value resets the alignment."}]},{"name":"setNote","signature":"setNote(note)","return":"spreadsheet.Range","doc":"Sets the note to the given value.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setNote(String)","argument":[{"name":"note","type":"String","doc":"The note value to set for the range; a null value removes the note."}]},{"name":"setNotes","signature":"setNotes(notes)","return":"spreadsheet.Range","doc":"Sets a rectangular grid of notes (must match dimensions of this range).","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setNotes(Object)","argument":[{"name":"notes","type":"Object[][]","doc":"A two-dimensional array of notes; null values remove the note."}]},{"name":"setNumberFormat","signature":"setNumberFormat(numberFormat)","return":"spreadsheet.Range","doc":"Sets the number or date format to the given formatting string.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setNumberFormat(String)","argument":[{"name":"numberFormat","type":"String","doc":"A number format string."}]},{"name":"setNumberFormats","signature":"setNumberFormats(numberFormats)","return":"spreadsheet.Range","doc":"Sets a rectangular grid of number or date formats (must match dimensions of this range).","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setNumberFormats(Object)","argument":[{"name":"numberFormats","type":"Object[][]","doc":"A two-dimensional array of number formats."}]},{"name":"setShowHyperlink","signature":"setShowHyperlink(showHyperlink)","return":"spreadsheet.Range","doc":"Sets whether or not the range should show hyperlinks.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setShowHyperlink(Boolean)","argument":[{"name":"showHyperlink","type":"Boolean","doc":"Whether or not to show the hyperlink."}]},{"name":"setTextDirection","signature":"setTextDirection(direction)","return":"spreadsheet.Range","doc":"Sets the text direction for the cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setTextDirection(TextDirection)","argument":[{"name":"direction","type":"spreadsheet.TextDirection","doc":"The desired text direction; if null the direction is inferred before setting."}]},{"name":"setTextDirections","signature":"setTextDirections(directions)","return":"spreadsheet.Range","doc":"Sets a rectangular grid of text directions.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setTextDirections(TextDirection)","argument":[{"name":"directions","type":"spreadsheet.TextDirection[][]","doc":"The desired text directions; if a specified direction is null it is inferred before setting."}]},{"name":"setTextRotation","signature":"setTextRotation(degrees)","return":"spreadsheet.Range","doc":"Sets the text rotation settings for the cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setTextRotation(Integer)","argument":[{"name":"degrees","type":"Integer","doc":"The desired angle between the standard orientation and the desired orientation. For left to right text, positive angles are in the counterclockwise direction."}]},{"name":"setTextRotation","signature":"setTextRotation(rotation)","return":"spreadsheet.Range","doc":"Sets the text rotation settings for the cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setTextRotation(TextRotation)","argument":[{"name":"rotation","type":"spreadsheet.TextRotation","doc":"The desired text rotation settings."}]},{"name":"setTextRotations","signature":"setTextRotations(rotations)","return":"spreadsheet.Range","doc":"Sets a rectangular grid of text rotations.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setTextRotations(TextRotation)","argument":[{"name":"rotations","type":"spreadsheet.TextRotation[][]","doc":"The desired text rotation settings."}]},{"name":"setValue","signature":"setValue(value)","return":"spreadsheet.Range","doc":"Sets the value of the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setValue(Object)","argument":[{"name":"value","type":"Object","doc":"The value for the range."}]},{"name":"setValues","signature":"setValues(values)","return":"spreadsheet.Range","doc":"Sets a rectangular grid of values (must match dimensions of this range).","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setValues(Object)","argument":[{"name":"values","type":"Object[][]","doc":"A two-dimensional array of values."}]},{"name":"setVerticalAlignment","signature":"setVerticalAlignment(alignment)","return":"spreadsheet.Range","doc":"Set the vertical (top to bottom) alignment for the given range (top/middle/bottom).","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setVerticalAlignment(String)","argument":[{"name":"alignment","type":"String","doc":"The alignment, either 'top', 'middle' or 'bottom'; a null value resets the alignment."}]},{"name":"setVerticalAlignments","signature":"setVerticalAlignments(alignments)","return":"spreadsheet.Range","doc":"Sets a rectangular grid of vertical alignments (must match dimensions of this range).","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setVerticalAlignments(Object)","argument":[{"name":"alignments","type":"Object[][]","doc":"A two-dimensional array of alignments, either 'top', 'middle' or 'bottom'; a null value resets the alignment."}]},{"name":"setVerticalText","signature":"setVerticalText(isVertical)","return":"spreadsheet.Range","doc":"Sets whether or not to stack the text for the cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setVerticalText(Boolean)","argument":[{"name":"isVertical","type":"Boolean","doc":"Whether or not to stack the text."}]},{"name":"setWrap","signature":"setWrap(isWrapEnabled)","return":"spreadsheet.Range","doc":"Set the cell wrap of the given range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setWrap(Boolean)","argument":[{"name":"isWrapEnabled","type":"Boolean","doc":"Whether to wrap text or not."}]},{"name":"setWrapStrategies","signature":"setWrapStrategies(strategies)","return":"spreadsheet.Range","doc":"Sets a rectangular grid of wrap strategies.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setWrapStrategies(WrapStrategy)","argument":[{"name":"strategies","type":"spreadsheet.WrapStrategy[][]","doc":"The desired wrapping strategies."}]},{"name":"setWrapStrategy","signature":"setWrapStrategy(strategy)","return":"spreadsheet.Range","doc":"Sets the text wrapping strategy for the cells in the range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setWrapStrategy(WrapStrategy)","argument":[{"name":"strategy","type":"spreadsheet.WrapStrategy","doc":"The desired wrapping strategy."}]},{"name":"setWraps","signature":"setWraps(isWrapEnabled)","return":"spreadsheet.Range","doc":"Sets a rectangular grid of word wrap policies (must match dimensions of this range).","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#setWraps(Object)","argument":[{"name":"isWrapEnabled","type":"Object[][]","doc":"A two-dimensional array of wrap variables that determine whether to wrap text in a cell or not."}]},{"name":"shiftColumnGroupDepth","signature":"shiftColumnGroupDepth(delta)","return":"spreadsheet.Range","doc":"Changes the column grouping depth of the range by the specified amount.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#shiftColumnGroupDepth(Integer)","argument":[{"name":"delta","type":"Integer","doc":"The amount by which to change the column group depth of this range."}]},{"name":"shiftRowGroupDepth","signature":"shiftRowGroupDepth(delta)","return":"spreadsheet.Range","doc":"Changes the row grouping depth of the range by the specified amount.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#shiftRowGroupDepth(Integer)","argument":[{"name":"delta","type":"Integer","doc":"The amount by which to change the row group depth of this range."}]},{"name":"sort","signature":"sort(sortSpecObj)","return":"spreadsheet.Range","doc":"Sorts the cells in the given range, by column and order specified.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#sort(Object)","argument":[{"name":"sortSpecObj","type":"Object","doc":"The column(s) to sort by."}]},{"name":"splitTextToColumns","signature":"splitTextToColumns()","return":"void","doc":"Splits a column of text into multiple columns based on an auto-detected delimiter.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#splitTextToColumns()","argument":[]},{"name":"splitTextToColumns","signature":"splitTextToColumns(delimiter)","return":"void","doc":"Splits a column of text into multiple columns using the specified string as a custom delimiter.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#splitTextToColumns(String)"},{"name":"splitTextToColumns","signature":"splitTextToColumns(delimiter)","return":"void","doc":"Splits a column of text into multiple columns based on the specified delimiter.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range/#splitTextToColumns(TextToColumnsDelimiter)","argument":[{"name":"delimiter","type":"spreadsheet.TextToColumnsDelimiter","doc":"The preset delimiter to split on."}]}]},"spreadsheet.RangeList":{"name":"RangeList","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list","doc":"A collection of one or more Range instances in the same sheet. You can use this class to apply operations on collections of non-adjacent ranges or cells.","property":[],"method":[{"name":"activate","signature":"activate()","return":"spreadsheet.RangeList","doc":"Selects the list of Range instances.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#activate()","argument":[]},{"name":"breakApart","signature":"breakApart()","return":"spreadsheet.RangeList","doc":"Break all horizontally- or vertically-merged cells contained within the range list into individual cells again.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#breakApart()","argument":[]},{"name":"clear","signature":"clear()","return":"spreadsheet.RangeList","doc":"Clears the range of contents, formats, and data validation rules for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#clear()","argument":[]},{"name":"clear","signature":"clear(options)","return":"spreadsheet.RangeList","doc":"Clears the range of contents, format, data validation rules, and comments, as specified with the given options.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#clear(Object)","argument":[{"name":"options","type":"Object","doc":"A JavaScript object that specifies advanced parameters, as listed below."}]},{"name":"clearContent","signature":"clearContent()","return":"spreadsheet.RangeList","doc":"Clears the content of each Range in the range list, leaving the formatting intact.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#clearContent()","argument":[]},{"name":"clearDataValidations","signature":"clearDataValidations()","return":"spreadsheet.RangeList","doc":"Clears the data validation rules for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#clearDataValidations()","argument":[]},{"name":"clearFormat","signature":"clearFormat()","return":"spreadsheet.RangeList","doc":"Clears text formatting for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#clearFormat()","argument":[]},{"name":"clearNote","signature":"clearNote()","return":"spreadsheet.RangeList","doc":"Clears the note for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#clearNote()","argument":[]},{"name":"getRanges","signature":"getRanges()","return":"spreadsheet.Range[]","doc":"Returns a list of one or more Range instances in the same sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#getRanges()","argument":[]},{"name":"setBackground","signature":"setBackground(color)","return":"spreadsheet.RangeList","doc":"Sets the background color for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setBackground(String)","argument":[{"name":"color","type":"String","doc":"The background color code in CSS notation such as '#ffffff' or 'white'; a null value resets the color."}]},{"name":"setBackgroundRGB","signature":"setBackgroundRGB(red, green, blue)","return":"spreadsheet.RangeList","doc":"Sets the background to the given RGB color.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setBackgroundRGB(Integer,Integer,Integer)","argument":[{"name":"red","type":"Integer","doc":"The red value in RGB notation."},{"name":"green","type":"Integer","doc":"The green value in RGB notation."},{"name":"blue","type":"Integer","doc":"The blue value in RGB notation."}]},{"name":"setBorder","signature":"setBorder(top, left, bottom, right, vertical, horizontal)","return":"spreadsheet.RangeList","doc":"Sets the border property for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setBorder(Boolean,Boolean,Boolean,Boolean,Boolean,Boolean)","argument":[{"name":"top","type":"Boolean","doc":"true for border, false for none, null for no change."},{"name":"left","type":"Boolean","doc":"true for border, false for none, null for no change."},{"name":"bottom","type":"Boolean","doc":"true for border, false for none, null for no change."},{"name":"right","type":"Boolean","doc":"true for border, false for none, null for no change."},{"name":"vertical","type":"Boolean","doc":"true for internal vertical borders, false for none, null for no change."},{"name":"horizontal","type":"Boolean","doc":"true for internal horizontal borders, false for none, null for no change."}]},{"name":"setBorder","signature":"setBorder(top, left, bottom, right, vertical, horizontal, color, style)","return":"spreadsheet.RangeList","doc":"Sets the border property with color and/or style for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setBorder(Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,String,BorderStyle)","argument":[{"name":"top","type":"Boolean","doc":"true for border, false for none, null for no change."},{"name":"left","type":"Boolean","doc":"true for border, false for none, null for no change."},{"name":"bottom","type":"Boolean","doc":"true for border, false for none, null for no change."},{"name":"right","type":"Boolean","doc":"true for border, false for none, null for no change."},{"name":"vertical","type":"Boolean","doc":"true for internal vertical borders, false for none, null for no change."},{"name":"horizontal","type":"Boolean","doc":"true for internal horizontal borders, false for none, null for no change."},{"name":"color","type":"String","doc":"The border color in CSS notation like '#ffffff' or 'white', null for default color (black)."},{"name":"style","type":"spreadsheet.BorderStyle","doc":"The style for the borders, null for default style (solid)."}]},{"name":"setFontColor","signature":"setFontColor(color)","return":"spreadsheet.RangeList","doc":"Sets the font color for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setFontColor(String)","argument":[{"name":"color","type":"String","doc":"The font color in CSS notation such as '#ffffff' or 'white'; a null value resets the color."}]},{"name":"setFontFamily","signature":"setFontFamily(fontFamily)","return":"spreadsheet.RangeList","doc":"Sets the font family for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setFontFamily(String)","argument":[{"name":"fontFamily","type":"String","doc":"The font family to set; a null value resets the font family."}]},{"name":"setFontLine","signature":"setFontLine(fontLine)","return":"spreadsheet.RangeList","doc":"Sets the font line style for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setFontLine(String)","argument":[{"name":"fontLine","type":"String","doc":"The font line style, either 'underline', 'line-through', or 'none'; a null value resets the font line style."}]},{"name":"setFontSize","signature":"setFontSize(size)","return":"spreadsheet.RangeList","doc":"Sets the font size (in points) for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setFontSize(Integer)","argument":[{"name":"size","type":"Integer","doc":"A font point size."}]},{"name":"setFontStyle","signature":"setFontStyle(fontStyle)","return":"spreadsheet.RangeList","doc":"Set the font style for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setFontStyle(String)","argument":[{"name":"fontStyle","type":"String","doc":"The font style, either 'italic' or 'normal'; a null value resets the font style."}]},{"name":"setFontWeight","signature":"setFontWeight(fontWeight)","return":"spreadsheet.RangeList","doc":"Set the font weight for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setFontWeight(String)","argument":[{"name":"fontWeight","type":"String","doc":"The font weight, either 'bold' or 'normal'; a null value resets the font weight."}]},{"name":"setFormula","signature":"setFormula(formula)","return":"spreadsheet.RangeList","doc":"Updates the formula for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setFormula(String)","argument":[{"name":"formula","type":"String","doc":"A string representing the formula to set."}]},{"name":"setFormulaR1C1","signature":"setFormulaR1C1(formula)","return":"spreadsheet.RangeList","doc":"Updates the formula for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setFormulaR1C1(String)","argument":[{"name":"formula","type":"String","doc":"A string formula."}]},{"name":"setHorizontalAlignment","signature":"setHorizontalAlignment(alignment)","return":"spreadsheet.RangeList","doc":"Set the horizontal alignment for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setHorizontalAlignment(String)","argument":[{"name":"alignment","type":"String","doc":"The alignment, either 'left', 'center' or 'normal'; a null value resets the alignment."}]},{"name":"setNote","signature":"setNote(note)","return":"spreadsheet.RangeList","doc":"Sets the note text for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setNote(String)","argument":[{"name":"note","type":"String","doc":"The note text to set; a null value removes the note."}]},{"name":"setNumberFormat","signature":"setNumberFormat(numberFormat)","return":"spreadsheet.RangeList","doc":"Sets the number or date format for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setNumberFormat(String)","argument":[{"name":"numberFormat","type":"String","doc":"A number format string."}]},{"name":"setShowHyperlink","signature":"setShowHyperlink(showHyperlink)","return":"spreadsheet.RangeList","doc":"Sets whether or not each Range in the range list should show hyperlinks.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setShowHyperlink(Boolean)","argument":[{"name":"showHyperlink","type":"Boolean","doc":"Whether or not to show the hyperlink."}]},{"name":"setTextDirection","signature":"setTextDirection(direction)","return":"spreadsheet.RangeList","doc":"Sets the text direction for the cells in each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setTextDirection(TextDirection)","argument":[{"name":"direction","type":"spreadsheet.TextDirection","doc":"The desired text direction; if null the direction is inferred before setting."}]},{"name":"setTextRotation","signature":"setTextRotation(degrees)","return":"spreadsheet.RangeList","doc":"Sets the text rotation settings for the cells in each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setTextRotation(Integer)","argument":[{"name":"degrees","type":"Integer","doc":"The desired angle between the standard orientation and the desired orientation. For left to right text, positive angles are in the counterclockwise direction."}]},{"name":"setValue","signature":"setValue(value)","return":"spreadsheet.RangeList","doc":"Sets the value for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setValue(Object)","argument":[{"name":"value","type":"Object","doc":"The value for the range."}]},{"name":"setVerticalAlignment","signature":"setVerticalAlignment(alignment)","return":"spreadsheet.RangeList","doc":"Set the vertical alignment for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setVerticalAlignment(String)","argument":[{"name":"alignment","type":"String","doc":"The alignment, either 'top', 'middle' or 'bottom'; a null value resets the alignment."}]},{"name":"setVerticalText","signature":"setVerticalText(isVertical)","return":"spreadsheet.RangeList","doc":"Sets whether or not to stack the text for the cells for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setVerticalText(Boolean)","argument":[{"name":"isVertical","type":"Boolean","doc":"Whether or not to stack the text."}]},{"name":"setWrap","signature":"setWrap(isWrapEnabled)","return":"spreadsheet.RangeList","doc":"Set text wrapping for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setWrap(Boolean)","argument":[{"name":"isWrapEnabled","type":"Boolean","doc":"Whether to wrap text or not."}]},{"name":"setWrapStrategy","signature":"setWrapStrategy(strategy)","return":"spreadsheet.RangeList","doc":"Sets the text wrapping strategy for each Range in the range list.","url":"https://developers.google.com/apps-script/reference/spreadsheet/range-list/#setWrapStrategy(WrapStrategy)","argument":[{"name":"strategy","type":"spreadsheet.WrapStrategy","doc":"The desired wrapping strategy."}]}]},"spreadsheet.Selection":{"name":"Selection","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/selection","doc":"Access the current active selection in the active sheet. A selection is the set of cells the user has highlighted in the sheet, which can be non-adjacent ranges. One cell in the selection is the current cell, where the user's current focus is. The current cell is highlighted with a darker border in the Google Sheets UI.","property":[],"method":[{"name":"getActiveRange","signature":"getActiveRange()","return":"spreadsheet.Range","doc":"Returns the selected range in the active sheet, or null if there is no active range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/selection/#getActiveRange()","argument":[]},{"name":"getActiveRangeList","signature":"getActiveRangeList()","return":"spreadsheet.RangeList","doc":"Returns the list of active ranges in the active sheet or null if there are no active ranges.","url":"https://developers.google.com/apps-script/reference/spreadsheet/selection/#getActiveRangeList()","argument":[]},{"name":"getActiveSheet","signature":"getActiveSheet()","return":"spreadsheet.Sheet","doc":"Returns the active sheet in the spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/selection/#getActiveSheet()","argument":[]},{"name":"getCurrentCell","signature":"getCurrentCell()","return":"spreadsheet.Range","doc":"Returns the current (highlighted) cell that is selected in one of the active ranges or null if there is no current cell.","url":"https://developers.google.com/apps-script/reference/spreadsheet/selection/#getCurrentCell()","argument":[]},{"name":"getNextDataRange","signature":"getNextDataRange(direction)","return":"spreadsheet.Range","doc":"Starting from the current cell and active range and moving in the given direction, returns an adjusted range where the appropriate edge of the range has been shifted to cover the next data cell while still covering the current cell.","url":"https://developers.google.com/apps-script/reference/spreadsheet/selection/#getNextDataRange(Direction)","argument":[{"name":"direction","type":"spreadsheet.Direction","doc":"The direction in which to find the next data region edge cell."}]}]},"spreadsheet.Sheet":{"name":"Sheet","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet","doc":"Access and modify spreadsheet sheets. Common operations are renaming a sheet and accessing range objects from the sheet.","property":[],"method":[{"name":"activate","signature":"activate()","return":"spreadsheet.Sheet","doc":"Activates this sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#activate()","argument":[]},{"name":"appendRow","signature":"appendRow(rowContents)","return":"spreadsheet.Sheet","doc":"Appends a row to the spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#appendRow(Object)","argument":[{"name":"rowContents","type":"Object[]","doc":"An array of values to insert after the last row in the sheet."}]},{"name":"autoResizeColumn","signature":"autoResizeColumn(columnPosition)","return":"spreadsheet.Sheet","doc":"Sets the width of the given column to fit its contents.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#autoResizeColumn(Integer)","argument":[{"name":"columnPosition","type":"Integer","doc":"The position of the given column to resize."}]},{"name":"autoResizeColumns","signature":"autoResizeColumns(startColumn, numColumns)","return":"spreadsheet.Sheet","doc":"Sets the width of all columns starting at the given column position to fit their contents.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#autoResizeColumns(Integer,Integer)","argument":[{"name":"startColumn","type":"Integer","doc":"The starting column to auto-resize."},{"name":"numColumns","type":"Integer","doc":"The number of columns to auto-resize."}]},{"name":"autoResizeRows","signature":"autoResizeRows(startRow, numRows)","return":"spreadsheet.Sheet","doc":"Sets the height of all rows starting at the given row position to fit their contents.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#autoResizeRows(Integer,Integer)","argument":[{"name":"startRow","type":"Integer","doc":"The starting row to auto-resize."},{"name":"numRows","type":"Integer","doc":"The number of rows to auto-resize."}]},{"name":"clear","signature":"clear()","return":"spreadsheet.Sheet","doc":"Clears the sheet of content and formatting information.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#clear()","argument":[]},{"name":"clear","signature":"clear(options)","return":"spreadsheet.Sheet","doc":"Clears the sheet of contents and/or format, as specified with the given advanced options.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#clear(Object)","argument":[{"name":"options","type":"Object","doc":"A JavaScript map containing advanced options, listed below."}]},{"name":"clearConditionalFormatRules","signature":"clearConditionalFormatRules()","return":"void","doc":"Removes all conditional format rules from the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#clearConditionalFormatRules()","argument":[]},{"name":"clearContents","signature":"clearContents()","return":"spreadsheet.Sheet","doc":"Clears the sheet of contents, while preserving formatting information.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#clearContents()","argument":[]},{"name":"clearFormats","signature":"clearFormats()","return":"spreadsheet.Sheet","doc":"Clears the sheet of formatting, while preserving contents.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#clearFormats()","argument":[]},{"name":"clearNotes","signature":"clearNotes()","return":"spreadsheet.Sheet","doc":"Clears the sheet of all notes.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#clearNotes()","argument":[]},{"name":"collapseAllColumnGroups","signature":"collapseAllColumnGroups()","return":"spreadsheet.Sheet","doc":"Collapses all column groups on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#collapseAllColumnGroups()","argument":[]},{"name":"collapseAllRowGroups","signature":"collapseAllRowGroups()","return":"spreadsheet.Sheet","doc":"Collapses all row groups on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#collapseAllRowGroups()","argument":[]},{"name":"copyTo","signature":"copyTo(spreadsheet)","return":"spreadsheet.Sheet","doc":"Copies the sheet to a given spreadsheet, which can be the same spreadsheet as the source.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#copyTo(Spreadsheet)","argument":[{"name":"spreadsheet","type":"spreadsheet.Spreadsheet","doc":"The spreadsheet to copy this sheet to, which can be the same spreadsheet as the source."}]},{"name":"deleteColumn","signature":"deleteColumn(columnPosition)","return":"spreadsheet.Sheet","doc":"Deletes the column at the given column position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#deleteColumn(Integer)","argument":[{"name":"columnPosition","type":"Integer","doc":"The position of the column, starting at 1 for the first column."}]},{"name":"deleteColumns","signature":"deleteColumns(columnPosition, howMany)","return":"void","doc":"Deletes a number of columns starting at the given column position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#deleteColumns(Integer,Integer)","argument":[{"name":"columnPosition","type":"Integer","doc":"The position of the first column to delete."},{"name":"howMany","type":"Integer","doc":"The number of columns to delete."}]},{"name":"deleteRow","signature":"deleteRow(rowPosition)","return":"spreadsheet.Sheet","doc":"Deletes the row at the given row position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#deleteRow(Integer)","argument":[{"name":"rowPosition","type":"Integer","doc":"The position of the row, starting at 1 for the first row."}]},{"name":"deleteRows","signature":"deleteRows(rowPosition, howMany)","return":"void","doc":"Deletes a number of rows starting at the given row position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#deleteRows(Integer,Integer)","argument":[{"name":"rowPosition","type":"Integer","doc":"The position of the first row to delete."},{"name":"howMany","type":"Integer","doc":"The number of rows to delete."}]},{"name":"expandAllColumnGroups","signature":"expandAllColumnGroups()","return":"spreadsheet.Sheet","doc":"Expands all column groups on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#expandAllColumnGroups()","argument":[]},{"name":"expandAllRowGroups","signature":"expandAllRowGroups()","return":"spreadsheet.Sheet","doc":"Expands all row groups on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#expandAllRowGroups()","argument":[]},{"name":"expandColumnGroupsUpToDepth","signature":"expandColumnGroupsUpToDepth(groupDepth)","return":"spreadsheet.Sheet","doc":"Expands all column groups up to the given depth, and collapses all others.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#expandColumnGroupsUpToDepth(Integer)","argument":[{"name":"groupDepth","type":"Integer","doc":"The group depth up to which to expand the column groups."}]},{"name":"expandRowGroupsUpToDepth","signature":"expandRowGroupsUpToDepth(groupDepth)","return":"spreadsheet.Sheet","doc":"Expands all row groups up to the given depth, and collapses all others.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#expandRowGroupsUpToDepth(Integer)","argument":[{"name":"groupDepth","type":"Integer","doc":"The group depth up to which to expand the row groups."}]},{"name":"getActiveCell","signature":"getActiveCell()","return":"spreadsheet.Range","doc":"Returns the active cell in this sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getActiveCell()","argument":[]},{"name":"getActiveRange","signature":"getActiveRange()","return":"spreadsheet.Range","doc":"Returns the selected range in the active sheet, or null if there is no active range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getActiveRange()","argument":[]},{"name":"getActiveRangeList","signature":"getActiveRangeList()","return":"spreadsheet.RangeList","doc":"Returns the list of active ranges in the active sheet or null if there are no active ranges.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getActiveRangeList()","argument":[]},{"name":"getBandings","signature":"getBandings()","return":"spreadsheet.Banding[]","doc":"Returns all the bandings in this sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getBandings()","argument":[]},{"name":"getCharts","signature":"getCharts()","return":"spreadsheet.EmbeddedChart[]","doc":"Returns an array of charts on this sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getCharts()","argument":[]},{"name":"getColumnGroup","signature":"getColumnGroup(columnIndex, groupDepth)","return":"spreadsheet.Group","doc":"Returns the column group at the given index and group depth.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getColumnGroup(Integer,Integer)","argument":[{"name":"columnIndex","type":"Integer","doc":"The column index of the group control toggle or an index within the group."},{"name":"groupDepth","type":"Integer","doc":"The depth of the group."}]},{"name":"getColumnGroupControlPosition","signature":"getColumnGroupControlPosition()","return":"spreadsheet.GroupControlTogglePosition","doc":"Returns the GroupControlTogglePosition for all column groups on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getColumnGroupControlPosition()","argument":[]},{"name":"getColumnGroupDepth","signature":"getColumnGroupDepth(columnIndex)","return":"Integer","doc":"Returns the group depth of the column at the given index.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getColumnGroupDepth(Integer)","argument":[{"name":"columnIndex","type":"Integer","doc":"The index of the column."}]},{"name":"getColumnWidth","signature":"getColumnWidth(columnPosition)","return":"Integer","doc":"Gets the width in pixels of the given column.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getColumnWidth(Integer)","argument":[{"name":"columnPosition","type":"Integer","doc":"The position of the column to examine."}]},{"name":"getConditionalFormatRules","signature":"getConditionalFormatRules()","return":"spreadsheet.ConditionalFormatRule[]","doc":"Get all conditional format rules in this sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getConditionalFormatRules()","argument":[]},{"name":"getCurrentCell","signature":"getCurrentCell()","return":"spreadsheet.Range","doc":"Returns the current cell in the active sheet or null if there is no current cell.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getCurrentCell()","argument":[]},{"name":"getDataRange","signature":"getDataRange()","return":"spreadsheet.Range","doc":"Returns a Range corresponding to the dimensions in which data is present.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getDataRange()","argument":[]},{"name":"getFilter","signature":"getFilter()","return":"spreadsheet.Filter","doc":"Returns the filter in this sheet, or null if there is no filter.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getFilter()","argument":[]},{"name":"getFormUrl","signature":"getFormUrl()","return":"String","doc":"Returns the URL for the form that sends its responses to this sheet, or null if this sheet has no associated form.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getFormUrl()","argument":[]},{"name":"getFrozenColumns","signature":"getFrozenColumns()","return":"Integer","doc":"Returns the number of frozen columns.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getFrozenColumns()","argument":[]},{"name":"getFrozenRows","signature":"getFrozenRows()","return":"Integer","doc":"Returns the number of frozen rows.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getFrozenRows()","argument":[]},{"name":"getIndex","signature":"getIndex()","return":"Integer","doc":"Gets the position of the sheet in its parent spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getIndex()","argument":[]},{"name":"getLastColumn","signature":"getLastColumn()","return":"Integer","doc":"Returns the position of the last column that has content.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getLastColumn()","argument":[]},{"name":"getLastRow","signature":"getLastRow()","return":"Integer","doc":"Returns the position of the last row that has content.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getLastRow()","argument":[]},{"name":"getMaxColumns","signature":"getMaxColumns()","return":"Integer","doc":"Returns the current number of columns in the sheet, regardless of content.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getMaxColumns()","argument":[]},{"name":"getMaxRows","signature":"getMaxRows()","return":"Integer","doc":"Returns the current number of rows in the sheet, regardless of content.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getMaxRows()","argument":[]},{"name":"getName","signature":"getName()","return":"String","doc":"Returns the name of the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getName()","argument":[]},{"name":"getNamedRanges","signature":"getNamedRanges()","return":"spreadsheet.NamedRange[]","doc":"Gets all the named ranges in this sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getNamedRanges()","argument":[]},{"name":"getParent","signature":"getParent()","return":"spreadsheet.Spreadsheet","doc":"Returns the Spreadsheet that contains this sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getParent()","argument":[]},{"name":"getPivotTables","signature":"getPivotTables()","return":"spreadsheet.PivotTable[]","doc":"Returns all the pivot tables on this sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getPivotTables()","argument":[]},{"name":"getProtections","signature":"getProtections(type)","return":"spreadsheet.Protection[]","doc":"Gets an array of objects representing all protected ranges in the sheet, or a single-element array representing the protection on the sheet itself.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getProtections(ProtectionType)","argument":[{"name":"type","type":"spreadsheet.ProtectionType","doc":"The type of protected area, either SpreadsheetApp.ProtectionType.RANGE or SpreadsheetApp.ProtectionType.SHEET."}]},{"name":"getRange","signature":"getRange(row, column)","return":"spreadsheet.Range","doc":"Returns the range with the top left cell at the given coordinates.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getRange(Integer,Integer)","argument":[{"name":"row","type":"Integer","doc":"The row of the cell to return."},{"name":"column","type":"Integer","doc":"The column of the cell to return."}]},{"name":"getRange","signature":"getRange(row, column, numRows)","return":"spreadsheet.Range","doc":"Returns the range with the top left cell at the given coordinates, and with the given number of rows.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getRange(Integer,Integer,Integer)","argument":[{"name":"row","type":"Integer","doc":"The starting row of the range."},{"name":"column","type":"Integer","doc":"The column of the range."},{"name":"numRows","type":"Integer","doc":"The number of rows to return."}]},{"name":"getRange","signature":"getRange(row, column, numRows, numColumns)","return":"spreadsheet.Range","doc":"Returns the range with the top left cell at the given coordinates with the given number of rows and columns.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getRange(Integer,Integer,Integer,Integer)","argument":[{"name":"row","type":"Integer","doc":"The starting row of the range."},{"name":"column","type":"Integer","doc":"The starting column of the range."},{"name":"numRows","type":"Integer","doc":"The number of rows to return."},{"name":"numColumns","type":"Integer","doc":"The number of columns to return."}]},{"name":"getRange","signature":"getRange(a1Notation)","return":"spreadsheet.Range","doc":"Returns the range as specified in A1 notation or R1C1 notation.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getRange(String)","argument":[{"name":"a1Notation","type":"String","doc":"The range to return, as specified in A1 notation or R1C1 notation."}]},{"name":"getRangeList","signature":"getRangeList(a1Notations)","return":"spreadsheet.RangeList","doc":"Returns the RangeList collection representing the ranges in the same sheet specified by a non-empty list of A1 notations or R1C1 notations.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getRangeList(String)","argument":[{"name":"a1Notations","type":"String[]","doc":"The list of ranges to return, as specified in A1 notation or R1C1 notation."}]},{"name":"getRowGroup","signature":"getRowGroup(rowIndex, groupDepth)","return":"spreadsheet.Group","doc":"Returns the row group at the given index and group depth.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getRowGroup(Integer,Integer)","argument":[{"name":"rowIndex","type":"Integer","doc":"The row index of the group control toggle or an index within the group."},{"name":"groupDepth","type":"Integer","doc":"The depth of the group."}]},{"name":"getRowGroupControlPosition","signature":"getRowGroupControlPosition()","return":"spreadsheet.GroupControlTogglePosition","doc":"Returns the GroupControlTogglePosition for all row groups on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getRowGroupControlPosition()","argument":[]},{"name":"getRowGroupDepth","signature":"getRowGroupDepth(rowIndex)","return":"Integer","doc":"Returns the group depth of the row at the given index.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getRowGroupDepth(Integer)","argument":[{"name":"rowIndex","type":"Integer","doc":"The index of the row."}]},{"name":"getRowHeight","signature":"getRowHeight(rowPosition)","return":"Integer","doc":"Gets the height in pixels of the given row.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getRowHeight(Integer)","argument":[{"name":"rowPosition","type":"Integer","doc":"The *position* of the row to examine."}]},{"name":"getSelection","signature":"getSelection()","return":"spreadsheet.Selection","doc":"Returns the current Selection in the spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getSelection()","argument":[]},{"name":"getSheetId","signature":"getSheetId()","return":"Integer","doc":"Returns the ID of the sheet represented by this object.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getSheetId()","argument":[]},{"name":"getSheetName","signature":"getSheetName()","return":"String","doc":"Returns the sheet name.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getSheetName()","argument":[]},{"name":"getSheetValues","signature":"getSheetValues(startRow, startColumn, numRows, numColumns)","return":"Object[][]","doc":"Returns the rectangular grid of values for this range starting at the given coordinates.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getSheetValues(Integer,Integer,Integer,Integer)","argument":[{"name":"startRow","type":"Integer","doc":"The position of the starting row."},{"name":"startColumn","type":"Integer","doc":"The position of the starting column."},{"name":"numRows","type":"Integer","doc":"The number of rows to return values for."},{"name":"numColumns","type":"Integer","doc":"The number of columns to return values for."}]},{"name":"getTabColor","signature":"getTabColor()","return":"String","doc":"Gets the sheet tab color, or null if the sheet tab has no color.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#getTabColor()","argument":[]},{"name":"hasHiddenGridlines","signature":"hasHiddenGridlines()","return":"Boolean","doc":"Returns true if the sheet's gridlines are hidden; otherwise returns false.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#hasHiddenGridlines()","argument":[]},{"name":"hideColumn","signature":"hideColumn(column)","return":"void","doc":"Hides the columns in the given range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#hideColumn(Range)","argument":[{"name":"column","type":"spreadsheet.Range","doc":"The column range to hide."}]},{"name":"hideColumns","signature":"hideColumns(columnIndex)","return":"void","doc":"Hides the column at the given index.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#hideColumns(Integer)","argument":[{"name":"columnIndex","type":"Integer","doc":"the index of the column to hide"}]},{"name":"hideColumns","signature":"hideColumns(columnIndex, numColumns)","return":"void","doc":"Hides one or more consecutive columns starting at the given index.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#hideColumns(Integer,Integer)","argument":[{"name":"columnIndex","type":"Integer","doc":"The starting index of the columns to hide."},{"name":"numColumns","type":"Integer","doc":"The number of columns to hide."}]},{"name":"hideRow","signature":"hideRow(row)","return":"void","doc":"Hides the rows in the given range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#hideRow(Range)","argument":[{"name":"row","type":"spreadsheet.Range","doc":"The row range to hide."}]},{"name":"hideRows","signature":"hideRows(rowIndex)","return":"void","doc":"Hides the row at the given index.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#hideRows(Integer)","argument":[{"name":"rowIndex","type":"Integer","doc":"The index of the row to hide."}]},{"name":"hideRows","signature":"hideRows(rowIndex, numRows)","return":"void","doc":"Hides one or more consecutive rows starting at the given index.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#hideRows(Integer,Integer)","argument":[{"name":"rowIndex","type":"Integer","doc":"The starting index of the rows to hide."},{"name":"numRows","type":"Integer","doc":"The number of rows to hide."}]},{"name":"hideSheet","signature":"hideSheet()","return":"spreadsheet.Sheet","doc":"Hides this sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#hideSheet()","argument":[]},{"name":"insertChart","signature":"insertChart(chart)","return":"void","doc":"Adds a new chart to this sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#insertChart(EmbeddedChart)","argument":[{"name":"chart","type":"spreadsheet.EmbeddedChart","doc":"the chart to insert"}]},{"name":"insertColumnAfter","signature":"insertColumnAfter(afterPosition)","return":"spreadsheet.Sheet","doc":"Inserts a column after the given column position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#insertColumnAfter(Integer)","argument":[{"name":"afterPosition","type":"Integer","doc":"The column after which the new column should be added."}]},{"name":"insertColumnBefore","signature":"insertColumnBefore(beforePosition)","return":"spreadsheet.Sheet","doc":"Inserts a column before the given column position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#insertColumnBefore(Integer)","argument":[{"name":"beforePosition","type":"Integer","doc":"The column before which the new column should be added."}]},{"name":"insertColumns","signature":"insertColumns(columnIndex)","return":"void","doc":"Inserts a blank column in a sheet at the specified location.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#insertColumns(Integer)","argument":[{"name":"columnIndex","type":"Integer","doc":"The index indicating where to insert a column."}]},{"name":"insertColumns","signature":"insertColumns(columnIndex, numColumns)","return":"void","doc":"Inserts one or more consecutive blank columns in a sheet starting at the specified location.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#insertColumns(Integer,Integer)","argument":[{"name":"columnIndex","type":"Integer","doc":"The index indicating where to insert a column."},{"name":"numColumns","type":"Integer","doc":"The number of columns to insert."}]},{"name":"insertColumnsAfter","signature":"insertColumnsAfter(afterPosition, howMany)","return":"spreadsheet.Sheet","doc":"Inserts a number of columns after the given column position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#insertColumnsAfter(Integer,Integer)","argument":[{"name":"afterPosition","type":"Integer","doc":"The column after which the new column should be added."},{"name":"howMany","type":"Integer","doc":"The number of columns to insert."}]},{"name":"insertColumnsBefore","signature":"insertColumnsBefore(beforePosition, howMany)","return":"spreadsheet.Sheet","doc":"Inserts a number of columns before the given column position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#insertColumnsBefore(Integer,Integer)","argument":[{"name":"beforePosition","type":"Integer","doc":"The column before which the new column should be added."},{"name":"howMany","type":"Integer","doc":"The number of columns to insert."}]},{"name":"insertImage","signature":"insertImage(blobSource, column, row)","return":"void","doc":"Inserts a BlobSource as an image in the document at a given row and column.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#insertImage(BlobSource,Integer,Integer)","argument":[{"name":"blobSource","type":"base.BlobSource","doc":"The blob containing the image contents, MIME type, and (optionally) name."},{"name":"column","type":"Integer","doc":"The column position."},{"name":"row","type":"Integer","doc":"The row position."}]},{"name":"insertImage","signature":"insertImage(blobSource, column, row, offsetX, offsetY)","return":"void","doc":"Inserts a BlobSource as an image in the document at a given row and column, with a pixel offset.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#insertImage(BlobSource,Integer,Integer,Integer,Integer)","argument":[{"name":"blobSource","type":"base.BlobSource","doc":"The blob containing the image contents, MIME type, and (optionally) name."},{"name":"column","type":"Integer","doc":"The column position."},{"name":"row","type":"Integer","doc":"The row position."},{"name":"offsetX","type":"Integer","doc":"The horizontal offset from cell corner in pixels."},{"name":"offsetY","type":"Integer","doc":"The vertical offset from cell corner in pixels."}]},{"name":"insertImage","signature":"insertImage(url, column, row)","return":"void","doc":"Inserts an image in the document at a given row and column.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#insertImage(String,Integer,Integer)","argument":[{"name":"url","type":"String","doc":"The URL of the image."},{"name":"column","type":"Integer","doc":"The grid column position."},{"name":"row","type":"Integer","doc":"The grid row position."}]},{"name":"insertImage","signature":"insertImage(url, column, row, offsetX, offsetY)","return":"void","doc":"Inserts an image in the document at a given row and column, with a pixel offset.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#insertImage(String,Integer,Integer,Integer,Integer)","argument":[{"name":"url","type":"String","doc":"The URL for the image."},{"name":"column","type":"Integer","doc":"The column position."},{"name":"row","type":"Integer","doc":"The row position."},{"name":"offsetX","type":"Integer","doc":"The horizontal offset from cell corner in pixels."},{"name":"offsetY","type":"Integer","doc":"The vertical offset from cell corner in pixels."}]},{"name":"insertRowAfter","signature":"insertRowAfter(afterPosition)","return":"spreadsheet.Sheet","doc":"Inserts a row after the given row position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#insertRowAfter(Integer)","argument":[{"name":"afterPosition","type":"Integer","doc":"The row after which the new row should be added."}]},{"name":"insertRowBefore","signature":"insertRowBefore(beforePosition)","return":"spreadsheet.Sheet","doc":"Inserts a row before the given row position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#insertRowBefore(Integer)","argument":[{"name":"beforePosition","type":"Integer","doc":"The row before which the new row should be added."}]},{"name":"insertRows","signature":"insertRows(rowIndex)","return":"void","doc":"Inserts a blank row in a sheet at the specified location.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#insertRows(Integer)","argument":[{"name":"rowIndex","type":"Integer","doc":"The index indicating where to insert a row."}]},{"name":"insertRows","signature":"insertRows(rowIndex, numRows)","return":"void","doc":"Inserts one or more consecutive blank rows in a sheet starting at the specified location.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#insertRows(Integer,Integer)","argument":[{"name":"rowIndex","type":"Integer","doc":"The index indicating where to insert a row."},{"name":"numRows","type":"Integer","doc":"The number of rows to insert."}]},{"name":"insertRowsAfter","signature":"insertRowsAfter(afterPosition, howMany)","return":"spreadsheet.Sheet","doc":"Inserts a number of rows after the given row position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#insertRowsAfter(Integer,Integer)","argument":[{"name":"afterPosition","type":"Integer","doc":"The row after which the new rows should be added."},{"name":"howMany","type":"Integer","doc":"The number of rows to insert."}]},{"name":"insertRowsBefore","signature":"insertRowsBefore(beforePosition, howMany)","return":"spreadsheet.Sheet","doc":"Inserts a number of rows before the given row position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#insertRowsBefore(Integer,Integer)","argument":[{"name":"beforePosition","type":"Integer","doc":"The row before which the new rows should be added."},{"name":"howMany","type":"Integer","doc":"The number of rows to insert."}]},{"name":"isRightToLeft","signature":"isRightToLeft()","return":"Boolean","doc":"Returns true if this sheet layout is right-to-left.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#isRightToLeft()","argument":[]},{"name":"isSheetHidden","signature":"isSheetHidden()","return":"Boolean","doc":"Returns true if the sheet is currently hidden.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#isSheetHidden()","argument":[]},{"name":"moveColumns","signature":"moveColumns(columnSpec, destinationIndex)","return":"void","doc":"Moves the columns selected by the given range to the position indicated by the destinationIndex.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#moveColumns(Range,Integer)","argument":[{"name":"columnSpec","type":"spreadsheet.Range","doc":"A range spanning the columns that should be moved."},{"name":"destinationIndex","type":"Integer","doc":"The index that the columns should be moved to. Note that this index is based on the coordinates before the columns are moved. Existing data is shifted right to make room for the moved columns while the source columns are removed from the grid. Therefore, the data may end up at a different index than originally specified."}]},{"name":"moveRows","signature":"moveRows(rowSpec, destinationIndex)","return":"void","doc":"Moves the rows selected by the given range to the position indicated by the destinationIndex.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#moveRows(Range,Integer)","argument":[{"name":"rowSpec","type":"spreadsheet.Range","doc":"A range spanning the rows that should be moved."},{"name":"destinationIndex","type":"Integer","doc":"The index that the rows should be moved to. Note that this index is based on the coordinates before the rows are moved. Existing data is shifted down to make room for the moved rows while the source rows are removed from the grid. Therefore, the data may end up at a different index than originally specified."}]},{"name":"newChart","signature":"newChart()","return":"spreadsheet.EmbeddedChartBuilder","doc":"Returns a builder to create a new chart for this sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#newChart()","argument":[]},{"name":"protect","signature":"protect()","return":"spreadsheet.Protection","doc":"Creates an object that can protect the sheet from being edited except by users who have permission.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#protect()","argument":[]},{"name":"removeChart","signature":"removeChart(chart)","return":"void","doc":"Removes a chart from the parent sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#removeChart(EmbeddedChart)","argument":[{"name":"chart","type":"spreadsheet.EmbeddedChart","doc":"the chart to remove"}]},{"name":"setActiveRange","signature":"setActiveRange(range)","return":"spreadsheet.Range","doc":"Sets the specified range as the active range in the active sheet, with the top left cell in the range as the current cell.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#setActiveRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to set as the active range."}]},{"name":"setActiveRangeList","signature":"setActiveRangeList(rangeList)","return":"spreadsheet.RangeList","doc":"Sets the specified list of ranges as the active ranges in the active sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#setActiveRangeList(RangeList)","argument":[{"name":"rangeList","type":"spreadsheet.RangeList","doc":"The list of ranges to select."}]},{"name":"setActiveSelection","signature":"setActiveSelection(range)","return":"spreadsheet.Range","doc":"Sets the active selection region for this sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#setActiveSelection(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to set as the active selection."}]},{"name":"setActiveSelection","signature":"setActiveSelection(a1Notation)","return":"spreadsheet.Range","doc":"Sets the active selection, as specified in A1 notation or R1C1 notation.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#setActiveSelection(String)","argument":[{"name":"a1Notation","type":"String","doc":"The range to set as active, as specified in A1 notation or R1C1 notation."}]},{"name":"setColumnGroupControlPosition","signature":"setColumnGroupControlPosition(position)","return":"spreadsheet.Sheet","doc":"Sets the position of the column group control toggle on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#setColumnGroupControlPosition(GroupControlTogglePosition)","argument":[{"name":"position","type":"spreadsheet.GroupControlTogglePosition","doc":"The position of the column group control toggle."}]},{"name":"setColumnWidth","signature":"setColumnWidth(columnPosition, width)","return":"spreadsheet.Sheet","doc":"Sets the width of the given column in pixels.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#setColumnWidth(Integer,Integer)","argument":[{"name":"columnPosition","type":"Integer","doc":"The position of the given column to set."},{"name":"width","type":"Integer","doc":"The width in pixels to set it to."}]},{"name":"setColumnWidths","signature":"setColumnWidths(startColumn, numColumns, width)","return":"spreadsheet.Sheet","doc":"Sets the width of the given columns in pixels.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#setColumnWidths(Integer,Integer,Integer)","argument":[{"name":"startColumn","type":"Integer","doc":"The starting column position to change."},{"name":"numColumns","type":"Integer","doc":"The number of columns to change."},{"name":"width","type":"Integer","doc":"The width in pixels to set it to."}]},{"name":"setConditionalFormatRules","signature":"setConditionalFormatRules(rules)","return":"void","doc":"Replaces all currently existing conditional format rules in the sheet with the input rules.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#setConditionalFormatRules(ConditionalFormatRule)","argument":[{"name":"rules","type":"spreadsheet.ConditionalFormatRule[]","doc":"The new conditional format rules."}]},{"name":"setCurrentCell","signature":"setCurrentCell(cell)","return":"spreadsheet.Range","doc":"Sets the specified cell as the current cell.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#setCurrentCell(Range)","argument":[{"name":"cell","type":"spreadsheet.Range","doc":"The cell to set as the current cell."}]},{"name":"setFrozenColumns","signature":"setFrozenColumns(columns)","return":"void","doc":"Freezes the given number of columns.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#setFrozenColumns(Integer)","argument":[{"name":"columns","type":"Integer","doc":"The number of columns to freeze."}]},{"name":"setFrozenRows","signature":"setFrozenRows(rows)","return":"void","doc":"Freezes the given number of rows.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#setFrozenRows(Integer)","argument":[{"name":"rows","type":"Integer","doc":"The number of rows to freeze."}]},{"name":"setHiddenGridlines","signature":"setHiddenGridlines(hideGridlines)","return":"spreadsheet.Sheet","doc":"Hides or reveals the sheet gridlines.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#setHiddenGridlines(Boolean)","argument":[{"name":"hideGridlines","type":"Boolean","doc":"If true, hide gridlines in this sheet; otherwise show the gridlines."}]},{"name":"setName","signature":"setName(name)","return":"spreadsheet.Sheet","doc":"Sets the sheet name.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#setName(String)","argument":[{"name":"name","type":"String","doc":"The new name for the sheet."}]},{"name":"setRightToLeft","signature":"setRightToLeft(rightToLeft)","return":"spreadsheet.Sheet","doc":"Sets or unsets the sheet layout to right-to-left.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#setRightToLeft(Boolean)","argument":[{"name":"rightToLeft","type":"Boolean","doc":"If true, the sheet layout is set to right-to-left, with cell A1 at the top right corner. If false, the sheet layout is set to the default left-to-right, with cell A1 at the top left."}]},{"name":"setRowGroupControlPosition","signature":"setRowGroupControlPosition(position)","return":"spreadsheet.Sheet","doc":"Sets the position of the row group control toggle on the sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#setRowGroupControlPosition(GroupControlTogglePosition)","argument":[{"name":"position","type":"spreadsheet.GroupControlTogglePosition","doc":"The position of the row group control toggle."}]},{"name":"setRowHeight","signature":"setRowHeight(rowPosition, height)","return":"spreadsheet.Sheet","doc":"Sets the row height of the given row in pixels.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#setRowHeight(Integer,Integer)","argument":[{"name":"rowPosition","type":"Integer","doc":"The row position to change."},{"name":"height","type":"Integer","doc":"The height in pixels to set it to."}]},{"name":"setRowHeights","signature":"setRowHeights(startRow, numRows, height)","return":"spreadsheet.Sheet","doc":"Sets the height of the given rows in pixels.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#setRowHeights(Integer,Integer,Integer)","argument":[{"name":"startRow","type":"Integer","doc":"The starting row position to change."},{"name":"numRows","type":"Integer","doc":"The number of rows to change."},{"name":"height","type":"Integer","doc":"The height in pixels to set it to."}]},{"name":"setTabColor","signature":"setTabColor(color)","return":"spreadsheet.Sheet","doc":"Sets the sheet tab color.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#setTabColor(String)","argument":[{"name":"color","type":"String","doc":"A color code in CSS notation (like '#ffffff' or 'white'), or null to reset the tab color."}]},{"name":"showColumns","signature":"showColumns(columnIndex)","return":"void","doc":"Unhides the column at the given index.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#showColumns(Integer)","argument":[{"name":"columnIndex","type":"Integer","doc":"The index of the column to unhide."}]},{"name":"showColumns","signature":"showColumns(columnIndex, numColumns)","return":"void","doc":"Unhides one or more consecutive columns starting at the given index.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#showColumns(Integer,Integer)","argument":[{"name":"columnIndex","type":"Integer","doc":"The starting index of the columns to unhide."},{"name":"numColumns","type":"Integer","doc":"The number of columns to unhide."}]},{"name":"showRows","signature":"showRows(rowIndex)","return":"void","doc":"Unhides the row at the given index.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#showRows(Integer)","argument":[{"name":"rowIndex","type":"Integer","doc":"The index of the row to unhide."}]},{"name":"showRows","signature":"showRows(rowIndex, numRows)","return":"void","doc":"Unhides one or more consecutive rows starting at the given index.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#showRows(Integer,Integer)","argument":[{"name":"rowIndex","type":"Integer","doc":"The starting index of the rows to unhide."},{"name":"numRows","type":"Integer","doc":"The number of rows to unhide."}]},{"name":"showSheet","signature":"showSheet()","return":"spreadsheet.Sheet","doc":"Makes the sheet visible.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#showSheet()","argument":[]},{"name":"sort","signature":"sort(columnPosition)","return":"spreadsheet.Sheet","doc":"Sorts a sheet by column, ascending.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#sort(Integer)","argument":[{"name":"columnPosition","type":"Integer","doc":"The column to sort by."}]},{"name":"sort","signature":"sort(columnPosition, ascending)","return":"spreadsheet.Sheet","doc":"Sorts a sheet by column.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#sort(Integer,Boolean)","argument":[{"name":"columnPosition","type":"Integer","doc":"The column to sort by."},{"name":"ascending","type":"Boolean","doc":"true for ascending sorts, false for descending."}]},{"name":"unhideColumn","signature":"unhideColumn(column)","return":"void","doc":"Unhides the column in the given range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#unhideColumn(Range)","argument":[{"name":"column","type":"spreadsheet.Range","doc":"The range to unhide, if hidden."}]},{"name":"unhideRow","signature":"unhideRow(row)","return":"void","doc":"Unhides the row in the given range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#unhideRow(Range)","argument":[{"name":"row","type":"spreadsheet.Range","doc":"The range to unhide, if hidden."}]},{"name":"updateChart","signature":"updateChart(chart)","return":"void","doc":"Updates the chart on this sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/sheet/#updateChart(EmbeddedChart)","argument":[{"name":"chart","type":"spreadsheet.EmbeddedChart","doc":"the chart to update"}]}]},"spreadsheet.Spreadsheet":{"name":"Spreadsheet","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet","doc":"Access and modify Google Sheets files. Common operations are adding new sheets and adding collaborators.","property":[],"method":[{"name":"addEditor","signature":"addEditor(emailAddress)","return":"spreadsheet.Spreadsheet","doc":"Adds the given user to the list of editors for the Spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#addEditor(String)","argument":[{"name":"emailAddress","type":"String","doc":"the email address of the user to add"}]},{"name":"addEditor","signature":"addEditor(user)","return":"spreadsheet.Spreadsheet","doc":"Adds the given user to the list of editors for the Spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#addEditor(User)","argument":[{"name":"user","type":"base.User","doc":"a representation of the user to add"}]},{"name":"addEditors","signature":"addEditors(emailAddresses)","return":"spreadsheet.Spreadsheet","doc":"Adds the given array of users to the list of editors for the Spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#addEditors(String)","argument":[{"name":"emailAddresses","type":"String[]","doc":"an array of email addresses of the users to add"}]},{"name":"addMenu","signature":"addMenu(name, subMenus)","return":"void","doc":"Creates a new menu in the Spreadsheet UI.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#addMenu(String,Object)","argument":[{"name":"name","type":"String","doc":"The name of the menu to be created."},{"name":"subMenus","type":"Object[]","doc":"An array of JavaScript maps with name and functionName parameters."}]},{"name":"addViewer","signature":"addViewer(emailAddress)","return":"spreadsheet.Spreadsheet","doc":"Adds the given user to the list of viewers for the Spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#addViewer(String)","argument":[{"name":"emailAddress","type":"String","doc":"the email address of the user to add"}]},{"name":"addViewer","signature":"addViewer(user)","return":"spreadsheet.Spreadsheet","doc":"Adds the given user to the list of viewers for the Spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#addViewer(User)","argument":[{"name":"user","type":"base.User","doc":"a representation of the user to add"}]},{"name":"addViewers","signature":"addViewers(emailAddresses)","return":"spreadsheet.Spreadsheet","doc":"Adds the given array of users to the list of viewers for the Spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#addViewers(String)","argument":[{"name":"emailAddresses","type":"String[]","doc":"an array of email addresses of the users to add"}]},{"name":"appendRow","signature":"appendRow(rowContents)","return":"spreadsheet.Sheet","doc":"Appends a row to the spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#appendRow(Object)","argument":[{"name":"rowContents","type":"Object[]","doc":"An array of values to insert after the last row in the sheet."}]},{"name":"autoResizeColumn","signature":"autoResizeColumn(columnPosition)","return":"spreadsheet.Sheet","doc":"Sets the width of the given column to fit its contents.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#autoResizeColumn(Integer)","argument":[{"name":"columnPosition","type":"Integer","doc":"The position of the given column to resize."}]},{"name":"copy","signature":"copy(name)","return":"spreadsheet.Spreadsheet","doc":"Copies the spreadsheet and returns the new one.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#copy(String)","argument":[{"name":"name","type":"String","doc":""}]},{"name":"deleteActiveSheet","signature":"deleteActiveSheet()","return":"spreadsheet.Sheet","doc":"Deletes the currently active sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#deleteActiveSheet()","argument":[]},{"name":"deleteColumn","signature":"deleteColumn(columnPosition)","return":"spreadsheet.Sheet","doc":"Deletes the column at the given column position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#deleteColumn(Integer)","argument":[{"name":"columnPosition","type":"Integer","doc":"The position of the column, starting at 1 for the first column."}]},{"name":"deleteColumns","signature":"deleteColumns(columnPosition, howMany)","return":"void","doc":"Deletes a number of columns starting at the given column position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#deleteColumns(Integer,Integer)","argument":[{"name":"columnPosition","type":"Integer","doc":"The position of the first column to delete."},{"name":"howMany","type":"Integer","doc":"The number of columns to delete."}]},{"name":"deleteRow","signature":"deleteRow(rowPosition)","return":"spreadsheet.Sheet","doc":"Deletes the row at the given row position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#deleteRow(Integer)","argument":[{"name":"rowPosition","type":"Integer","doc":"The position of the row, starting at 1 for the first row."}]},{"name":"deleteRows","signature":"deleteRows(rowPosition, howMany)","return":"void","doc":"Deletes a number of rows starting at the given row position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#deleteRows(Integer,Integer)","argument":[{"name":"rowPosition","type":"Integer","doc":"The position of the first row to delete."},{"name":"howMany","type":"Integer","doc":"The number of rows to delete."}]},{"name":"deleteSheet","signature":"deleteSheet(sheet)","return":"void","doc":"Deletes the specified sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#deleteSheet(Sheet)","argument":[{"name":"sheet","type":"spreadsheet.Sheet","doc":"The sheet to delete."}]},{"name":"duplicateActiveSheet","signature":"duplicateActiveSheet()","return":"spreadsheet.Sheet","doc":"Duplicates the active sheet and makes it the active sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#duplicateActiveSheet()","argument":[]},{"name":"getActiveCell","signature":"getActiveCell()","return":"spreadsheet.Range","doc":"Returns the active cell in this sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getActiveCell()","argument":[]},{"name":"getActiveRange","signature":"getActiveRange()","return":"spreadsheet.Range","doc":"Returns the selected range in the active sheet, or null if there is no active range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getActiveRange()","argument":[]},{"name":"getActiveRangeList","signature":"getActiveRangeList()","return":"spreadsheet.RangeList","doc":"Returns the list of active ranges in the active sheet or null if there are no active ranges.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getActiveRangeList()","argument":[]},{"name":"getActiveSheet","signature":"getActiveSheet()","return":"spreadsheet.Sheet","doc":"Gets the active sheet in a spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getActiveSheet()","argument":[]},{"name":"getAs","signature":"getAs(contentType)","return":"base.Blob","doc":"Return the data inside this object as a blob converted to the specified content type.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getAs(String)","argument":[{"name":"contentType","type":"String","doc":"the MIME type to convert to. For most blobs, 'application/pdf' is the only valid option. For images in BMP, GIF, JPEG, or PNG format, any of 'image/bmp', 'image/gif', 'image/jpeg', or 'image/png' are also valid."}]},{"name":"getBandings","signature":"getBandings()","return":"spreadsheet.Banding[]","doc":"Returns all the bandings in this spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getBandings()","argument":[]},{"name":"getBlob","signature":"getBlob()","return":"base.Blob","doc":"Return the data inside this object as a blob.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getBlob()","argument":[]},{"name":"getColumnWidth","signature":"getColumnWidth(columnPosition)","return":"Integer","doc":"Gets the width in pixels of the given column.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getColumnWidth(Integer)","argument":[{"name":"columnPosition","type":"Integer","doc":"The position of the column to examine."}]},{"name":"getCurrentCell","signature":"getCurrentCell()","return":"spreadsheet.Range","doc":"Returns the current cell in the active sheet or null if there is no current cell.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getCurrentCell()","argument":[]},{"name":"getDataRange","signature":"getDataRange()","return":"spreadsheet.Range","doc":"Returns a Range corresponding to the dimensions in which data is present.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getDataRange()","argument":[]},{"name":"getEditors","signature":"getEditors()","return":"base.User[]","doc":"Gets the list of editors for this Spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getEditors()","argument":[]},{"name":"getFormUrl","signature":"getFormUrl()","return":"String","doc":"Returns the URL for the form that sends its responses to this spreadsheet, or null if this spreadsheet has no associated form.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getFormUrl()","argument":[]},{"name":"getFrozenColumns","signature":"getFrozenColumns()","return":"Integer","doc":"Returns the number of frozen columns.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getFrozenColumns()","argument":[]},{"name":"getFrozenRows","signature":"getFrozenRows()","return":"Integer","doc":"Returns the number of frozen rows.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getFrozenRows()","argument":[]},{"name":"getId","signature":"getId()","return":"String","doc":"Gets a unique identifier for this spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getId()","argument":[]},{"name":"getLastColumn","signature":"getLastColumn()","return":"Integer","doc":"Returns the position of the last column that has content.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getLastColumn()","argument":[]},{"name":"getLastRow","signature":"getLastRow()","return":"Integer","doc":"Returns the position of the last row that has content.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getLastRow()","argument":[]},{"name":"getName","signature":"getName()","return":"String","doc":"Gets the name of the document.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getName()","argument":[]},{"name":"getNamedRanges","signature":"getNamedRanges()","return":"spreadsheet.NamedRange[]","doc":"Gets all the named ranges in this spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getNamedRanges()","argument":[]},{"name":"getNumSheets","signature":"getNumSheets()","return":"Integer","doc":"Returns the number of sheets in this spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getNumSheets()","argument":[]},{"name":"getOwner","signature":"getOwner()","return":"base.User","doc":"Returns the owner of the document.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getOwner()","argument":[]},{"name":"getProtections","signature":"getProtections(type)","return":"spreadsheet.Protection[]","doc":"Gets an array of objects representing all protected ranges or sheets in the spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getProtections(ProtectionType)","argument":[{"name":"type","type":"spreadsheet.ProtectionType","doc":"The type of protected area, either SpreadsheetApp.ProtectionType.RANGE or SpreadsheetApp.ProtectionType.SHEET."}]},{"name":"getRange","signature":"getRange(a1Notation)","return":"spreadsheet.Range","doc":"Returns the range as specified in A1 notation or R1C1 notation.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getRange(String)","argument":[{"name":"a1Notation","type":"String","doc":"The range to return, as specified in A1 notation or R1C1 notation."}]},{"name":"getRangeByName","signature":"getRangeByName(name)","return":"spreadsheet.Range","doc":"Returns a named range, or null if no range with the given name is found.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getRangeByName(String)","argument":[{"name":"name","type":"String","doc":"The name of the range to get."}]},{"name":"getRangeList","signature":"getRangeList(a1Notations)","return":"spreadsheet.RangeList","doc":"Returns the RangeList collection representing the ranges in the same sheet specified by a non-empty list of A1 notations or R1C1 notations.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getRangeList(String)","argument":[{"name":"a1Notations","type":"String[]","doc":"The list of ranges to return, as specified in A1 notation or R1C1 notation."}]},{"name":"getRowHeight","signature":"getRowHeight(rowPosition)","return":"Integer","doc":"Gets the height in pixels of the given row.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getRowHeight(Integer)","argument":[{"name":"rowPosition","type":"Integer","doc":"The *position* of the row to examine."}]},{"name":"getSelection","signature":"getSelection()","return":"spreadsheet.Selection","doc":"Returns the current Selection in the spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getSelection()","argument":[]},{"name":"getSheetByName","signature":"getSheetByName(name)","return":"spreadsheet.Sheet","doc":"Returns a sheet with the given name.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getSheetByName(String)","argument":[{"name":"name","type":"String","doc":"The name of the sheet to get."}]},{"name":"getSheetId","signature":"getSheetId()","return":"Integer","doc":"Returns the ID of the sheet represented by this object.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getSheetId()","argument":[]},{"name":"getSheetName","signature":"getSheetName()","return":"String","doc":"Returns the sheet name.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getSheetName()","argument":[]},{"name":"getSheetValues","signature":"getSheetValues(startRow, startColumn, numRows, numColumns)","return":"Object[][]","doc":"Returns the rectangular grid of values for this range starting at the given coordinates.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getSheetValues(Integer,Integer,Integer,Integer)","argument":[{"name":"startRow","type":"Integer","doc":"The position of the starting row."},{"name":"startColumn","type":"Integer","doc":"The position of the starting column."},{"name":"numRows","type":"Integer","doc":"The number of rows to return values for."},{"name":"numColumns","type":"Integer","doc":"The number of columns to return values for."}]},{"name":"getSheets","signature":"getSheets()","return":"spreadsheet.Sheet[]","doc":"Gets all the sheets in this spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getSheets()","argument":[]},{"name":"getSpreadsheetLocale","signature":"getSpreadsheetLocale()","return":"String","doc":"Gets the spreadsheet locale.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getSpreadsheetLocale()","argument":[]},{"name":"getSpreadsheetTimeZone","signature":"getSpreadsheetTimeZone()","return":"String","doc":"Gets the time zone for the spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getSpreadsheetTimeZone()","argument":[]},{"name":"getUrl","signature":"getUrl()","return":"String","doc":"Returns the url for the given spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getUrl()","argument":[]},{"name":"getViewers","signature":"getViewers()","return":"base.User[]","doc":"Gets the list of viewers and commenters for this Spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#getViewers()","argument":[]},{"name":"hideColumn","signature":"hideColumn(column)","return":"void","doc":"Hides the columns in the given range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#hideColumn(Range)","argument":[{"name":"column","type":"spreadsheet.Range","doc":"The column range to hide."}]},{"name":"hideRow","signature":"hideRow(row)","return":"void","doc":"Hides the rows in the given range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#hideRow(Range)","argument":[{"name":"row","type":"spreadsheet.Range","doc":"The row range to hide."}]},{"name":"insertColumnAfter","signature":"insertColumnAfter(afterPosition)","return":"spreadsheet.Sheet","doc":"Inserts a column after the given column position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#insertColumnAfter(Integer)","argument":[{"name":"afterPosition","type":"Integer","doc":"The column after which the new column should be added."}]},{"name":"insertColumnBefore","signature":"insertColumnBefore(beforePosition)","return":"spreadsheet.Sheet","doc":"Inserts a column before the given column position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#insertColumnBefore(Integer)","argument":[{"name":"beforePosition","type":"Integer","doc":"The column before which the new column should be added."}]},{"name":"insertColumnsAfter","signature":"insertColumnsAfter(afterPosition, howMany)","return":"spreadsheet.Sheet","doc":"Inserts a number of columns after the given column position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#insertColumnsAfter(Integer,Integer)","argument":[{"name":"afterPosition","type":"Integer","doc":"The column after which the new column should be added."},{"name":"howMany","type":"Integer","doc":"The number of columns to insert."}]},{"name":"insertColumnsBefore","signature":"insertColumnsBefore(beforePosition, howMany)","return":"spreadsheet.Sheet","doc":"Inserts a number of columns before the given column position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#insertColumnsBefore(Integer,Integer)","argument":[{"name":"beforePosition","type":"Integer","doc":"The column before which the new column should be added."},{"name":"howMany","type":"Integer","doc":"The number of columns to insert."}]},{"name":"insertImage","signature":"insertImage(blobSource, column, row)","return":"void","doc":"Inserts a Spreadsheet as an image in the document at a given row and column.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#insertImage(BlobSource,Integer,Integer)","argument":[{"name":"blobSource","type":"base.BlobSource","doc":"The blob containing the image contents, MIME type, and (optionally) name."},{"name":"column","type":"Integer","doc":"The column position."},{"name":"row","type":"Integer","doc":"The row position."}]},{"name":"insertImage","signature":"insertImage(blobSource, column, row, offsetX, offsetY)","return":"void","doc":"Inserts a Spreadsheet as an image in the document at a given row and column, with a pixel offset.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#insertImage(BlobSource,Integer,Integer,Integer,Integer)","argument":[{"name":"blobSource","type":"base.BlobSource","doc":"The blob containing the image contents, MIME type, and (optionally) name."},{"name":"column","type":"Integer","doc":"The column position."},{"name":"row","type":"Integer","doc":"The row position."},{"name":"offsetX","type":"Integer","doc":"The horizontal offset from cell corner in pixels."},{"name":"offsetY","type":"Integer","doc":"The vertical offset from cell corner in pixels."}]},{"name":"insertImage","signature":"insertImage(url, column, row)","return":"void","doc":"Inserts an image in the document at a given row and column.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#insertImage(String,Integer,Integer)","argument":[{"name":"url","type":"String","doc":"The URL of the image."},{"name":"column","type":"Integer","doc":"The grid column position."},{"name":"row","type":"Integer","doc":"The grid row position."}]},{"name":"insertImage","signature":"insertImage(url, column, row, offsetX, offsetY)","return":"void","doc":"Inserts an image in the document at a given row and column, with a pixel offset.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#insertImage(String,Integer,Integer,Integer,Integer)","argument":[{"name":"url","type":"String","doc":"The URL for the image."},{"name":"column","type":"Integer","doc":"The column position."},{"name":"row","type":"Integer","doc":"The row position."},{"name":"offsetX","type":"Integer","doc":"The horizontal offset from cell corner in pixels."},{"name":"offsetY","type":"Integer","doc":"The vertical offset from cell corner in pixels."}]},{"name":"insertRowAfter","signature":"insertRowAfter(afterPosition)","return":"spreadsheet.Sheet","doc":"Inserts a row after the given row position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#insertRowAfter(Integer)","argument":[{"name":"afterPosition","type":"Integer","doc":"The row after which the new row should be added."}]},{"name":"insertRowBefore","signature":"insertRowBefore(beforePosition)","return":"spreadsheet.Sheet","doc":"Inserts a row before the given row position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#insertRowBefore(Integer)","argument":[{"name":"beforePosition","type":"Integer","doc":"The row before which the new row should be added."}]},{"name":"insertRowsAfter","signature":"insertRowsAfter(afterPosition, howMany)","return":"spreadsheet.Sheet","doc":"Inserts a number of rows after the given row position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#insertRowsAfter(Integer,Integer)","argument":[{"name":"afterPosition","type":"Integer","doc":"The row after which the new rows should be added."},{"name":"howMany","type":"Integer","doc":"The number of rows to insert."}]},{"name":"insertRowsBefore","signature":"insertRowsBefore(beforePosition, howMany)","return":"spreadsheet.Sheet","doc":"Inserts a number of rows before the given row position.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#insertRowsBefore(Integer,Integer)","argument":[{"name":"beforePosition","type":"Integer","doc":"The row before which the new rows should be added."},{"name":"howMany","type":"Integer","doc":"The number of rows to insert."}]},{"name":"insertSheet","signature":"insertSheet()","return":"spreadsheet.Sheet","doc":"Inserts a new sheet into the spreadsheet, using a default sheet name.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#insertSheet()","argument":[]},{"name":"insertSheet","signature":"insertSheet(sheetIndex)","return":"spreadsheet.Sheet","doc":"Inserts a new sheet into the spreadsheet at the given index.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#insertSheet(Integer)","argument":[{"name":"sheetIndex","type":"Integer","doc":"The index of the newly created sheet. To insert a sheet as the first one in the spreadsheet, set it to 0."}]},{"name":"insertSheet","signature":"insertSheet(sheetIndex, options)","return":"spreadsheet.Sheet","doc":"Inserts a new sheet into the spreadsheet at the given index and uses optional advanced arguments.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#insertSheet(Integer,Object)","argument":[{"name":"sheetIndex","type":"Integer","doc":"The index of the newly created sheet. To insert a sheet as the first one in the spreadsheet, set it to 0."},{"name":"options","type":"Object","doc":"Optional JavaScript advanced arguments."}]},{"name":"insertSheet","signature":"insertSheet(options)","return":"spreadsheet.Sheet","doc":"Inserts a new sheet into the spreadsheet, using a default sheet name and optional advanced arguments.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#insertSheet(Object)","argument":[{"name":"options","type":"Object","doc":"Optional JavaScript advanced arguments, listed below."}]},{"name":"insertSheet","signature":"insertSheet(sheetName)","return":"spreadsheet.Sheet","doc":"Inserts a new sheet into the spreadsheet with the given name.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#insertSheet(String)","argument":[{"name":"sheetName","type":"String","doc":"The name of the new sheet."}]},{"name":"insertSheet","signature":"insertSheet(sheetName, sheetIndex)","return":"spreadsheet.Sheet","doc":"Inserts a new sheet into the spreadsheet with the given name at the given index.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#insertSheet(String,Integer)","argument":[{"name":"sheetName","type":"String","doc":"The name of the new sheet"},{"name":"sheetIndex","type":"Integer","doc":"The index of the newly created sheet. To insert a sheet as the first one in the spreadsheet, set it to 0."}]},{"name":"insertSheet","signature":"insertSheet(sheetName, sheetIndex, options)","return":"spreadsheet.Sheet","doc":"Inserts a new sheet into the spreadsheet with the given name at the given index and uses optional advanced arguments.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#insertSheet(String,Integer,Object)","argument":[{"name":"sheetName","type":"String","doc":"The name of the new sheet."},{"name":"sheetIndex","type":"Integer","doc":"The index of the newly inserted sheet. To insert a sheet as the first one in a spreadsheet, set it to 0."},{"name":"options","type":"Object","doc":"Optional JavaScript advanced arguments."}]},{"name":"insertSheet","signature":"insertSheet(sheetName, options)","return":"spreadsheet.Sheet","doc":"Inserts a new sheet into the spreadsheet with the given name and uses optional advanced arguments.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#insertSheet(String,Object)","argument":[{"name":"sheetName","type":"String","doc":"The name of the new sheet"},{"name":"options","type":"Object","doc":"Optional JavaScript advanced arguments."}]},{"name":"moveActiveSheet","signature":"moveActiveSheet(pos)","return":"void","doc":"Moves the active sheet to the given position in the list of sheets.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#moveActiveSheet(Integer)","argument":[{"name":"pos","type":"Integer","doc":"a position to move the active sheet to in the list of sheets"}]},{"name":"removeEditor","signature":"removeEditor(emailAddress)","return":"spreadsheet.Spreadsheet","doc":"Removes the given user from the list of editors for the Spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#removeEditor(String)","argument":[{"name":"emailAddress","type":"String","doc":"the email address of the user to remove"}]},{"name":"removeEditor","signature":"removeEditor(user)","return":"spreadsheet.Spreadsheet","doc":"Removes the given user from the list of editors for the Spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#removeEditor(User)","argument":[{"name":"user","type":"base.User","doc":"a representation of the user to remove"}]},{"name":"removeMenu","signature":"removeMenu(name)","return":"void","doc":"Removes a menu that was added by addMenu(name, subMenus).","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#removeMenu(String)","argument":[{"name":"name","type":"String","doc":"The name of the menu to remove."}]},{"name":"removeNamedRange","signature":"removeNamedRange(name)","return":"void","doc":"Deletes a named range with the given name.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#removeNamedRange(String)","argument":[{"name":"name","type":"String","doc":"The range name."}]},{"name":"removeViewer","signature":"removeViewer(emailAddress)","return":"spreadsheet.Spreadsheet","doc":"Removes the given user from the list of viewers and commenters for the Spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#removeViewer(String)","argument":[{"name":"emailAddress","type":"String","doc":"the email address of the user to remove"}]},{"name":"removeViewer","signature":"removeViewer(user)","return":"spreadsheet.Spreadsheet","doc":"Removes the given user from the list of viewers and commenters for the Spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#removeViewer(User)","argument":[{"name":"user","type":"base.User","doc":"a representation of the user to remove"}]},{"name":"rename","signature":"rename(newName)","return":"void","doc":"Renames the document.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#rename(String)","argument":[{"name":"newName","type":"String","doc":"The new name for the document."}]},{"name":"renameActiveSheet","signature":"renameActiveSheet(newName)","return":"void","doc":"Renames the current active sheet to the given new name.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#renameActiveSheet(String)","argument":[{"name":"newName","type":"String","doc":"The new name for the current active sheet."}]},{"name":"setActiveRange","signature":"setActiveRange(range)","return":"spreadsheet.Range","doc":"Sets the specified range as the active range in the active sheet, with the top left cell in the range as the current cell.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#setActiveRange(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to set as the active range."}]},{"name":"setActiveRangeList","signature":"setActiveRangeList(rangeList)","return":"spreadsheet.RangeList","doc":"Sets the specified list of ranges as the active ranges in the active sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#setActiveRangeList(RangeList)","argument":[{"name":"rangeList","type":"spreadsheet.RangeList","doc":"The list of ranges to select."}]},{"name":"setActiveSelection","signature":"setActiveSelection(range)","return":"spreadsheet.Range","doc":"Sets the active selection region for this sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#setActiveSelection(Range)","argument":[{"name":"range","type":"spreadsheet.Range","doc":"The range to set as the active selection."}]},{"name":"setActiveSelection","signature":"setActiveSelection(a1Notation)","return":"spreadsheet.Range","doc":"Sets the active selection, as specified in A1 notation or R1C1 notation.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#setActiveSelection(String)","argument":[{"name":"a1Notation","type":"String","doc":"The range to set as active, as specified in A1 notation or R1C1 notation."}]},{"name":"setActiveSheet","signature":"setActiveSheet(sheet)","return":"spreadsheet.Sheet","doc":"Sets the given sheet to be the active sheet in the spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#setActiveSheet(Sheet)","argument":[{"name":"sheet","type":"spreadsheet.Sheet","doc":"The sheet to set as the active sheet."}]},{"name":"setActiveSheet","signature":"setActiveSheet(sheet, restoreSelection)","return":"spreadsheet.Sheet","doc":"Sets the given sheet to be the active sheet in the spreadsheet, with an option to restore the most recent selection within that sheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#setActiveSheet(Sheet,Boolean)","argument":[{"name":"sheet","type":"spreadsheet.Sheet","doc":"The new active sheet."},{"name":"restoreSelection","type":"Boolean","doc":"Tf true, the most recent selection of the new active sheet becomes selected again as the new sheet becomes active; if false, the new sheet becomes active without changing the current selection."}]},{"name":"setColumnWidth","signature":"setColumnWidth(columnPosition, width)","return":"spreadsheet.Sheet","doc":"Sets the width of the given column in pixels.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#setColumnWidth(Integer,Integer)","argument":[{"name":"columnPosition","type":"Integer","doc":"The position of the given column to set."},{"name":"width","type":"Integer","doc":"The width in pixels to set it to."}]},{"name":"setCurrentCell","signature":"setCurrentCell(cell)","return":"spreadsheet.Range","doc":"Sets the specified cell as the current cell.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#setCurrentCell(Range)","argument":[{"name":"cell","type":"spreadsheet.Range","doc":"The cell to set as the current cell."}]},{"name":"setFrozenColumns","signature":"setFrozenColumns(columns)","return":"void","doc":"Freezes the given number of columns.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#setFrozenColumns(Integer)","argument":[{"name":"columns","type":"Integer","doc":"The number of columns to freeze."}]},{"name":"setFrozenRows","signature":"setFrozenRows(rows)","return":"void","doc":"Freezes the given number of rows.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#setFrozenRows(Integer)","argument":[{"name":"rows","type":"Integer","doc":"The number of rows to freeze."}]},{"name":"setNamedRange","signature":"setNamedRange(name, range)","return":"void","doc":"Names a range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#setNamedRange(String,Range)","argument":[{"name":"name","type":"String","doc":"The name to give the range."},{"name":"range","type":"spreadsheet.Range","doc":"The range specification."}]},{"name":"setRowHeight","signature":"setRowHeight(rowPosition, height)","return":"spreadsheet.Sheet","doc":"Sets the row height of the given row in pixels.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#setRowHeight(Integer,Integer)","argument":[{"name":"rowPosition","type":"Integer","doc":"The row position to change."},{"name":"height","type":"Integer","doc":"The height in pixels to set it to."}]},{"name":"setSpreadsheetLocale","signature":"setSpreadsheetLocale(locale)","return":"void","doc":"Sets the spreadsheet locale.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#setSpreadsheetLocale(String)","argument":[{"name":"locale","type":"String","doc":"The locale code to use (e.g., 'en', 'fr', 'en_US')."}]},{"name":"setSpreadsheetTimeZone","signature":"setSpreadsheetTimeZone(timezone)","return":"void","doc":"Sets the time zone for the spreadsheet.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#setSpreadsheetTimeZone(String)","argument":[{"name":"timezone","type":"String","doc":"The time zone, specified in \"long\" format (for example, \"America/New_York\", as listed by Joda.org)."}]},{"name":"show","signature":"show(userInterface)","return":"void","doc":"Displays a custom user interface component in a dialog centered in the user's browser's viewport.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#show(Object)","argument":[{"name":"userInterface","type":"Object","doc":"An HtmlOutput or UiInstance web app."}]},{"name":"sort","signature":"sort(columnPosition)","return":"spreadsheet.Sheet","doc":"Sorts a sheet by column, ascending.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#sort(Integer)","argument":[{"name":"columnPosition","type":"Integer","doc":"The column to sort by."}]},{"name":"sort","signature":"sort(columnPosition, ascending)","return":"spreadsheet.Sheet","doc":"Sorts a sheet by column.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#sort(Integer,Boolean)","argument":[{"name":"columnPosition","type":"Integer","doc":"The column to sort by."},{"name":"ascending","type":"Boolean","doc":"true for ascending sorts, false for descending."}]},{"name":"toast","signature":"toast(msg)","return":"void","doc":"Shows a popup window in the lower right corner of the spreadsheet with the given message.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#toast(String)","argument":[{"name":"msg","type":"String","doc":"The message to be shown in the toast."}]},{"name":"toast","signature":"toast(msg, title)","return":"void","doc":"Shows a popup window in the lower right corner of the spreadsheet with the given message and title.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#toast(String,String)","argument":[{"name":"msg","type":"String","doc":"The message to be shown in the toast."},{"name":"title","type":"String","doc":"The optional title of the toast."}]},{"name":"toast","signature":"toast(msg, title, timeoutSeconds)","return":"void","doc":"Shows a popup window in the lower right corner of the spreadsheet with the given title and message, that stays visible for a certain length of time.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#toast(String,String,Number)","argument":[{"name":"msg","type":"String","doc":"The message to be shown in the toast."},{"name":"title","type":"String","doc":"The optional title of the toast."},{"name":"timeoutSeconds","type":"Number","doc":"The timeout in seconds; if null, the toast defaults to 5 seconds; if negative, the toast remains until dismissed."}]},{"name":"unhideColumn","signature":"unhideColumn(column)","return":"void","doc":"Unhides the column in the given range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#unhideColumn(Range)","argument":[{"name":"column","type":"spreadsheet.Range","doc":"The range to unhide, if hidden."}]},{"name":"unhideRow","signature":"unhideRow(row)","return":"void","doc":"Unhides the row in the given range.","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#unhideRow(Range)","argument":[{"name":"row","type":"spreadsheet.Range","doc":"The range to unhide, if hidden."}]},{"name":"updateMenu","signature":"updateMenu(name, subMenus)","return":"void","doc":"Updates a menu that was added by addMenu(name, subMenus).","url":"https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet/#updateMenu(String,Object)","argument":[{"name":"name","type":"String","doc":"The name of the menu to update."},{"name":"subMenus","type":"Object[]","doc":"An array of JavaScript maps with name and functionName parameters."}]}]},"spreadsheet.TextRotation":{"name":"TextRotation","kind":"class","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/text-rotation","doc":"Access the text rotation settings for a cell.","property":[],"method":[{"name":"getDegrees","signature":"getDegrees()","return":"Integer","doc":"Gets the angle between standard text orientation and the current text orientation.","url":"https://developers.google.com/apps-script/reference/spreadsheet/text-rotation/#getDegrees()","argument":[]},{"name":"isVertical","signature":"isVertical()","return":"Boolean","doc":"Returns true if the text is stacked vertically; returns false otherwise.","url":"https://developers.google.com/apps-script/reference/spreadsheet/text-rotation/#isVertical()","argument":[]}]},"spreadsheet.AutoFillSeries":{"name":"AutoFillSeries","kind":"enum","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/auto-fill-series","doc":"An enumeration of the types of series used to calculate auto-filled values. The manner in which these series affect calculated values differs depending on the type and amount of source data.","property":[{"name":"DEFAULT_SERIES","type":"Enum","doc":"Default. Auto-filling with this setting results in the empty cells in the expanded range being filled with increments of the existing values."},{"name":"ALTERNATE_SERIES","type":"Enum","doc":"Auto-filling with this setting results in the empty cells in the expanded range being filled with copies of the existing values."}],"method":[]},"spreadsheet.BandingTheme":{"name":"BandingTheme","kind":"enum","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/banding-theme","doc":"An enumeration of banding themes. Each theme consists of several complementary colors that are applied to different cells based on the banding settings.","property":[{"name":"LIGHT_GREY","type":"Enum","doc":"A light grey banding theme."},{"name":"CYAN","type":"Enum","doc":"A cyan banding theme."},{"name":"GREEN","type":"Enum","doc":"A green banding theme."},{"name":"YELLOW","type":"Enum","doc":"A yellow banding theme."},{"name":"ORANGE","type":"Enum","doc":"An orange banding theme."},{"name":"BLUE","type":"Enum","doc":"A blue banding theme."},{"name":"TEAL","type":"Enum","doc":"A teal banding theme."},{"name":"GREY","type":"Enum","doc":"A grey banding theme."},{"name":"BROWN","type":"Enum","doc":"A brown banding theme."},{"name":"LIGHT_GREEN","type":"Enum","doc":"A light green banding theme."},{"name":"INDIGO","type":"Enum","doc":"An indigo banding theme."},{"name":"PINK","type":"Enum","doc":"A pink banding theme."}],"method":[]},"spreadsheet.BooleanCriteria":{"name":"BooleanCriteria","kind":"enum","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/boolean-criteria","doc":"An enumeration representing the boolean criteria that can be used in conditional format or filter.","property":[{"name":"CELL_EMPTY","type":"Enum","doc":"The criteria is met when a cell is empty."},{"name":"CELL_NOT_EMPTY","type":"Enum","doc":"The criteria is met when a cell is not empty."},{"name":"DATE_AFTER","type":"Enum","doc":"The criteria is met when a date is after the given value."},{"name":"DATE_BEFORE","type":"Enum","doc":"The criteria is met when a date is before the given value."},{"name":"DATE_EQUAL_TO","type":"Enum","doc":"The criteria is met when a date is equal to the given value."},{"name":"DATE_AFTER_RELATIVE","type":"Enum","doc":"The criteria is met when a date is after the relative date value."},{"name":"DATE_BEFORE_RELATIVE","type":"Enum","doc":"The criteria is met when a date is before the relative date value."},{"name":"DATE_EQUAL_TO_RELATIVE","type":"Enum","doc":"The criteria is met when a date is equal to the relative date value."},{"name":"NUMBER_BETWEEN","type":"Enum","doc":"The criteria is met when a number that is between the given values."},{"name":"NUMBER_EQUAL_TO","type":"Enum","doc":"The criteria is met when a number that is equal to the given value."},{"name":"NUMBER_GREATER_THAN","type":"Enum","doc":"The criteria is met when a number that is greater than the given value."},{"name":"NUMBER_GREATER_THAN_OR_EQUAL_TO","type":"Enum","doc":"The criteria is met when a number that is greater than or equal to the given value."},{"name":"NUMBER_LESS_THAN","type":"Enum","doc":"The criteria is met when a number that is less than the given value."},{"name":"NUMBER_LESS_THAN_OR_EQUAL_TO","type":"Enum","doc":"The criteria is met when a number that is less than or equal to the given value."},{"name":"NUMBER_NOT_BETWEEN","type":"Enum","doc":"The criteria is met when a number that is not between the given values."},{"name":"NUMBER_NOT_EQUAL_TO","type":"Enum","doc":"The criteria is met when a number that is not equal to the given value."},{"name":"TEXT_CONTAINS","type":"Enum","doc":"The criteria is met when the input contains the given value."},{"name":"TEXT_DOES_NOT_CONTAIN","type":"Enum","doc":"The criteria is met when the input does not contain the given value."},{"name":"TEXT_EQUAL_TO","type":"Enum","doc":"The criteria is met when the input is equal to the given value."},{"name":"TEXT_STARTS_WITH","type":"Enum","doc":"The criteria is met when the input begins with the given value."},{"name":"TEXT_ENDS_WITH","type":"Enum","doc":"The criteria is met when the input ends with the given value."},{"name":"CUSTOM_FORMULA","type":"Enum","doc":"The criteria is met when the input makes the given formula evaluate to true."}],"method":[]},"spreadsheet.BorderStyle":{"name":"BorderStyle","kind":"enum","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/border-style","doc":"Styles that can be set on a range using Range.setBorder(top, left, bottom, right, vertical, horizontal, color, style).","property":[{"name":"DOTTED","type":"Enum","doc":"Dotted line borders."},{"name":"DASHED","type":"Enum","doc":"Dashed line borders."},{"name":"SOLID","type":"Enum","doc":"Thin solid line borders."},{"name":"SOLID_MEDIUM","type":"Enum","doc":"Medium solid line borders."},{"name":"SOLID_THICK","type":"Enum","doc":"Thick solid line borders."},{"name":"DOUBLE","type":"Enum","doc":"Two solid line borders."}],"method":[]},"spreadsheet.CopyPasteType":{"name":"CopyPasteType","kind":"enum","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/copy-paste-type","doc":"An enumeration of possible special paste types.","property":[{"name":"PASTE_NORMAL","type":"Enum","doc":"Paste values, formulas, formats and merges."},{"name":"PASTE_NO_BORDERS","type":"Enum","doc":"Paste values, formulas, formats and merges but without borders."},{"name":"PASTE_FORMAT","type":"Enum","doc":"Paste the format and data validation only."},{"name":"PASTE_FORMULA","type":"Enum","doc":"Paste the formulas only."},{"name":"PASTE_DATA_VALIDATION","type":"Enum","doc":"Paste the data validation only."},{"name":"PASTE_VALUES","type":"Enum","doc":"Paste the values ONLY without formats, formulas or merges."},{"name":"PASTE_CONDITIONAL_FORMATTING","type":"Enum","doc":"Paste the color rules only."},{"name":"PASTE_COLUMN_WIDTHS","type":"Enum","doc":"Paste the column widths only."}],"method":[]},"spreadsheet.DataValidationCriteria":{"name":"DataValidationCriteria","kind":"enum","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/data-validation-criteria","doc":"An enumeration representing the data validation criteria that can be set on a range.","property":[{"name":"DATE_AFTER","type":"Enum","doc":"Requires a date that is after the given value."},{"name":"DATE_BEFORE","type":"Enum","doc":"Requires a date that is before the given value."},{"name":"DATE_BETWEEN","type":"Enum","doc":"Requires a date that is between the given values."},{"name":"DATE_EQUAL_TO","type":"Enum","doc":"Requires a date that is equal to the given value."},{"name":"DATE_IS_VALID_DATE","type":"Enum","doc":"Requires a date."},{"name":"DATE_NOT_BETWEEN","type":"Enum","doc":"Requires a date that is not between the given values."},{"name":"DATE_ON_OR_AFTER","type":"Enum","doc":"Require a date that is on or after the given value."},{"name":"DATE_ON_OR_BEFORE","type":"Enum","doc":"Requires a date that is on or before the given value."},{"name":"NUMBER_BETWEEN","type":"Enum","doc":"Requires a number that is between the given values."},{"name":"NUMBER_EQUAL_TO","type":"Enum","doc":"Requires a number that is equal to the given value."},{"name":"NUMBER_GREATER_THAN","type":"Enum","doc":"Require a number that is greater than the given value."},{"name":"NUMBER_GREATER_THAN_OR_EQUAL_TO","type":"Enum","doc":"Requires a number that is greater than or equal to the given value."},{"name":"NUMBER_LESS_THAN","type":"Enum","doc":"Requires a number that is less than the given value."},{"name":"NUMBER_LESS_THAN_OR_EQUAL_TO","type":"Enum","doc":"Requires a number that is less than or equal to the given value."},{"name":"NUMBER_NOT_BETWEEN","type":"Enum","doc":"Requires a number that is not between the given values."},{"name":"NUMBER_NOT_EQUAL_TO","type":"Enum","doc":"Requires a number that is not equal to the given value."},{"name":"TEXT_CONTAINS","type":"Enum","doc":"Requires that the input contains the given value."},{"name":"TEXT_DOES_NOT_CONTAIN","type":"Enum","doc":"Requires that the input does not contain the given value."},{"name":"TEXT_EQUAL_TO","type":"Enum","doc":"Requires that the input is equal to the given value."},{"name":"TEXT_IS_VALID_EMAIL","type":"Enum","doc":"Requires that the input is in the form of an email address."},{"name":"TEXT_IS_VALID_URL","type":"Enum","doc":"Requires that the input is in the form of a URL."},{"name":"VALUE_IN_LIST","type":"Enum","doc":"Requires that the input is equal to one of the given values."},{"name":"VALUE_IN_RANGE","type":"Enum","doc":"Requires that the input is equal to a value in the given range."},{"name":"CUSTOM_FORMULA","type":"Enum","doc":"Requires that the input makes the given formula evaluate to true."},{"name":"CHECKBOX","type":"Enum","doc":"Requires that the input is a custom value or a boolean; rendered as a checkbox."}],"method":[]},"spreadsheet.Dimension":{"name":"Dimension","kind":"enum","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/dimension","doc":"An enumeration of possible directions along which data can be stored in a spreadsheet.","property":[{"name":"COLUMNS","type":"Enum","doc":"The column (vertical) dimension."},{"name":"ROWS","type":"Enum","doc":"The row (horizontal) dimension."}],"method":[]},"spreadsheet.Direction":{"name":"Direction","kind":"enum","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/direction","doc":"An enumeration representing the possible directions that one can move within a spreadsheet using the arrow keys.","property":[{"name":"UP","type":"Enum","doc":"The direction of decreasing row indices."},{"name":"DOWN","type":"Enum","doc":"The direction of increasing row indices."},{"name":"PREVIOUS","type":"Enum","doc":"The direction of decreasing column indices."},{"name":"NEXT","type":"Enum","doc":"The direction of increasing column indices."}],"method":[]},"spreadsheet.GroupControlTogglePosition":{"name":"GroupControlTogglePosition","kind":"enum","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/group-control-toggle-position","doc":"An enumeration representing the possible positions that a group control toggle can have.","property":[{"name":"BEFORE","type":"Enum","doc":"The position where the control toggle is before the group (at lower indices)."},{"name":"AFTER","type":"Enum","doc":"The position where the control toggle is after the group (at higher indices)."}],"method":[]},"spreadsheet.InterpolationType":{"name":"InterpolationType","kind":"enum","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/interpolation-type","doc":"An enumeration representing the interpolation options for calculating a value to be used in a GradientCondition in a ConditionalFormatRule.","property":[{"name":"NUMBER","type":"Enum","doc":"Use the number as as specific interpolation point for a gradient condition."},{"name":"PERCENT","type":"Enum","doc":"Use the number as a percentage interpolation point for a gradient condition."},{"name":"PERCENTILE","type":"Enum","doc":"Use the number as a percentile interpolation point for a gradient condition."},{"name":"MIN","type":"Enum","doc":"Infer the minimum number as a specific interpolation point for a gradient condition."},{"name":"MAX","type":"Enum","doc":"Infer the maximum number as a specific interpolation point for a gradient condition."}],"method":[]},"spreadsheet.PivotTableSummarizeFunction":{"name":"PivotTableSummarizeFunction","kind":"enum","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-table-summarize-function","doc":"An enumeration of functions that summarize pivot table data.","property":[{"name":"CUSTOM","type":"Enum","doc":"A custom fuction, this value is only valid for calcuated fields."},{"name":"SUM","type":"Enum","doc":"The SUM function"},{"name":"COUNTA","type":"Enum","doc":"The COUNTA function"},{"name":"COUNT","type":"Enum","doc":"The COUNT function"},{"name":"COUNTUNIQUE","type":"Enum","doc":"The COUNTUNIQUE function"},{"name":"AVERAGE","type":"Enum","doc":"The AVERAGE function"},{"name":"MAX","type":"Enum","doc":"The MAX function"},{"name":"MIN","type":"Enum","doc":"The MIN function"},{"name":"MEDIAN","type":"Enum","doc":"The MEDIAN function"},{"name":"PRODUCT","type":"Enum","doc":"The PRODUCT function"},{"name":"STDEV","type":"Enum","doc":"The STDEV function"},{"name":"STDEVP","type":"Enum","doc":"The STDEVP function"},{"name":"VAR","type":"Enum","doc":"The VAR function"},{"name":"VARP","type":"Enum","doc":"The VARP function"}],"method":[]},"spreadsheet.PivotValueDisplayType":{"name":"PivotValueDisplayType","kind":"enum","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/pivot-value-display-type","doc":"An enumeration of ways to display a pivot value as a function of another value.","property":[{"name":"DEFAULT","type":"Enum","doc":"Default. Displays pivot values as the actual value and not as a function of another value."},{"name":"PERCENT_OF_ROW_TOTAL","type":"Enum","doc":"Displays pivot values as a percent of the total for that row."},{"name":"PERCENT_OF_COLUMN_TOTAL","type":"Enum","doc":"Displays pivot values as a percent of the total for that column."},{"name":"PERCENT_OF_GRAND_TOTAL","type":"Enum","doc":"Displays pivot values as a percent of the grand total."}],"method":[]},"spreadsheet.ProtectionType":{"name":"ProtectionType","kind":"enum","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/protection-type","doc":"An enumeration representing the parts of a spreadsheet that can be protected from edits.","property":[{"name":"RANGE","type":"Enum","doc":"Protection for a range."},{"name":"SHEET","type":"Enum","doc":"Protection for a sheet."}],"method":[]},"spreadsheet.RelativeDate":{"name":"RelativeDate","kind":"enum","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/relative-date","doc":"An enumeration representing the relative date options for calculating a value to be used in date-based BooleanCriteria.","property":[{"name":"TODAY","type":"Enum","doc":"Dates compared against the current date."},{"name":"TOMORROW","type":"Enum","doc":"Dates compared against the date after the current date."},{"name":"YESTERDAY","type":"Enum","doc":"Dates compared against the date before the current date."},{"name":"PAST_WEEK","type":"Enum","doc":"Dates that fall within the past week period."},{"name":"PAST_MONTH","type":"Enum","doc":"Dates that fall within the past month period."},{"name":"PAST_YEAR","type":"Enum","doc":"Dates that fall within the past year period."}],"method":[]},"spreadsheet.TextDirection":{"name":"TextDirection","kind":"enum","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/text-direction","doc":"An enumerations of text directions.","property":[{"name":"LEFT_TO_RIGHT","type":"Enum","doc":"Left-to-right text direction."},{"name":"RIGHT_TO_LEFT","type":"Enum","doc":"Right-to-left text direction."}],"method":[]},"spreadsheet.TextToColumnsDelimiter":{"name":"TextToColumnsDelimiter","kind":"enum","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/text-to-columns-delimiter","doc":"An enumeration of the types of preset delimiters that can split a column of text into multiple columns.","property":[{"name":"COMMA","type":"Enum","doc":"\",\" delimiter."},{"name":"SEMICOLON","type":"Enum","doc":"\";\" delimiter."},{"name":"PERIOD","type":"Enum","doc":"\".\" delimiter."},{"name":"SPACE","type":"Enum","doc":"\" \" delimiter."}],"method":[]},"spreadsheet.WrapStrategy":{"name":"WrapStrategy","kind":"enum","global":false,"category":"spreadsheet","url":"https://developers.google.com/apps-script/reference/spreadsheet/wrap-strategy","doc":"An enumeration of the strategies used to handle cell text wrapping.","property":[{"name":"WRAP","type":"Enum","doc":"Wrap lines that are longer than the cell width onto a new line. Single words that are longer than a line are wrapped at the character level."},{"name":"OVERFLOW","type":"Enum","doc":"Overflow lines into the next cell, so long as that cell is empty. If the next cell over is non-empty, this behaves the same as CLIP."},{"name":"CLIP","type":"Enum","doc":"Clip lines that are longer than the cell width."}],"method":[]}}